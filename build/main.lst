ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hspi2
  18              		.section	.bss.hspi2,"aw",%nobits
  19              		.align	2
  22              	hspi2:
  23 0000 00000000 		.space	88
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.text.main,"ax",%progbits
  25              		.align	1
  26              		.global	main
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	main:
  32              	.LFB65:
  33              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 2


  24:Core/Src/main.c **** #include "sdcard_driver.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_SPI2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** // HAL_StatusTypeDef receive_byte(uint8_t* data);
  55:Core/Src/main.c **** // HAL_StatusTypeDef receive_bytes(uint8_t* data, const uint8_t size);
  56:Core/Src/main.c **** // HAL_StatusTypeDef transmit_bytes(const uint8_t* data, const uint8_t size);
  57:Core/Src/main.c **** // void fast_boot(void);
  58:Core/Src/main.c **** // HAL_StatusTypeDef wait_sd_response(uint8_t* data);
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  34              		.loc 1 71 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 3


  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
  45              		.cfi_def_cfa_register 7
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  46              		.loc 1 79 3
  47 0004 FFF7FEFF 		bl	HAL_Init
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  48              		.loc 1 86 3
  49 0008 FFF7FEFF 		bl	SystemClock_Config
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  50              		.loc 1 93 3
  51 000c FFF7FEFF 		bl	MX_GPIO_Init
  94:Core/Src/main.c ****   MX_SPI2_Init();
  52              		.loc 1 94 3
  53 0010 FFF7FEFF 		bl	MX_SPI2_Init
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   // sd_card_command cmd0 = sd_card_get_cmd(0, 0x0);
 102:Core/Src/main.c **** 	// sd_card_command cmd8 = sd_card_get_cmd(8, (1 << 8) | 0x55);
 103:Core/Src/main.c ****   // uint8_t cmd0_response = 0;
 104:Core/Src/main.c ****   // sd_card_r7_response cmd8_response = { 0 };
 105:Core/Src/main.c ****   // uint8_t data[6] = { 0 };
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   // fast_boot();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   // SELECT_SD();
 110:Core/Src/main.c **** 	// HAL_StatusTypeDef status = HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd0, 6, HAL_MAX_DELAY);
 111:Core/Src/main.c **** 	// // //status |= HAL_SPI_TransmitReceive(&hspi2, &cmd0_response, 1, HAL_MAX_DELAY);
 112:Core/Src/main.c ****   // // status |= receive_byte(&data);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   // //HAL_StatusTypeDef status = transmit_bytes((uint8_t*)&cmd0, 6);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   // while (data[0] == IN_IDLE_STATE)
 117:Core/Src/main.c ****   // {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 4


 118:Core/Src/main.c ****   //   status |= receive_byte(&data);
 119:Core/Src/main.c ****   // }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   // DISELECT_SD();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   // SELECT_SD();
 124:Core/Src/main.c **** 	// // status |= HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd8, 6, HAL_MAX_DELAY);
 125:Core/Src/main.c **** 	// // //status |= receive_cmd_response(&hspi2, (uint8_t*)&cmd8_response, 5, HAL_MAX_DELAY);
 126:Core/Src/main.c ****   // // //status |= HAL_SPI_TransmitReceive(&hspi2, (uint8_t*)&cmd8_response, 5, HAL_MAX_DELAY);
 127:Core/Src/main.c ****   // // status |= receive_byte(&data);
 128:Core/Src/main.c ****   // // status |= receive_byte(&data + 1);
 129:Core/Src/main.c ****   // // status |= receive_byte(&data + 2);
 130:Core/Src/main.c ****   // // status |= receive_byte(&data + 3);
 131:Core/Src/main.c ****   // // status |= receive_byte(&data + 4);
 132:Core/Src/main.c ****   // // status |= receive_byte(&data + 5);
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   // //status |= transmit_bytes((uint8_t*)&cmd8, 6);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   // // status |= HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd8, 6, HAL_MAX_DELAY);
 138:Core/Src/main.c ****   // // status |= receive_bytes(&data, 5); // r7
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   // status |= HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd8, 6, HAL_MAX_DELAY);
 141:Core/Src/main.c ****   // status |= wait_sd_response(&data);
 142:Core/Src/main.c ****   // status |= receive_bytes(&data, 5); // r7
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   // DISELECT_SD();
 145:Core/Src/main.c ****   
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /*
 148:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 149:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi2, (uint8_t*)&cmd0, buffer, 6, HAL_MAX_DELAY);
 150:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   sd_card_reset(&hspi2);
  54              		.loc 1 153 3
  55 0014 0148     		ldr	r0, .L3
  56 0016 FFF7FEFF 		bl	sd_card_reset
  57              	.L2:
 154:Core/Src/main.c ****   while (1)
  58              		.loc 1 154 9 discriminator 1
  59 001a FEE7     		b	.L2
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 001c 00000000 		.word	hspi2
  64              		.cfi_endproc
  65              	.LFE65:
  67              		.section	.text.SystemClock_Config,"ax",%progbits
  68              		.align	1
  69              		.global	SystemClock_Config
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	SystemClock_Config:
  75              	.LFB66:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 5


 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
  76              		.loc 1 168 1
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 64
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 90B0     		sub	sp, sp, #64
  86              	.LCFI3:
  87              		.cfi_def_cfa_offset 72
  88 0004 00AF     		add	r7, sp, #0
  89              	.LCFI4:
  90              		.cfi_def_cfa_register 7
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  91              		.loc 1 169 22
  92 0006 07F11803 		add	r3, r7, #24
  93 000a 2822     		movs	r2, #40
  94 000c 0021     		movs	r1, #0
  95 000e 1846     		mov	r0, r3
  96 0010 FFF7FEFF 		bl	memset
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  97              		.loc 1 170 22
  98 0014 3B1D     		adds	r3, r7, #4
  99 0016 0022     		movs	r2, #0
 100 0018 1A60     		str	r2, [r3]
 101 001a 5A60     		str	r2, [r3, #4]
 102 001c 9A60     		str	r2, [r3, #8]
 103 001e DA60     		str	r2, [r3, #12]
 104 0020 1A61     		str	r2, [r3, #16]
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 173:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 105              		.loc 1 175 36
 106 0022 0123     		movs	r3, #1
 107 0024 BB61     		str	r3, [r7, #24]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 108              		.loc 1 176 30
 109 0026 4FF48033 		mov	r3, #65536
 110 002a FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 6


 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 111              		.loc 1 177 36
 112 002c 0023     		movs	r3, #0
 113 002e 3B62     		str	r3, [r7, #32]
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 114              		.loc 1 178 30
 115 0030 0123     		movs	r3, #1
 116 0032 BB62     		str	r3, [r7, #40]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 117              		.loc 1 179 34
 118 0034 0223     		movs	r3, #2
 119 0036 7B63     		str	r3, [r7, #52]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 120              		.loc 1 180 35
 121 0038 4FF48033 		mov	r3, #65536
 122 003c BB63     		str	r3, [r7, #56]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 123              		.loc 1 181 32
 124 003e 4FF4E013 		mov	r3, #1835008
 125 0042 FB63     		str	r3, [r7, #60]
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126              		.loc 1 182 7
 127 0044 07F11803 		add	r3, r7, #24
 128 0048 1846     		mov	r0, r3
 129 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 130 004e 0346     		mov	r3, r0
 131              		.loc 1 182 6
 132 0050 002B     		cmp	r3, #0
 133 0052 01D0     		beq	.L6
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 134              		.loc 1 184 5
 135 0054 FFF7FEFF 		bl	Error_Handler
 136              	.L6:
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137              		.loc 1 189 31
 138 0058 0F23     		movs	r3, #15
 139 005a 7B60     		str	r3, [r7, #4]
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140              		.loc 1 191 34
 141 005c 0223     		movs	r3, #2
 142 005e BB60     		str	r3, [r7, #8]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143              		.loc 1 192 35
 144 0060 0023     		movs	r3, #0
 145 0062 FB60     		str	r3, [r7, #12]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 146              		.loc 1 193 36
 147 0064 4FF48063 		mov	r3, #1024
 148 0068 3B61     		str	r3, [r7, #16]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149              		.loc 1 194 36
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 7


 150 006a 0023     		movs	r3, #0
 151 006c 7B61     		str	r3, [r7, #20]
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 152              		.loc 1 196 7
 153 006e 3B1D     		adds	r3, r7, #4
 154 0070 0221     		movs	r1, #2
 155 0072 1846     		mov	r0, r3
 156 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 157 0078 0346     		mov	r3, r0
 158              		.loc 1 196 6
 159 007a 002B     		cmp	r3, #0
 160 007c 01D0     		beq	.L8
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 161              		.loc 1 198 5
 162 007e FFF7FEFF 		bl	Error_Handler
 163              	.L8:
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** }
 164              		.loc 1 200 1
 165 0082 00BF     		nop
 166 0084 4037     		adds	r7, r7, #64
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 8
 169 0086 BD46     		mov	sp, r7
 170              	.LCFI6:
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed
 173 0088 80BD     		pop	{r7, pc}
 174              		.cfi_endproc
 175              	.LFE66:
 177              		.section	.text.MX_SPI2_Init,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	MX_SPI2_Init:
 184              	.LFB67:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 204:Core/Src/main.c ****   * @param None
 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** static void MX_SPI2_Init(void)
 208:Core/Src/main.c **** {
 185              		.loc 1 208 1
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              	.LCFI7:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 8


 195              	.LCFI8:
 196              		.cfi_def_cfa_register 7
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 217:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 218:Core/Src/main.c ****   hspi2.Instance = SPI2;
 197              		.loc 1 218 18
 198 0004 174B     		ldr	r3, .L12
 199 0006 184A     		ldr	r2, .L12+4
 200 0008 1A60     		str	r2, [r3]
 219:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 201              		.loc 1 219 19
 202 000a 164B     		ldr	r3, .L12
 203 000c 4FF48272 		mov	r2, #260
 204 0010 5A60     		str	r2, [r3, #4]
 220:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 205              		.loc 1 220 24
 206 0012 144B     		ldr	r3, .L12
 207 0014 0022     		movs	r2, #0
 208 0016 9A60     		str	r2, [r3, #8]
 221:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 209              		.loc 1 221 23
 210 0018 124B     		ldr	r3, .L12
 211 001a 0022     		movs	r2, #0
 212 001c DA60     		str	r2, [r3, #12]
 222:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 213              		.loc 1 222 26
 214 001e 114B     		ldr	r3, .L12
 215 0020 0022     		movs	r2, #0
 216 0022 1A61     		str	r2, [r3, #16]
 223:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 217              		.loc 1 223 23
 218 0024 0F4B     		ldr	r3, .L12
 219 0026 0022     		movs	r2, #0
 220 0028 5A61     		str	r2, [r3, #20]
 224:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 221              		.loc 1 224 18
 222 002a 0E4B     		ldr	r3, .L12
 223 002c 4FF40072 		mov	r2, #512
 224 0030 9A61     		str	r2, [r3, #24]
 225:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 225              		.loc 1 225 32
 226 0032 0C4B     		ldr	r3, .L12
 227 0034 1822     		movs	r2, #24
 228 0036 DA61     		str	r2, [r3, #28]
 226:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 229              		.loc 1 226 23
 230 0038 0A4B     		ldr	r3, .L12
 231 003a 0022     		movs	r2, #0
 232 003c 1A62     		str	r2, [r3, #32]
 227:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 9


 233              		.loc 1 227 21
 234 003e 094B     		ldr	r3, .L12
 235 0040 0022     		movs	r2, #0
 236 0042 5A62     		str	r2, [r3, #36]
 228:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 237              		.loc 1 228 29
 238 0044 074B     		ldr	r3, .L12
 239 0046 0022     		movs	r2, #0
 240 0048 9A62     		str	r2, [r3, #40]
 229:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 241              		.loc 1 229 28
 242 004a 064B     		ldr	r3, .L12
 243 004c 0A22     		movs	r2, #10
 244 004e DA62     		str	r2, [r3, #44]
 230:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 245              		.loc 1 230 7
 246 0050 0448     		ldr	r0, .L12
 247 0052 FFF7FEFF 		bl	HAL_SPI_Init
 248 0056 0346     		mov	r3, r0
 249              		.loc 1 230 6
 250 0058 002B     		cmp	r3, #0
 251 005a 01D0     		beq	.L11
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 252              		.loc 1 232 5
 253 005c FFF7FEFF 		bl	Error_Handler
 254              	.L11:
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** }
 255              		.loc 1 238 1
 256 0060 00BF     		nop
 257 0062 80BD     		pop	{r7, pc}
 258              	.L13:
 259              		.align	2
 260              	.L12:
 261 0064 00000000 		.word	hspi2
 262 0068 00380040 		.word	1073756160
 263              		.cfi_endproc
 264              	.LFE67:
 266              		.section	.text.MX_GPIO_Init,"ax",%progbits
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	MX_GPIO_Init:
 273              	.LFB68:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief GPIO Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 10


 246:Core/Src/main.c **** {
 274              		.loc 1 246 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 32
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI9:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 88B0     		sub	sp, sp, #32
 284              	.LCFI10:
 285              		.cfi_def_cfa_offset 40
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI11:
 288              		.cfi_def_cfa_register 7
 247:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 289              		.loc 1 247 20
 290 0006 07F11003 		add	r3, r7, #16
 291 000a 0022     		movs	r2, #0
 292 000c 1A60     		str	r2, [r3]
 293 000e 5A60     		str	r2, [r3, #4]
 294 0010 9A60     		str	r2, [r3, #8]
 295 0012 DA60     		str	r2, [r3, #12]
 296              	.LBB4:
 248:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 249:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 252:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 297              		.loc 1 252 3
 298 0014 1E4B     		ldr	r3, .L15
 299 0016 9B69     		ldr	r3, [r3, #24]
 300 0018 1D4A     		ldr	r2, .L15
 301 001a 43F02003 		orr	r3, r3, #32
 302 001e 9361     		str	r3, [r2, #24]
 303 0020 1B4B     		ldr	r3, .L15
 304 0022 9B69     		ldr	r3, [r3, #24]
 305 0024 03F02003 		and	r3, r3, #32
 306 0028 FB60     		str	r3, [r7, #12]
 307 002a FB68     		ldr	r3, [r7, #12]
 308              	.LBE4:
 309              	.LBB5:
 253:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 310              		.loc 1 253 3
 311 002c 184B     		ldr	r3, .L15
 312 002e 9B69     		ldr	r3, [r3, #24]
 313 0030 174A     		ldr	r2, .L15
 314 0032 43F00803 		orr	r3, r3, #8
 315 0036 9361     		str	r3, [r2, #24]
 316 0038 154B     		ldr	r3, .L15
 317 003a 9B69     		ldr	r3, [r3, #24]
 318 003c 03F00803 		and	r3, r3, #8
 319 0040 BB60     		str	r3, [r7, #8]
 320 0042 BB68     		ldr	r3, [r7, #8]
 321              	.LBE5:
 322              	.LBB6:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 11


 254:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 323              		.loc 1 254 3
 324 0044 124B     		ldr	r3, .L15
 325 0046 9B69     		ldr	r3, [r3, #24]
 326 0048 114A     		ldr	r2, .L15
 327 004a 43F00403 		orr	r3, r3, #4
 328 004e 9361     		str	r3, [r2, #24]
 329 0050 0F4B     		ldr	r3, .L15
 330 0052 9B69     		ldr	r3, [r3, #24]
 331 0054 03F00403 		and	r3, r3, #4
 332 0058 7B60     		str	r3, [r7, #4]
 333 005a 7B68     		ldr	r3, [r7, #4]
 334              	.LBE6:
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 257:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 335              		.loc 1 257 3
 336 005c 0122     		movs	r2, #1
 337 005e 4FF48051 		mov	r1, #4096
 338 0062 0C48     		ldr	r0, .L15+4
 339 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /*Configure GPIO pin : PB12 */
 260:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 340              		.loc 1 260 23
 341 0068 4FF48053 		mov	r3, #4096
 342 006c 3B61     		str	r3, [r7, #16]
 261:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 343              		.loc 1 261 24
 344 006e 0123     		movs	r3, #1
 345 0070 7B61     		str	r3, [r7, #20]
 262:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 346              		.loc 1 262 24
 347 0072 0123     		movs	r3, #1
 348 0074 BB61     		str	r3, [r7, #24]
 263:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 349              		.loc 1 263 25
 350 0076 0223     		movs	r3, #2
 351 0078 FB61     		str	r3, [r7, #28]
 264:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 352              		.loc 1 264 3
 353 007a 07F11003 		add	r3, r7, #16
 354 007e 1946     		mov	r1, r3
 355 0080 0448     		ldr	r0, .L15+4
 356 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 267:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 268:Core/Src/main.c **** }
 357              		.loc 1 268 1
 358 0086 00BF     		nop
 359 0088 2037     		adds	r7, r7, #32
 360              	.LCFI12:
 361              		.cfi_def_cfa_offset 8
 362 008a BD46     		mov	sp, r7
 363              	.LCFI13:
 364              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 12


 365              		@ sp needed
 366 008c 80BD     		pop	{r7, pc}
 367              	.L16:
 368 008e 00BF     		.align	2
 369              	.L15:
 370 0090 00100240 		.word	1073876992
 371 0094 000C0140 		.word	1073810432
 372              		.cfi_endproc
 373              	.LFE68:
 375              		.section	.text.Error_Handler,"ax",%progbits
 376              		.align	1
 377              		.global	Error_Handler
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	Error_Handler:
 383              	.LFB69:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** // HAL_StatusTypeDef receive_byte(uint8_t* data)
 273:Core/Src/main.c **** // {
 274:Core/Src/main.c **** //   uint8_t dummy_data = 0xff;
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** //   return HAL_SPI_TransmitReceive(&hspi2, &dummy_data, data, 1, 1000);
 277:Core/Src/main.c **** // }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** // HAL_StatusTypeDef receive_bytes(uint8_t* data, const uint8_t size)
 280:Core/Src/main.c **** // {
 281:Core/Src/main.c **** //   HAL_StatusTypeDef status = 0;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** //   for (uint8_t i = 0; i < size; i++)
 284:Core/Src/main.c **** //     status += receive_byte(data + i);
 285:Core/Src/main.c ****   
 286:Core/Src/main.c **** //   return status;
 287:Core/Src/main.c **** // }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** // HAL_StatusTypeDef transmit_bytes(const uint8_t* data, const uint8_t size)
 290:Core/Src/main.c **** // {
 291:Core/Src/main.c **** //   HAL_StatusTypeDef status = 0;
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** //   for (int16_t i = size - 1; i >= 0; i--)
 294:Core/Src/main.c **** //     status += HAL_SPI_Transmit(&hspi2, data + i, 1, 1000);
 295:Core/Src/main.c ****   
 296:Core/Src/main.c **** //   return status;
 297:Core/Src/main.c **** // }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** // void fast_boot(void)
 300:Core/Src/main.c **** // {
 301:Core/Src/main.c **** //   uint8_t dummy_data = 0xff;
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** //   DISELECT_SD();
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** //   // Clock occurs only during transmission
 306:Core/Src/main.c **** //   for (uint8_t i = 0; i < 10; i++) // Need at least 74 ticks
 307:Core/Src/main.c **** //     HAL_SPI_Transmit(&hspi2, &dummy_data, 1, 1);
 308:Core/Src/main.c **** // }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 13


 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** // // We are trying to get a byte with the first zero bit.
 311:Core/Src/main.c **** // // The received byte is written to the argument
 312:Core/Src/main.c **** // HAL_StatusTypeDef wait_sd_response(uint8_t* data)
 313:Core/Src/main.c **** // {
 314:Core/Src/main.c **** //   HAL_StatusTypeDef status = 0;
 315:Core/Src/main.c **** //   uint32_t captured_tick = HAL_GetTick();
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** //   do
 318:Core/Src/main.c **** //   {
 319:Core/Src/main.c **** //     if ((HAL_GetTick() - captured_tick) > 500)
 320:Core/Src/main.c **** //       return HAL_TIMEOUT;
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** //     status |= receive_byte(&data);
 323:Core/Src/main.c **** //   } while (data == NULL); // ?
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** //   return status;
 326:Core/Src/main.c **** // }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /* USER CODE END 4 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /**
 331:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 332:Core/Src/main.c ****   * @retval None
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c **** void Error_Handler(void)
 335:Core/Src/main.c **** {
 384              		.loc 1 335 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI14:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI15:
 395              		.cfi_def_cfa_register 7
 396              	.LBB7:
 397              	.LBB8:
 398              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 14


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 15


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 16


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 399              		.loc 2 142 3
 400              		.syntax unified
 401              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 402 0004 72B6     		cpsid i
 403              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404              		.loc 2 143 1
 405              		.thumb
 406              		.syntax unified
 407 0006 00BF     		nop
 408              	.L18:
 409              	.LBE8:
 410              	.LBE7:
 336:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 337:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 338:Core/Src/main.c ****   __disable_irq();
 339:Core/Src/main.c ****   while (1)
 411              		.loc 1 339 9 discriminator 1
 412 0008 FEE7     		b	.L18
 413              		.cfi_endproc
 414              	.LFE69:
 416              		.text
 417              	.Letext0:
 418              		.file 3 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 419              		.file 4 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 420              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 421              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 422              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 423              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 424              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 425              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 426              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:22     .bss.hspi2:00000000 hspi2
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:19     .bss.hspi2:00000000 $d
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:25     .text.main:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:31     .text.main:00000000 main
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:74     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:272    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:183    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:63     .text.main:0000001c $d
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:68     .text.SystemClock_Config:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:382    .text.Error_Handler:00000000 Error_Handler
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:178    .text.MX_SPI2_Init:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:261    .text.MX_SPI2_Init:00000064 $d
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:267    .text.MX_GPIO_Init:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:370    .text.MX_GPIO_Init:00000090 $d
C:\Users\Matvey\AppData\Local\Temp\cc56yqvA.s:376    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
sd_card_reset
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_SPI_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
