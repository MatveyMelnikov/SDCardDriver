ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hspi2
  18              		.section	.bss.hspi2,"aw",%nobits
  19              		.align	2
  22              	hspi2:
  23 0000 00000000 		.space	88
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.text.main,"ax",%progbits
  25              		.align	1
  26              		.global	main
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	main:
  32              	.LFB65:
  33              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 2


  24:Core/Src/main.c **** #include "sdcard_driver.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_SPI2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** HAL_StatusTypeDef receive_byte(uint8_t* data);
  55:Core/Src/main.c **** HAL_StatusTypeDef receive_bytes(uint8_t* data, const uint8_t size);
  56:Core/Src/main.c **** HAL_StatusTypeDef transmit_bytes(const uint8_t* data, const uint8_t size);
  57:Core/Src/main.c **** void fast_boot(void);
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  34              		.loc 1 70 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 32
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 3


  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 40
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  49              		.loc 1 78 3
  50 0006 FFF7FEFF 		bl	HAL_Init
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  51              		.loc 1 85 3
  52 000a FFF7FEFF 		bl	SystemClock_Config
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  53              		.loc 1 92 3
  54 000e FFF7FEFF 		bl	MX_GPIO_Init
  93:Core/Src/main.c ****   MX_SPI2_Init();
  55              		.loc 1 93 3
  56 0012 FFF7FEFF 		bl	MX_SPI2_Init
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Infinite loop */
  99:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****   //sdcard_reset(&hspi2);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   sd_card_command cmd0 = get_cmd(0, 0x0);
  57              		.loc 1 102 26
  58 0016 07F11803 		add	r3, r7, #24
  59 001a 0022     		movs	r2, #0
  60 001c 0021     		movs	r1, #0
  61 001e 1846     		mov	r0, r3
  62 0020 FFF7FEFF 		bl	get_cmd
 103:Core/Src/main.c **** 	sd_card_command cmd8 = get_cmd(8, (1 << 8) | 0x55);
  63              		.loc 1 103 25
  64 0024 07F11003 		add	r3, r7, #16
  65 0028 40F25512 		movw	r2, #341
  66 002c 0821     		movs	r1, #8
  67 002e 1846     		mov	r0, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 4


  68 0030 FFF7FEFF 		bl	get_cmd
 104:Core/Src/main.c ****   uint8_t cmd0_response = 0;
  69              		.loc 1 104 11
  70 0034 0023     		movs	r3, #0
  71 0036 BB77     		strb	r3, [r7, #30]
 105:Core/Src/main.c ****   sd_card_r7_response cmd8_response = { 0 };
  72              		.loc 1 105 23
  73 0038 07F10803 		add	r3, r7, #8
  74 003c 0022     		movs	r2, #0
  75 003e 1A60     		str	r2, [r3]
  76 0040 9A80     		strh	r2, [r3, #4]	@ movhi
 106:Core/Src/main.c ****   uint8_t data[6] = { 0 };
  77              		.loc 1 106 11
  78 0042 0023     		movs	r3, #0
  79 0044 3B60     		str	r3, [r7]
  80 0046 0023     		movs	r3, #0
  81 0048 BB80     		strh	r3, [r7, #4]	@ movhi
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   fast_boot();
  82              		.loc 1 108 3
  83 004a FFF7FEFF 		bl	fast_boot
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   SELECT_CHIP();
  84              		.loc 1 110 3
  85 004e 0022     		movs	r2, #0
  86 0050 4FF48051 		mov	r1, #4096
  87 0054 2048     		ldr	r0, .L5
  88 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 111:Core/Src/main.c **** 	HAL_StatusTypeDef status = HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd0, 6, HAL_MAX_DELAY);
  89              		.loc 1 111 29
  90 005a 07F11801 		add	r1, r7, #24
  91 005e 4FF0FF33 		mov	r3, #-1
  92 0062 0622     		movs	r2, #6
  93 0064 1D48     		ldr	r0, .L5+4
  94 0066 FFF7FEFF 		bl	HAL_SPI_Transmit
  95 006a 0346     		mov	r3, r0
  96 006c FB77     		strb	r3, [r7, #31]
 112:Core/Src/main.c **** 	// //status |= HAL_SPI_TransmitReceive(&hspi2, &cmd0_response, 1, HAL_MAX_DELAY);
 113:Core/Src/main.c ****   // status |= receive_byte(&data);
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   //HAL_StatusTypeDef status = transmit_bytes((uint8_t*)&cmd0, 6);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   while (data[0] != 0x01) // check idle state
  97              		.loc 1 117 9
  98 006e 08E0     		b	.L2
  99              	.L3:
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     status |= receive_byte(&data);
 100              		.loc 1 119 15
 101 0070 3B46     		mov	r3, r7
 102 0072 1846     		mov	r0, r3
 103 0074 FFF7FEFF 		bl	receive_byte
 104 0078 0346     		mov	r3, r0
 105 007a 1A46     		mov	r2, r3
 106              		.loc 1 119 12
 107 007c FB7F     		ldrb	r3, [r7, #31]
 108 007e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 5


 109 0080 FB77     		strb	r3, [r7, #31]
 110              	.L2:
 117:Core/Src/main.c ****   {
 111              		.loc 1 117 14
 112 0082 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 117:Core/Src/main.c ****   {
 113              		.loc 1 117 9
 114 0084 012B     		cmp	r3, #1
 115 0086 F3D1     		bne	.L3
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   DISELECT_CHIP();
 116              		.loc 1 122 3
 117 0088 0122     		movs	r2, #1
 118 008a 4FF48051 		mov	r1, #4096
 119 008e 1248     		ldr	r0, .L5
 120 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   SELECT_CHIP();
 121              		.loc 1 124 3
 122 0094 0022     		movs	r2, #0
 123 0096 4FF48051 		mov	r1, #4096
 124 009a 0F48     		ldr	r0, .L5
 125 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 125:Core/Src/main.c **** 	// status |= HAL_SPI_Transmit(&hspi2, (uint8_t*)&cmd8, 6, HAL_MAX_DELAY);
 126:Core/Src/main.c **** 	// //status |= receive_cmd_response(&hspi2, (uint8_t*)&cmd8_response, 5, HAL_MAX_DELAY);
 127:Core/Src/main.c ****   // //status |= HAL_SPI_TransmitReceive(&hspi2, (uint8_t*)&cmd8_response, 5, HAL_MAX_DELAY);
 128:Core/Src/main.c ****   // status |= receive_byte(&data);
 129:Core/Src/main.c ****   // status |= receive_byte(&data + 1);
 130:Core/Src/main.c ****   // status |= receive_byte(&data + 2);
 131:Core/Src/main.c ****   // status |= receive_byte(&data + 3);
 132:Core/Src/main.c ****   // status |= receive_byte(&data + 4);
 133:Core/Src/main.c ****   // status |= receive_byte(&data + 5);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   status |= transmit_bytes((uint8_t*)&cmd8, 6);
 126              		.loc 1 135 13
 127 00a0 07F11003 		add	r3, r7, #16
 128 00a4 0621     		movs	r1, #6
 129 00a6 1846     		mov	r0, r3
 130 00a8 FFF7FEFF 		bl	transmit_bytes
 131 00ac 0346     		mov	r3, r0
 132 00ae 1A46     		mov	r2, r3
 133              		.loc 1 135 10
 134 00b0 FB7F     		ldrb	r3, [r7, #31]
 135 00b2 1343     		orrs	r3, r3, r2
 136 00b4 FB77     		strb	r3, [r7, #31]
 136:Core/Src/main.c ****   status |= receive_bytes(&data, 6); // r7
 137              		.loc 1 136 13
 138 00b6 3B46     		mov	r3, r7
 139 00b8 0621     		movs	r1, #6
 140 00ba 1846     		mov	r0, r3
 141 00bc FFF7FEFF 		bl	receive_bytes
 142 00c0 0346     		mov	r3, r0
 143 00c2 1A46     		mov	r2, r3
 144              		.loc 1 136 10
 145 00c4 FB7F     		ldrb	r3, [r7, #31]
 146 00c6 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 6


 147 00c8 FB77     		strb	r3, [r7, #31]
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   DISELECT_CHIP();
 148              		.loc 1 138 3
 149 00ca 0122     		movs	r2, #1
 150 00cc 4FF48051 		mov	r1, #4096
 151 00d0 0148     		ldr	r0, .L5
 152 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.L4:
 139:Core/Src/main.c ****   
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /*
 142:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 143:Core/Src/main.c ****   HAL_SPI_TransmitReceive(&hspi2, (uint8_t*)&cmd0, buffer, 6, HAL_MAX_DELAY);
 144:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   while (1)
 154              		.loc 1 147 9 discriminator 1
 155 00d6 FEE7     		b	.L4
 156              	.L6:
 157              		.align	2
 158              	.L5:
 159 00d8 000C0140 		.word	1073810432
 160 00dc 00000000 		.word	hspi2
 161              		.cfi_endproc
 162              	.LFE65:
 164              		.section	.text.SystemClock_Config,"ax",%progbits
 165              		.align	1
 166              		.global	SystemClock_Config
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	SystemClock_Config:
 172              	.LFB66:
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     /* USER CODE END WHILE */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   /* USER CODE END 3 */
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief System Clock Configuration
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** void SystemClock_Config(void)
 161:Core/Src/main.c **** {
 173              		.loc 1 161 1
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 64
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 7


 181              		.cfi_offset 14, -4
 182 0002 90B0     		sub	sp, sp, #64
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 72
 185 0004 00AF     		add	r7, sp, #0
 186              	.LCFI5:
 187              		.cfi_def_cfa_register 7
 162:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 188              		.loc 1 162 22
 189 0006 07F11803 		add	r3, r7, #24
 190 000a 2822     		movs	r2, #40
 191 000c 0021     		movs	r1, #0
 192 000e 1846     		mov	r0, r3
 193 0010 FFF7FEFF 		bl	memset
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 194              		.loc 1 163 22
 195 0014 3B1D     		adds	r3, r7, #4
 196 0016 0022     		movs	r2, #0
 197 0018 1A60     		str	r2, [r3]
 198 001a 5A60     		str	r2, [r3, #4]
 199 001c 9A60     		str	r2, [r3, #8]
 200 001e DA60     		str	r2, [r3, #12]
 201 0020 1A61     		str	r2, [r3, #16]
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 166:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 202              		.loc 1 168 36
 203 0022 0123     		movs	r3, #1
 204 0024 BB61     		str	r3, [r7, #24]
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 205              		.loc 1 169 30
 206 0026 4FF48033 		mov	r3, #65536
 207 002a FB61     		str	r3, [r7, #28]
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 208              		.loc 1 170 36
 209 002c 0023     		movs	r3, #0
 210 002e 3B62     		str	r3, [r7, #32]
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 211              		.loc 1 171 30
 212 0030 0123     		movs	r3, #1
 213 0032 BB62     		str	r3, [r7, #40]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214              		.loc 1 172 34
 215 0034 0223     		movs	r3, #2
 216 0036 7B63     		str	r3, [r7, #52]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 217              		.loc 1 173 35
 218 0038 4FF48033 		mov	r3, #65536
 219 003c BB63     		str	r3, [r7, #56]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 220              		.loc 1 174 32
 221 003e 4FF4E013 		mov	r3, #1835008
 222 0042 FB63     		str	r3, [r7, #60]
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 223              		.loc 1 175 7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 8


 224 0044 07F11803 		add	r3, r7, #24
 225 0048 1846     		mov	r0, r3
 226 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 227 004e 0346     		mov	r3, r0
 228              		.loc 1 175 6
 229 0050 002B     		cmp	r3, #0
 230 0052 01D0     		beq	.L8
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 231              		.loc 1 177 5
 232 0054 FFF7FEFF 		bl	Error_Handler
 233              	.L8:
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 234              		.loc 1 182 31
 235 0058 0F23     		movs	r3, #15
 236 005a 7B60     		str	r3, [r7, #4]
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 237              		.loc 1 184 34
 238 005c 0223     		movs	r3, #2
 239 005e BB60     		str	r3, [r7, #8]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 240              		.loc 1 185 35
 241 0060 0023     		movs	r3, #0
 242 0062 FB60     		str	r3, [r7, #12]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 243              		.loc 1 186 36
 244 0064 4FF48063 		mov	r3, #1024
 245 0068 3B61     		str	r3, [r7, #16]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 246              		.loc 1 187 36
 247 006a 0023     		movs	r3, #0
 248 006c 7B61     		str	r3, [r7, #20]
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 249              		.loc 1 189 7
 250 006e 3B1D     		adds	r3, r7, #4
 251 0070 0221     		movs	r1, #2
 252 0072 1846     		mov	r0, r3
 253 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 254 0078 0346     		mov	r3, r0
 255              		.loc 1 189 6
 256 007a 002B     		cmp	r3, #0
 257 007c 01D0     		beq	.L10
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 258              		.loc 1 191 5
 259 007e FFF7FEFF 		bl	Error_Handler
 260              	.L10:
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c **** }
 261              		.loc 1 193 1
 262 0082 00BF     		nop
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 9


 263 0084 4037     		adds	r7, r7, #64
 264              	.LCFI6:
 265              		.cfi_def_cfa_offset 8
 266 0086 BD46     		mov	sp, r7
 267              	.LCFI7:
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 0088 80BD     		pop	{r7, pc}
 271              		.cfi_endproc
 272              	.LFE66:
 274              		.section	.text.MX_SPI2_Init,"ax",%progbits
 275              		.align	1
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	MX_SPI2_Init:
 281              	.LFB67:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 197:Core/Src/main.c ****   * @param None
 198:Core/Src/main.c ****   * @retval None
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** static void MX_SPI2_Init(void)
 201:Core/Src/main.c **** {
 282              		.loc 1 201 1
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286 0000 80B5     		push	{r7, lr}
 287              	.LCFI8:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              	.LCFI9:
 293              		.cfi_def_cfa_register 7
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 210:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 211:Core/Src/main.c ****   hspi2.Instance = SPI2;
 294              		.loc 1 211 18
 295 0004 174B     		ldr	r3, .L14
 296 0006 184A     		ldr	r2, .L14+4
 297 0008 1A60     		str	r2, [r3]
 212:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 298              		.loc 1 212 19
 299 000a 164B     		ldr	r3, .L14
 300 000c 4FF48272 		mov	r2, #260
 301 0010 5A60     		str	r2, [r3, #4]
 213:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 10


 302              		.loc 1 213 24
 303 0012 144B     		ldr	r3, .L14
 304 0014 0022     		movs	r2, #0
 305 0016 9A60     		str	r2, [r3, #8]
 214:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 306              		.loc 1 214 23
 307 0018 124B     		ldr	r3, .L14
 308 001a 0022     		movs	r2, #0
 309 001c DA60     		str	r2, [r3, #12]
 215:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 310              		.loc 1 215 26
 311 001e 114B     		ldr	r3, .L14
 312 0020 0022     		movs	r2, #0
 313 0022 1A61     		str	r2, [r3, #16]
 216:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 314              		.loc 1 216 23
 315 0024 0F4B     		ldr	r3, .L14
 316 0026 0022     		movs	r2, #0
 317 0028 5A61     		str	r2, [r3, #20]
 217:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 318              		.loc 1 217 18
 319 002a 0E4B     		ldr	r3, .L14
 320 002c 4FF40072 		mov	r2, #512
 321 0030 9A61     		str	r2, [r3, #24]
 218:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 322              		.loc 1 218 32
 323 0032 0C4B     		ldr	r3, .L14
 324 0034 1822     		movs	r2, #24
 325 0036 DA61     		str	r2, [r3, #28]
 219:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 326              		.loc 1 219 23
 327 0038 0A4B     		ldr	r3, .L14
 328 003a 0022     		movs	r2, #0
 329 003c 1A62     		str	r2, [r3, #32]
 220:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 330              		.loc 1 220 21
 331 003e 094B     		ldr	r3, .L14
 332 0040 0022     		movs	r2, #0
 333 0042 5A62     		str	r2, [r3, #36]
 221:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 334              		.loc 1 221 29
 335 0044 074B     		ldr	r3, .L14
 336 0046 0022     		movs	r2, #0
 337 0048 9A62     		str	r2, [r3, #40]
 222:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 338              		.loc 1 222 28
 339 004a 064B     		ldr	r3, .L14
 340 004c 0A22     		movs	r2, #10
 341 004e DA62     		str	r2, [r3, #44]
 223:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 342              		.loc 1 223 7
 343 0050 0448     		ldr	r0, .L14
 344 0052 FFF7FEFF 		bl	HAL_SPI_Init
 345 0056 0346     		mov	r3, r0
 346              		.loc 1 223 6
 347 0058 002B     		cmp	r3, #0
 348 005a 01D0     		beq	.L13
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 11


 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 349              		.loc 1 225 5
 350 005c FFF7FEFF 		bl	Error_Handler
 351              	.L13:
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** }
 352              		.loc 1 231 1
 353 0060 00BF     		nop
 354 0062 80BD     		pop	{r7, pc}
 355              	.L15:
 356              		.align	2
 357              	.L14:
 358 0064 00000000 		.word	hspi2
 359 0068 00380040 		.word	1073756160
 360              		.cfi_endproc
 361              	.LFE67:
 363              		.section	.text.MX_GPIO_Init,"ax",%progbits
 364              		.align	1
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	MX_GPIO_Init:
 370              	.LFB68:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief GPIO Initialization Function
 235:Core/Src/main.c ****   * @param None
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** static void MX_GPIO_Init(void)
 239:Core/Src/main.c **** {
 371              		.loc 1 239 1
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 32
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375 0000 80B5     		push	{r7, lr}
 376              	.LCFI10:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 88B0     		sub	sp, sp, #32
 381              	.LCFI11:
 382              		.cfi_def_cfa_offset 40
 383 0004 00AF     		add	r7, sp, #0
 384              	.LCFI12:
 385              		.cfi_def_cfa_register 7
 240:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 386              		.loc 1 240 20
 387 0006 07F11003 		add	r3, r7, #16
 388 000a 0022     		movs	r2, #0
 389 000c 1A60     		str	r2, [r3]
 390 000e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 12


 391 0010 9A60     		str	r2, [r3, #8]
 392 0012 DA60     		str	r2, [r3, #12]
 393              	.LBB4:
 241:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 242:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 245:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 394              		.loc 1 245 3
 395 0014 1E4B     		ldr	r3, .L17
 396 0016 9B69     		ldr	r3, [r3, #24]
 397 0018 1D4A     		ldr	r2, .L17
 398 001a 43F02003 		orr	r3, r3, #32
 399 001e 9361     		str	r3, [r2, #24]
 400 0020 1B4B     		ldr	r3, .L17
 401 0022 9B69     		ldr	r3, [r3, #24]
 402 0024 03F02003 		and	r3, r3, #32
 403 0028 FB60     		str	r3, [r7, #12]
 404 002a FB68     		ldr	r3, [r7, #12]
 405              	.LBE4:
 406              	.LBB5:
 246:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 407              		.loc 1 246 3
 408 002c 184B     		ldr	r3, .L17
 409 002e 9B69     		ldr	r3, [r3, #24]
 410 0030 174A     		ldr	r2, .L17
 411 0032 43F00803 		orr	r3, r3, #8
 412 0036 9361     		str	r3, [r2, #24]
 413 0038 154B     		ldr	r3, .L17
 414 003a 9B69     		ldr	r3, [r3, #24]
 415 003c 03F00803 		and	r3, r3, #8
 416 0040 BB60     		str	r3, [r7, #8]
 417 0042 BB68     		ldr	r3, [r7, #8]
 418              	.LBE5:
 419              	.LBB6:
 247:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 420              		.loc 1 247 3
 421 0044 124B     		ldr	r3, .L17
 422 0046 9B69     		ldr	r3, [r3, #24]
 423 0048 114A     		ldr	r2, .L17
 424 004a 43F00403 		orr	r3, r3, #4
 425 004e 9361     		str	r3, [r2, #24]
 426 0050 0F4B     		ldr	r3, .L17
 427 0052 9B69     		ldr	r3, [r3, #24]
 428 0054 03F00403 		and	r3, r3, #4
 429 0058 7B60     		str	r3, [r7, #4]
 430 005a 7B68     		ldr	r3, [r7, #4]
 431              	.LBE6:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 250:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 432              		.loc 1 250 3
 433 005c 0122     		movs	r2, #1
 434 005e 4FF48051 		mov	r1, #4096
 435 0062 0C48     		ldr	r0, .L17+4
 436 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 251:Core/Src/main.c **** 
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 13


 252:Core/Src/main.c ****   /*Configure GPIO pin : PB12 */
 253:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 437              		.loc 1 253 23
 438 0068 4FF48053 		mov	r3, #4096
 439 006c 3B61     		str	r3, [r7, #16]
 254:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 440              		.loc 1 254 24
 441 006e 0123     		movs	r3, #1
 442 0070 7B61     		str	r3, [r7, #20]
 255:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 443              		.loc 1 255 24
 444 0072 0123     		movs	r3, #1
 445 0074 BB61     		str	r3, [r7, #24]
 256:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 446              		.loc 1 256 25
 447 0076 0223     		movs	r3, #2
 448 0078 FB61     		str	r3, [r7, #28]
 257:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 449              		.loc 1 257 3
 450 007a 07F11003 		add	r3, r7, #16
 451 007e 1946     		mov	r1, r3
 452 0080 0448     		ldr	r0, .L17+4
 453 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 260:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 261:Core/Src/main.c **** }
 454              		.loc 1 261 1
 455 0086 00BF     		nop
 456 0088 2037     		adds	r7, r7, #32
 457              	.LCFI13:
 458              		.cfi_def_cfa_offset 8
 459 008a BD46     		mov	sp, r7
 460              	.LCFI14:
 461              		.cfi_def_cfa_register 13
 462              		@ sp needed
 463 008c 80BD     		pop	{r7, pc}
 464              	.L18:
 465 008e 00BF     		.align	2
 466              	.L17:
 467 0090 00100240 		.word	1073876992
 468 0094 000C0140 		.word	1073810432
 469              		.cfi_endproc
 470              	.LFE68:
 472              		.section	.text.receive_byte,"ax",%progbits
 473              		.align	1
 474              		.global	receive_byte
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	receive_byte:
 480              	.LFB69:
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** HAL_StatusTypeDef receive_byte(uint8_t* data)
 266:Core/Src/main.c **** {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 14


 481              		.loc 1 266 1
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 16
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 0000 80B5     		push	{r7, lr}
 486              	.LCFI15:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 7, -8
 489              		.cfi_offset 14, -4
 490 0002 86B0     		sub	sp, sp, #24
 491              	.LCFI16:
 492              		.cfi_def_cfa_offset 32
 493 0004 02AF     		add	r7, sp, #8
 494              	.LCFI17:
 495              		.cfi_def_cfa 7, 24
 496 0006 7860     		str	r0, [r7, #4]
 267:Core/Src/main.c ****   uint8_t dummy_data = 0xff;
 497              		.loc 1 267 11
 498 0008 FF23     		movs	r3, #255
 499 000a FB73     		strb	r3, [r7, #15]
 268:Core/Src/main.c ****   // uint32_t captured_tick = HAL_GetTick();
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   // while (HAL_SPI_GetState(&hspi2) != HAL_SPI_STATE_READY)
 271:Core/Src/main.c ****   // {
 272:Core/Src/main.c ****   //   if (HAL_GetTick() - captured_tick > 1000)
 273:Core/Src/main.c ****   //     return HAL_TIMEOUT;
 274:Core/Src/main.c ****   // }
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   return HAL_SPI_TransmitReceive(&hspi2, &dummy_data, data, 1, 1000);
 500              		.loc 1 276 10
 501 000c 07F10F01 		add	r1, r7, #15
 502 0010 4FF47A73 		mov	r3, #1000
 503 0014 0093     		str	r3, [sp]
 504 0016 0123     		movs	r3, #1
 505 0018 7A68     		ldr	r2, [r7, #4]
 506 001a 0448     		ldr	r0, .L21
 507 001c FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 508 0020 0346     		mov	r3, r0
 277:Core/Src/main.c **** }
 509              		.loc 1 277 1
 510 0022 1846     		mov	r0, r3
 511 0024 1037     		adds	r7, r7, #16
 512              	.LCFI18:
 513              		.cfi_def_cfa_offset 8
 514 0026 BD46     		mov	sp, r7
 515              	.LCFI19:
 516              		.cfi_def_cfa_register 13
 517              		@ sp needed
 518 0028 80BD     		pop	{r7, pc}
 519              	.L22:
 520 002a 00BF     		.align	2
 521              	.L21:
 522 002c 00000000 		.word	hspi2
 523              		.cfi_endproc
 524              	.LFE69:
 526              		.section	.text.receive_bytes,"ax",%progbits
 527              		.align	1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 15


 528              		.global	receive_bytes
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 533              	receive_bytes:
 534              	.LFB70:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** HAL_StatusTypeDef receive_bytes(uint8_t* data, const uint8_t size)
 280:Core/Src/main.c **** {
 535              		.loc 1 280 1
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI20:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 84B0     		sub	sp, sp, #16
 545              	.LCFI21:
 546              		.cfi_def_cfa_offset 24
 547 0004 00AF     		add	r7, sp, #0
 548              	.LCFI22:
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 551 0008 0B46     		mov	r3, r1
 552 000a FB70     		strb	r3, [r7, #3]
 281:Core/Src/main.c ****   HAL_StatusTypeDef status = 0;
 553              		.loc 1 281 21
 554 000c 0023     		movs	r3, #0
 555 000e FB73     		strb	r3, [r7, #15]
 556              	.LBB7:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   for (uint8_t i = 0; i < size; i++)
 557              		.loc 1 283 16
 558 0010 0023     		movs	r3, #0
 559 0012 BB73     		strb	r3, [r7, #14]
 560              		.loc 1 283 3
 561 0014 0DE0     		b	.L24
 562              	.L25:
 284:Core/Src/main.c ****     status += receive_byte(data + i);
 563              		.loc 1 284 15 discriminator 3
 564 0016 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 565 0018 7A68     		ldr	r2, [r7, #4]
 566 001a 1344     		add	r3, r3, r2
 567 001c 1846     		mov	r0, r3
 568 001e FFF7FEFF 		bl	receive_byte
 569 0022 0346     		mov	r3, r0
 570 0024 1A46     		mov	r2, r3
 571              		.loc 1 284 12 discriminator 3
 572 0026 FB7B     		ldrb	r3, [r7, #15]
 573 0028 1344     		add	r3, r3, r2
 574 002a FB73     		strb	r3, [r7, #15]
 283:Core/Src/main.c ****     status += receive_byte(data + i);
 575              		.loc 1 283 34 discriminator 3
 576 002c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 577 002e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 16


 578 0030 BB73     		strb	r3, [r7, #14]
 579              	.L24:
 283:Core/Src/main.c ****     status += receive_byte(data + i);
 580              		.loc 1 283 3 discriminator 1
 581 0032 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 582 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 583 0036 9A42     		cmp	r2, r3
 584 0038 EDD3     		bcc	.L25
 585              	.LBE7:
 285:Core/Src/main.c ****   
 286:Core/Src/main.c ****   return status;
 586              		.loc 1 286 10
 587 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 287:Core/Src/main.c **** }
 588              		.loc 1 287 1
 589 003c 1846     		mov	r0, r3
 590 003e 1037     		adds	r7, r7, #16
 591              	.LCFI23:
 592              		.cfi_def_cfa_offset 8
 593 0040 BD46     		mov	sp, r7
 594              	.LCFI24:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 0042 80BD     		pop	{r7, pc}
 598              		.cfi_endproc
 599              	.LFE70:
 601              		.section	.text.transmit_bytes,"ax",%progbits
 602              		.align	1
 603              		.global	transmit_bytes
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	transmit_bytes:
 609              	.LFB71:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** HAL_StatusTypeDef transmit_bytes(const uint8_t* data, const uint8_t size)
 290:Core/Src/main.c **** {
 610              		.loc 1 290 1
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              	.LCFI25:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 7, -8
 618              		.cfi_offset 14, -4
 619 0002 84B0     		sub	sp, sp, #16
 620              	.LCFI26:
 621              		.cfi_def_cfa_offset 24
 622 0004 00AF     		add	r7, sp, #0
 623              	.LCFI27:
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 626 0008 0B46     		mov	r3, r1
 627 000a FB70     		strb	r3, [r7, #3]
 291:Core/Src/main.c ****     HAL_StatusTypeDef status = 0;
 628              		.loc 1 291 23
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 17


 629 000c 0023     		movs	r3, #0
 630 000e FB73     		strb	r3, [r7, #15]
 631              	.LBB8:
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   for (int16_t i = size - 1; i >= 0; i--)
 632              		.loc 1 293 25
 633 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 634 0012 9BB2     		uxth	r3, r3
 635 0014 013B     		subs	r3, r3, #1
 636 0016 9BB2     		uxth	r3, r3
 637              		.loc 1 293 16
 638 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 639              		.loc 1 293 3
 640 001a 14E0     		b	.L28
 641              	.L29:
 294:Core/Src/main.c ****     status += HAL_SPI_Transmit(&hspi2, data + i, 1, 1000);
 642              		.loc 1 294 15 discriminator 3
 643 001c B7F90C30 		ldrsh	r3, [r7, #12]
 644              		.loc 1 294 45 discriminator 3
 645 0020 7A68     		ldr	r2, [r7, #4]
 646 0022 D118     		adds	r1, r2, r3
 647              		.loc 1 294 15 discriminator 3
 648 0024 4FF47A73 		mov	r3, #1000
 649 0028 0122     		movs	r2, #1
 650 002a 0B48     		ldr	r0, .L31
 651 002c FFF7FEFF 		bl	HAL_SPI_Transmit
 652 0030 0346     		mov	r3, r0
 653 0032 1A46     		mov	r2, r3
 654              		.loc 1 294 12 discriminator 3
 655 0034 FB7B     		ldrb	r3, [r7, #15]
 656 0036 1344     		add	r3, r3, r2
 657 0038 FB73     		strb	r3, [r7, #15]
 293:Core/Src/main.c ****     status += HAL_SPI_Transmit(&hspi2, data + i, 1, 1000);
 658              		.loc 1 293 39 discriminator 3
 659 003a B7F90C30 		ldrsh	r3, [r7, #12]
 660 003e 9BB2     		uxth	r3, r3
 661 0040 013B     		subs	r3, r3, #1
 662 0042 9BB2     		uxth	r3, r3
 663 0044 BB81     		strh	r3, [r7, #12]	@ movhi
 664              	.L28:
 293:Core/Src/main.c ****     status += HAL_SPI_Transmit(&hspi2, data + i, 1, 1000);
 665              		.loc 1 293 3 discriminator 1
 666 0046 B7F90C30 		ldrsh	r3, [r7, #12]
 667 004a 002B     		cmp	r3, #0
 668 004c E6DA     		bge	.L29
 669              	.LBE8:
 295:Core/Src/main.c ****   
 296:Core/Src/main.c ****   return status;
 670              		.loc 1 296 10
 671 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 297:Core/Src/main.c **** }
 672              		.loc 1 297 1
 673 0050 1846     		mov	r0, r3
 674 0052 1037     		adds	r7, r7, #16
 675              	.LCFI28:
 676              		.cfi_def_cfa_offset 8
 677 0054 BD46     		mov	sp, r7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 18


 678              	.LCFI29:
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 0056 80BD     		pop	{r7, pc}
 682              	.L32:
 683              		.align	2
 684              	.L31:
 685 0058 00000000 		.word	hspi2
 686              		.cfi_endproc
 687              	.LFE71:
 689              		.section	.text.fast_boot,"ax",%progbits
 690              		.align	1
 691              		.global	fast_boot
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 696              	fast_boot:
 697              	.LFB72:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** void fast_boot(void)
 300:Core/Src/main.c **** {
 698              		.loc 1 300 1
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 80B5     		push	{r7, lr}
 703              	.LCFI30:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              	.LCFI31:
 709              		.cfi_def_cfa_offset 16
 710 0004 00AF     		add	r7, sp, #0
 711              	.LCFI32:
 712              		.cfi_def_cfa_register 7
 301:Core/Src/main.c ****   uint8_t dummy_data = 0xff;
 713              		.loc 1 301 11
 714 0006 FF23     		movs	r3, #255
 715 0008 BB71     		strb	r3, [r7, #6]
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   DISELECT_CHIP();
 716              		.loc 1 303 3
 717 000a 0122     		movs	r2, #1
 718 000c 4FF48051 		mov	r1, #4096
 719 0010 0B48     		ldr	r0, .L36
 720 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 721              	.LBB9:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   // Clock occurs only during transmission
 306:Core/Src/main.c ****   for (uint8_t i = 0; i < 10; i++) // Need at least 74 ticks
 722              		.loc 1 306 16
 723 0016 0023     		movs	r3, #0
 724 0018 FB71     		strb	r3, [r7, #7]
 725              		.loc 1 306 3
 726 001a 08E0     		b	.L34
 727              	.L35:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 19


 307:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi2, &dummy_data, 1, 1);
 728              		.loc 1 307 5 discriminator 3
 729 001c B91D     		adds	r1, r7, #6
 730 001e 0123     		movs	r3, #1
 731 0020 0122     		movs	r2, #1
 732 0022 0848     		ldr	r0, .L36+4
 733 0024 FFF7FEFF 		bl	HAL_SPI_Transmit
 306:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi2, &dummy_data, 1, 1);
 734              		.loc 1 306 32 discriminator 3
 735 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 736 002a 0133     		adds	r3, r3, #1
 737 002c FB71     		strb	r3, [r7, #7]
 738              	.L34:
 306:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi2, &dummy_data, 1, 1);
 739              		.loc 1 306 3 discriminator 1
 740 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 741 0030 092B     		cmp	r3, #9
 742 0032 F3D9     		bls	.L35
 743              	.LBE9:
 308:Core/Src/main.c **** }
 744              		.loc 1 308 1
 745 0034 00BF     		nop
 746 0036 00BF     		nop
 747 0038 0837     		adds	r7, r7, #8
 748              	.LCFI33:
 749              		.cfi_def_cfa_offset 8
 750 003a BD46     		mov	sp, r7
 751              	.LCFI34:
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 003c 80BD     		pop	{r7, pc}
 755              	.L37:
 756 003e 00BF     		.align	2
 757              	.L36:
 758 0040 000C0140 		.word	1073810432
 759 0044 00000000 		.word	hspi2
 760              		.cfi_endproc
 761              	.LFE72:
 763              		.section	.text.Error_Handler,"ax",%progbits
 764              		.align	1
 765              		.global	Error_Handler
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	Error_Handler:
 771              	.LFB73:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE END 4 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** /**
 313:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 314:Core/Src/main.c ****   * @retval None
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c **** void Error_Handler(void)
 317:Core/Src/main.c **** {
 772              		.loc 1 317 1
 773              		.cfi_startproc
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 20


 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              	.LCFI35:
 779              		.cfi_def_cfa_offset 4
 780              		.cfi_offset 7, -4
 781 0002 00AF     		add	r7, sp, #0
 782              	.LCFI36:
 783              		.cfi_def_cfa_register 7
 784              	.LBB10:
 785              	.LBB11:
 786              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 21


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 22


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 787              		.loc 2 142 3
 788              		.syntax unified
 789              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 790 0004 72B6     		cpsid i
 791              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 792              		.loc 2 143 1
 793              		.thumb
 794              		.syntax unified
 795 0006 00BF     		nop
 796              	.L39:
 797              	.LBE11:
 798              	.LBE10:
 318:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 319:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 320:Core/Src/main.c ****   __disable_irq();
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 23


 321:Core/Src/main.c ****   while (1)
 799              		.loc 1 321 9 discriminator 1
 800 0008 FEE7     		b	.L39
 801              		.cfi_endproc
 802              	.LFE73:
 804              		.text
 805              	.Letext0:
 806              		.file 3 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 807              		.file 4 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 808              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 809              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 810              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 811              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 812              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 813              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 814              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 815              		.file 12 "External/SDCard_Driver/Inc/sdcard_driver.h"
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:22     .bss.hspi2:00000000 hspi2
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:19     .bss.hspi2:00000000 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:25     .text.main:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:31     .text.main:00000000 main
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:171    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:369    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:280    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:696    .text.fast_boot:00000000 fast_boot
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:479    .text.receive_byte:00000000 receive_byte
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:608    .text.transmit_bytes:00000000 transmit_bytes
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:533    .text.receive_bytes:00000000 receive_bytes
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:159    .text.main:000000d8 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:165    .text.SystemClock_Config:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:770    .text.Error_Handler:00000000 Error_Handler
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:275    .text.MX_SPI2_Init:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:358    .text.MX_SPI2_Init:00000064 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:364    .text.MX_GPIO_Init:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:467    .text.MX_GPIO_Init:00000090 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:473    .text.receive_byte:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:522    .text.receive_byte:0000002c $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:527    .text.receive_bytes:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:602    .text.transmit_bytes:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:685    .text.transmit_bytes:00000058 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:690    .text.fast_boot:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:758    .text.fast_boot:00000040 $d
C:\Users\Matvey\AppData\Local\Temp\ccdm3E82.s:764    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
get_cmd
HAL_GPIO_WritePin
HAL_SPI_Transmit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_SPI_Init
HAL_GPIO_Init
HAL_SPI_TransmitReceive
