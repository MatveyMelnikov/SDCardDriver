ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_SPI_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_SPI_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_SPI_Init:
  25              	.LFB65:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @file    stm32f1xx_hal_spi.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @attention
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * Copyright (c) 2016 STMicroelectronics.
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * All rights reserved.
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * in the root directory of this software component.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @verbatim
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                         ##### How to use this driver #####
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) SPI pins configuration
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Circular mode restriction:
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 1Line Rx
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Master Receive mode restriction:
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callback registration:
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and a pointer to the user callback function.
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           weak function.
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and the Callback ID.
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function allows to reset following callbacks:
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Additional table :
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #include "stm32f1xx_hal.h"
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup STM32F1xx_HAL_Driver
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI SPI
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI HAL module driver
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U) && defined(SPI_CRC_ERROR_WORKAROUND_FEATURE)
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* CRC WORKAROUND FEATURE: Variable used to determine if device is impacted by implementation
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * of workaround related to wrong CRC errors detection on SPI2. Conditions in which this workaround
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * has to be applied, are:
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - STM32F101CDE/STM32F103CDE
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - Revision ID : Z
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - SPI2
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - In receive only mode, with CRC calculation enabled, at the end of the CRC reception,
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *     the software needs to check the CRCERR flag. If it is found set, read back the SPI_RXCRC:
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + If the value is 0, the complete data transfer is successful.
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + Otherwise, one or more errors have been detected during the data transfer by CPU or DMA.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *    If CRCERR is found reset, the complete data transfer is considered successful.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Check RevisionID value for identifying if Device is Rev Z (0x0001) in order to enable workaround
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * CRC errors wrongly detected
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Pb is that ES_STM32F10xxCDE also identify an issue in Debug registers access while not in Debug 
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Revision ID information is only available in Debug mode, so Workaround could not be implemented
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * to distinguish Rev Z devices (issue present) from more recent version (issue fixed).
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * So, in case of Revision Z F101 or F103 devices, below define should be assigned to 1.
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define  USE_SPI_CRC_ERROR_WORKAROUND   0U
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the selected configuration:
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Mode
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Direction
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Data Size
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) NSS Management
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) BaudRate Prescaler
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) FirstBit
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) TIMode
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Calculation
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           of the selected SPIx peripheral.
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
  27              		.loc 1 334 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
  43              		.loc 1 336 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
  47              		.loc 1 338 12
  48 000e 0123     		movs	r3, #1
  49 0010 76E0     		b	.L3
  50              	.L2:
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the parameters */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* TI mode is not supported on this device.
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 8


 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
  51              		.loc 1 352 17
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 5B6A     		ldr	r3, [r3, #36]
  54              		.loc 1 352 6
  55 0016 002B     		cmp	r3, #0
  56 0018 08D1     		bne	.L4
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Mode == SPI_MODE_MASTER)
  57              		.loc 1 357 19
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 5B68     		ldr	r3, [r3, #4]
  60              		.loc 1 357 8
  61 001e B3F5827F 		cmp	r3, #260
  62 0022 09D0     		beq	.L5
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  63              		.loc 1 364 36
  64 0024 7B68     		ldr	r3, [r7, #4]
  65 0026 0022     		movs	r2, #0
  66 0028 DA61     		str	r2, [r3, #28]
  67 002a 05E0     		b	.L5
  68              	.L4:
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Force polarity and phase to TI protocaol requirements */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
  69              		.loc 1 372 28
  70 002c 7B68     		ldr	r3, [r7, #4]
  71 002e 0022     		movs	r2, #0
  72 0030 1A61     		str	r2, [r3, #16]
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
  73              		.loc 1 373 28
  74 0032 7B68     		ldr	r3, [r7, #4]
  75 0034 0022     		movs	r2, #0
  76 0036 5A61     		str	r2, [r3, #20]
  77              	.L5:
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 9


 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  78              		.loc 1 382 29
  79 0038 7B68     		ldr	r3, [r7, #4]
  80 003a 0022     		movs	r2, #0
  81 003c 9A62     		str	r2, [r3, #40]
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
  82              		.loc 1 385 11
  83 003e 7B68     		ldr	r3, [r7, #4]
  84 0040 93F85130 		ldrb	r3, [r3, #81]
  85 0044 DBB2     		uxtb	r3, r3
  86              		.loc 1 385 6
  87 0046 002B     		cmp	r3, #0
  88 0048 06D1     		bne	.L6
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
  89              		.loc 1 388 16
  90 004a 7B68     		ldr	r3, [r7, #4]
  91 004c 0022     		movs	r2, #0
  92 004e 83F85020 		strb	r2, [r3, #80]
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  93              		.loc 1 410 5
  94 0052 7868     		ldr	r0, [r7, #4]
  95 0054 FFF7FEFF 		bl	HAL_SPI_MspInit
  96              	.L6:
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  97              		.loc 1 414 15
  98 0058 7B68     		ldr	r3, [r7, #4]
  99 005a 0222     		movs	r2, #2
 100 005c 83F85120 		strb	r2, [r3, #81]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 10


 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 101              		.loc 1 417 3
 102 0060 7B68     		ldr	r3, [r7, #4]
 103 0062 1B68     		ldr	r3, [r3]
 104 0064 1A68     		ldr	r2, [r3]
 105 0066 7B68     		ldr	r3, [r7, #4]
 106 0068 1B68     		ldr	r3, [r3]
 107 006a 22F04002 		bic	r2, r2, #64
 108 006e 1A60     		str	r2, [r3]
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 109              		.loc 1 422 3
 110 0070 7B68     		ldr	r3, [r7, #4]
 111 0072 5B68     		ldr	r3, [r3, #4]
 112 0074 03F48272 		and	r2, r3, #260
 113 0078 7B68     		ldr	r3, [r7, #4]
 114 007a 9B68     		ldr	r3, [r3, #8]
 115 007c 03F40443 		and	r3, r3, #33792
 116 0080 1A43     		orrs	r2, r2, r3
 117 0082 7B68     		ldr	r3, [r7, #4]
 118 0084 DB68     		ldr	r3, [r3, #12]
 119 0086 03F40063 		and	r3, r3, #2048
 120 008a 1A43     		orrs	r2, r2, r3
 121 008c 7B68     		ldr	r3, [r7, #4]
 122 008e 1B69     		ldr	r3, [r3, #16]
 123 0090 03F00203 		and	r3, r3, #2
 124 0094 1A43     		orrs	r2, r2, r3
 125 0096 7B68     		ldr	r3, [r7, #4]
 126 0098 5B69     		ldr	r3, [r3, #20]
 127 009a 03F00103 		and	r3, r3, #1
 128 009e 1A43     		orrs	r2, r2, r3
 129 00a0 7B68     		ldr	r3, [r7, #4]
 130 00a2 9B69     		ldr	r3, [r3, #24]
 131 00a4 03F40073 		and	r3, r3, #512
 132 00a8 1A43     		orrs	r2, r2, r3
 133 00aa 7B68     		ldr	r3, [r7, #4]
 134 00ac DB69     		ldr	r3, [r3, #28]
 135 00ae 03F03803 		and	r3, r3, #56
 136 00b2 1A43     		orrs	r2, r2, r3
 137 00b4 7B68     		ldr	r3, [r7, #4]
 138 00b6 1B6A     		ldr	r3, [r3, #32]
 139 00b8 03F08003 		and	r3, r3, #128
 140 00bc 42EA0301 		orr	r1, r2, r3
 141 00c0 7B68     		ldr	r3, [r7, #4]
 142 00c2 9B6A     		ldr	r3, [r3, #40]
 143 00c4 03F40052 		and	r2, r3, #8192
 144 00c8 7B68     		ldr	r3, [r7, #4]
 145 00ca 1B68     		ldr	r3, [r3]
 146 00cc 0A43     		orrs	r2, r2, r1
 147 00ce 1A60     		str	r2, [r3]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.DataSize & SPI_CR1_DFF) |
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 11


 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPolarity & SPI_CR1_CPOL) |
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPhase & SPI_CR1_CPHA) |
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.NSS & SPI_CR1_SSM) |
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : NSS management */
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 148              		.loc 1 433 3
 149 00d0 7B68     		ldr	r3, [r7, #4]
 150 00d2 9B69     		ldr	r3, [r3, #24]
 151 00d4 1A0C     		lsrs	r2, r3, #16
 152 00d6 7B68     		ldr	r3, [r7, #4]
 153 00d8 1B68     		ldr	r3, [r3]
 154 00da 02F00402 		and	r2, r2, #4
 155 00de 5A60     		str	r2, [r3, #4]
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, (hspi->Init.CRCPolynomial & SPI_CRCPR_CRCPOLY_Msk));
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 156              		.loc 1 446 3
 157 00e0 7B68     		ldr	r3, [r7, #4]
 158 00e2 1B68     		ldr	r3, [r3]
 159 00e4 DA69     		ldr	r2, [r3, #28]
 160 00e6 7B68     		ldr	r3, [r7, #4]
 161 00e8 1B68     		ldr	r3, [r3]
 162 00ea 22F40062 		bic	r2, r2, #2048
 163 00ee DA61     		str	r2, [r3, #28]
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 164              		.loc 1 449 19
 165 00f0 7B68     		ldr	r3, [r7, #4]
 166 00f2 0022     		movs	r2, #0
 167 00f4 5A65     		str	r2, [r3, #84]
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 168              		.loc 1 450 19
 169 00f6 7B68     		ldr	r3, [r7, #4]
 170 00f8 0122     		movs	r2, #1
 171 00fa 83F85120 		strb	r2, [r3, #81]
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 172              		.loc 1 452 10
 173 00fe 0023     		movs	r3, #0
 174              	.L3:
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 175              		.loc 1 453 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 12


 176 0100 1846     		mov	r0, r3
 177 0102 0837     		adds	r7, r7, #8
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180 0104 BD46     		mov	sp, r7
 181              	.LCFI4:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0106 80BD     		pop	{r7, pc}
 185              		.cfi_endproc
 186              	.LFE65:
 188              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_SPI_DeInit
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	HAL_SPI_DeInit:
 196              	.LFB66:
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 197              		.loc 1 462 1
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 82B0     		sub	sp, sp, #8
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              	.LCFI7:
 211              		.cfi_def_cfa_register 7
 212 0006 7860     		str	r0, [r7, #4]
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 213              		.loc 1 464 6
 214 0008 7B68     		ldr	r3, [r7, #4]
 215 000a 002B     		cmp	r3, #0
 216 000c 01D1     		bne	.L8
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 217              		.loc 1 466 12
 218 000e 0123     		movs	r3, #1
 219 0010 1AE0     		b	.L9
 220              	.L8:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 13


 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 221              		.loc 1 472 15
 222 0012 7B68     		ldr	r3, [r7, #4]
 223 0014 0222     		movs	r2, #2
 224 0016 83F85120 		strb	r2, [r3, #81]
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 225              		.loc 1 475 3
 226 001a 7B68     		ldr	r3, [r7, #4]
 227 001c 1B68     		ldr	r3, [r3]
 228 001e 1A68     		ldr	r2, [r3]
 229 0020 7B68     		ldr	r3, [r7, #4]
 230 0022 1B68     		ldr	r3, [r3]
 231 0024 22F04002 		bic	r2, r2, #64
 232 0028 1A60     		str	r2, [r3]
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 233              		.loc 1 487 3
 234 002a 7868     		ldr	r0, [r7, #4]
 235 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 236              		.loc 1 490 19
 237 0030 7B68     		ldr	r3, [r7, #4]
 238 0032 0022     		movs	r2, #0
 239 0034 5A65     		str	r2, [r3, #84]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 240              		.loc 1 491 15
 241 0036 7B68     		ldr	r3, [r7, #4]
 242 0038 0022     		movs	r2, #0
 243 003a 83F85120 		strb	r2, [r3, #81]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 244              		.loc 1 494 3
 245 003e 7B68     		ldr	r3, [r7, #4]
 246 0040 0022     		movs	r2, #0
 247 0042 83F85020 		strb	r2, [r3, #80]
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 248              		.loc 1 496 10
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 14


 249 0046 0023     		movs	r3, #0
 250              	.L9:
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 251              		.loc 1 497 1
 252 0048 1846     		mov	r0, r3
 253 004a 0837     		adds	r7, r7, #8
 254              	.LCFI8:
 255              		.cfi_def_cfa_offset 8
 256 004c BD46     		mov	sp, r7
 257              	.LCFI9:
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
 260 004e 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE66:
 264              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 265              		.align	1
 266              		.weak	HAL_SPI_MspInit
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	HAL_SPI_MspInit:
 272              	.LFB67:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 273              		.loc 1 506 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              	.LCFI10:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 83B0     		sub	sp, sp, #12
 283              	.LCFI11:
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI12:
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 289              		.loc 1 513 1
 290 0008 00BF     		nop
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 15


 291 000a 0C37     		adds	r7, r7, #12
 292              	.LCFI13:
 293              		.cfi_def_cfa_offset 4
 294 000c BD46     		mov	sp, r7
 295              	.LCFI14:
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 000e 80BC     		pop	{r7}
 299              	.LCFI15:
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 0010 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE67:
 306              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 307              		.align	1
 308              		.weak	HAL_SPI_MspDeInit
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	HAL_SPI_MspDeInit:
 314              	.LFB68:
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 315              		.loc 1 522 1
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 0000 80B4     		push	{r7}
 321              	.LCFI16:
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 83B0     		sub	sp, sp, #12
 325              	.LCFI17:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI18:
 329              		.cfi_def_cfa_register 7
 330 0006 7860     		str	r0, [r7, #4]
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 331              		.loc 1 529 1
 332 0008 00BF     		nop
 333 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 16


 334              	.LCFI19:
 335              		.cfi_def_cfa_offset 4
 336 000c BD46     		mov	sp, r7
 337              	.LCFI20:
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 000e 80BC     		pop	{r7}
 341              	.LCFI21:
 342              		.cfi_restore 7
 343              		.cfi_def_cfa_offset 0
 344 0010 7047     		bx	lr
 345              		.cfi_endproc
 346              	.LFE68:
 348              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 349              		.align	1
 350              		.global	HAL_SPI_Transmit
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	HAL_SPI_Transmit:
 356              	.LFB69:
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (pCallback == NULL)
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 17


 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 18


 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 19


 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 20


 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief   Data transfers functions
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### IO operation functions #####
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  [..]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     data transfers.
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) There are two modes of transfer:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             after finishing transfer.
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             using DMA mode.
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 21


 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 357              		.loc 1 794 1
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 32
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              	.LCFI22:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 88B0     		sub	sp, sp, #32
 367              	.LCFI23:
 368              		.cfi_def_cfa_offset 40
 369 0004 00AF     		add	r7, sp, #0
 370              	.LCFI24:
 371              		.cfi_def_cfa_register 7
 372 0006 F860     		str	r0, [r7, #12]
 373 0008 B960     		str	r1, [r7, #8]
 374 000a 3B60     		str	r3, [r7]
 375 000c 1346     		mov	r3, r2	@ movhi
 376 000e FB80     		strh	r3, [r7, #6]	@ movhi
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 377              		.loc 1 796 21
 378 0010 0023     		movs	r3, #0
 379 0012 FB77     		strb	r3, [r7, #31]
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 380              		.loc 1 803 3
 381 0014 FB68     		ldr	r3, [r7, #12]
 382 0016 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 383 001a 012B     		cmp	r3, #1
 384 001c 01D1     		bne	.L13
 385              		.loc 1 803 3 is_stmt 0 discriminator 1
 386 001e 0223     		movs	r3, #2
 387 0020 2DE1     		b	.L14
 388              	.L13:
 389              		.loc 1 803 3 discriminator 2
 390 0022 FB68     		ldr	r3, [r7, #12]
 391 0024 0122     		movs	r2, #1
 392 0026 83F85020 		strb	r2, [r3, #80]
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 393              		.loc 1 806 15 is_stmt 1 discriminator 2
 394 002a FFF7FEFF 		bl	HAL_GetTick
 395 002e B861     		str	r0, [r7, #24]
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 396              		.loc 1 807 23 discriminator 2
 397 0030 FB88     		ldrh	r3, [r7, #6]	@ movhi
 398 0032 FB82     		strh	r3, [r7, #22]	@ movhi
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 22


 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 399              		.loc 1 809 11 discriminator 2
 400 0034 FB68     		ldr	r3, [r7, #12]
 401 0036 93F85130 		ldrb	r3, [r3, #81]
 402 003a DBB2     		uxtb	r3, r3
 403              		.loc 1 809 6 discriminator 2
 404 003c 012B     		cmp	r3, #1
 405 003e 02D0     		beq	.L15
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 406              		.loc 1 811 15
 407 0040 0223     		movs	r3, #2
 408 0042 FB77     		strb	r3, [r7, #31]
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 409              		.loc 1 812 5
 410 0044 16E1     		b	.L16
 411              	.L15:
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 412              		.loc 1 815 6
 413 0046 BB68     		ldr	r3, [r7, #8]
 414 0048 002B     		cmp	r3, #0
 415 004a 02D0     		beq	.L17
 416              		.loc 1 815 23 discriminator 1
 417 004c FB88     		ldrh	r3, [r7, #6]
 418 004e 002B     		cmp	r3, #0
 419 0050 02D1     		bne	.L18
 420              	.L17:
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 421              		.loc 1 817 15
 422 0052 0123     		movs	r3, #1
 423 0054 FB77     		strb	r3, [r7, #31]
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 424              		.loc 1 818 5
 425 0056 0DE1     		b	.L16
 426              	.L18:
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 427              		.loc 1 822 21
 428 0058 FB68     		ldr	r3, [r7, #12]
 429 005a 0322     		movs	r2, #3
 430 005c 83F85120 		strb	r2, [r3, #81]
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 431              		.loc 1 823 21
 432 0060 FB68     		ldr	r3, [r7, #12]
 433 0062 0022     		movs	r2, #0
 434 0064 5A65     		str	r2, [r3, #84]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 435              		.loc 1 824 21
 436 0066 FB68     		ldr	r3, [r7, #12]
 437 0068 BA68     		ldr	r2, [r7, #8]
 438 006a 1A63     		str	r2, [r3, #48]
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 23


 439              		.loc 1 825 21
 440 006c FB68     		ldr	r3, [r7, #12]
 441 006e FA88     		ldrh	r2, [r7, #6]	@ movhi
 442 0070 9A86     		strh	r2, [r3, #52]	@ movhi
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 443              		.loc 1 826 21
 444 0072 FB68     		ldr	r3, [r7, #12]
 445 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 446 0076 DA86     		strh	r2, [r3, #54]	@ movhi
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 447              		.loc 1 829 21
 448 0078 FB68     		ldr	r3, [r7, #12]
 449 007a 0022     		movs	r2, #0
 450 007c 9A63     		str	r2, [r3, #56]
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 451              		.loc 1 830 21
 452 007e FB68     		ldr	r3, [r7, #12]
 453 0080 0022     		movs	r2, #0
 454 0082 9A87     		strh	r2, [r3, #60]	@ movhi
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 455              		.loc 1 831 21
 456 0084 FB68     		ldr	r3, [r7, #12]
 457 0086 0022     		movs	r2, #0
 458 0088 DA87     		strh	r2, [r3, #62]	@ movhi
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 459              		.loc 1 832 21
 460 008a FB68     		ldr	r3, [r7, #12]
 461 008c 0022     		movs	r2, #0
 462 008e 5A64     		str	r2, [r3, #68]
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 463              		.loc 1 833 21
 464 0090 FB68     		ldr	r3, [r7, #12]
 465 0092 0022     		movs	r2, #0
 466 0094 1A64     		str	r2, [r3, #64]
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 467              		.loc 1 836 17
 468 0096 FB68     		ldr	r3, [r7, #12]
 469 0098 9B68     		ldr	r3, [r3, #8]
 470              		.loc 1 836 6
 471 009a B3F5004F 		cmp	r3, #32768
 472 009e 0FD1     		bne	.L19
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 473              		.loc 1 839 5
 474 00a0 FB68     		ldr	r3, [r7, #12]
 475 00a2 1B68     		ldr	r3, [r3]
 476 00a4 1A68     		ldr	r2, [r3]
 477 00a6 FB68     		ldr	r3, [r7, #12]
 478 00a8 1B68     		ldr	r3, [r3]
 479 00aa 22F04002 		bic	r2, r2, #64
 480 00ae 1A60     		str	r2, [r3]
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 24


 481              		.loc 1 840 5
 482 00b0 FB68     		ldr	r3, [r7, #12]
 483 00b2 1B68     		ldr	r3, [r3]
 484 00b4 1A68     		ldr	r2, [r3]
 485 00b6 FB68     		ldr	r3, [r7, #12]
 486 00b8 1B68     		ldr	r3, [r3]
 487 00ba 42F48042 		orr	r2, r2, #16384
 488 00be 1A60     		str	r2, [r3]
 489              	.L19:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 490              		.loc 1 852 12
 491 00c0 FB68     		ldr	r3, [r7, #12]
 492 00c2 1B68     		ldr	r3, [r3]
 493              		.loc 1 852 22
 494 00c4 1B68     		ldr	r3, [r3]
 495              		.loc 1 852 28
 496 00c6 03F04003 		and	r3, r3, #64
 497              		.loc 1 852 6
 498 00ca 402B     		cmp	r3, #64
 499 00cc 07D0     		beq	.L20
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 500              		.loc 1 855 5
 501 00ce FB68     		ldr	r3, [r7, #12]
 502 00d0 1B68     		ldr	r3, [r3]
 503 00d2 1A68     		ldr	r2, [r3]
 504 00d4 FB68     		ldr	r3, [r7, #12]
 505 00d6 1B68     		ldr	r3, [r3]
 506 00d8 42F04002 		orr	r2, r2, #64
 507 00dc 1A60     		str	r2, [r3]
 508              	.L20:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 509              		.loc 1 859 17
 510 00de FB68     		ldr	r3, [r7, #12]
 511 00e0 DB68     		ldr	r3, [r3, #12]
 512              		.loc 1 859 6
 513 00e2 B3F5006F 		cmp	r3, #2048
 514 00e6 4FD1     		bne	.L21
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 515              		.loc 1 861 20
 516 00e8 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 25


 517 00ea 5B68     		ldr	r3, [r3, #4]
 518              		.loc 1 861 8
 519 00ec 002B     		cmp	r3, #0
 520 00ee 02D0     		beq	.L22
 521              		.loc 1 861 45 discriminator 1
 522 00f0 FB8A     		ldrh	r3, [r7, #22]
 523 00f2 012B     		cmp	r3, #1
 524 00f4 42D1     		bne	.L24
 525              	.L22:
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 526              		.loc 1 863 46
 527 00f6 FB68     		ldr	r3, [r7, #12]
 528 00f8 1B6B     		ldr	r3, [r3, #48]
 529              		.loc 1 863 28
 530 00fa 1A88     		ldrh	r2, [r3]
 531              		.loc 1 863 11
 532 00fc FB68     		ldr	r3, [r7, #12]
 533 00fe 1B68     		ldr	r3, [r3]
 534              		.loc 1 863 26
 535 0100 DA60     		str	r2, [r3, #12]
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 536              		.loc 1 864 24
 537 0102 FB68     		ldr	r3, [r7, #12]
 538 0104 1B6B     		ldr	r3, [r3, #48]
 539 0106 9A1C     		adds	r2, r3, #2
 540 0108 FB68     		ldr	r3, [r7, #12]
 541 010a 1A63     		str	r2, [r3, #48]
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 542              		.loc 1 865 11
 543 010c FB68     		ldr	r3, [r7, #12]
 544 010e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 545 0110 9BB2     		uxth	r3, r3
 546              		.loc 1 865 24
 547 0112 013B     		subs	r3, r3, #1
 548 0114 9AB2     		uxth	r2, r3
 549 0116 FB68     		ldr	r3, [r7, #12]
 550 0118 DA86     		strh	r2, [r3, #54]	@ movhi
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 551              		.loc 1 868 11
 552 011a 2FE0     		b	.L24
 553              	.L28:
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 554              		.loc 1 871 11
 555 011c FB68     		ldr	r3, [r7, #12]
 556 011e 1B68     		ldr	r3, [r3]
 557 0120 9B68     		ldr	r3, [r3, #8]
 558 0122 03F00203 		and	r3, r3, #2
 559              		.loc 1 871 10
 560 0126 022B     		cmp	r3, #2
 561 0128 12D1     		bne	.L25
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 26


 562              		.loc 1 873 48
 563 012a FB68     		ldr	r3, [r7, #12]
 564 012c 1B6B     		ldr	r3, [r3, #48]
 565              		.loc 1 873 30
 566 012e 1A88     		ldrh	r2, [r3]
 567              		.loc 1 873 13
 568 0130 FB68     		ldr	r3, [r7, #12]
 569 0132 1B68     		ldr	r3, [r3]
 570              		.loc 1 873 28
 571 0134 DA60     		str	r2, [r3, #12]
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 572              		.loc 1 874 26
 573 0136 FB68     		ldr	r3, [r7, #12]
 574 0138 1B6B     		ldr	r3, [r3, #48]
 575 013a 9A1C     		adds	r2, r3, #2
 576 013c FB68     		ldr	r3, [r7, #12]
 577 013e 1A63     		str	r2, [r3, #48]
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 578              		.loc 1 875 13
 579 0140 FB68     		ldr	r3, [r7, #12]
 580 0142 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 581 0144 9BB2     		uxth	r3, r3
 582              		.loc 1 875 26
 583 0146 013B     		subs	r3, r3, #1
 584 0148 9AB2     		uxth	r2, r3
 585 014a FB68     		ldr	r3, [r7, #12]
 586 014c DA86     		strh	r2, [r3, #54]	@ movhi
 587 014e 15E0     		b	.L24
 588              	.L25:
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 589              		.loc 1 880 16
 590 0150 FFF7FEFF 		bl	HAL_GetTick
 591 0154 0246     		mov	r2, r0
 592              		.loc 1 880 30
 593 0156 BB69     		ldr	r3, [r7, #24]
 594 0158 D31A     		subs	r3, r2, r3
 595              		.loc 1 880 12
 596 015a 3A68     		ldr	r2, [r7]
 597 015c 9A42     		cmp	r2, r3
 598 015e 03D8     		bhi	.L26
 599              		.loc 1 880 56 discriminator 1
 600 0160 3B68     		ldr	r3, [r7]
 601 0162 B3F1FF3F 		cmp	r3, #-1
 602 0166 02D1     		bne	.L27
 603              	.L26:
 604              		.loc 1 880 87 discriminator 3
 605 0168 3B68     		ldr	r3, [r7]
 606 016a 002B     		cmp	r3, #0
 607 016c 06D1     		bne	.L24
 608              	.L27:
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 609              		.loc 1 882 21
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 27


 610 016e 0323     		movs	r3, #3
 611 0170 FB77     		strb	r3, [r7, #31]
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 612              		.loc 1 883 23
 613 0172 FB68     		ldr	r3, [r7, #12]
 614 0174 0122     		movs	r2, #1
 615 0176 83F85120 		strb	r2, [r3, #81]
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 616              		.loc 1 884 11
 617 017a 7BE0     		b	.L16
 618              	.L24:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 619              		.loc 1 868 16
 620 017c FB68     		ldr	r3, [r7, #12]
 621 017e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 622 0180 9BB2     		uxth	r3, r3
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 623              		.loc 1 868 11
 624 0182 002B     		cmp	r3, #0
 625 0184 CAD1     		bne	.L28
 626 0186 50E0     		b	.L29
 627              	.L21:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 628              		.loc 1 892 20
 629 0188 FB68     		ldr	r3, [r7, #12]
 630 018a 5B68     		ldr	r3, [r3, #4]
 631              		.loc 1 892 8
 632 018c 002B     		cmp	r3, #0
 633 018e 02D0     		beq	.L30
 634              		.loc 1 892 45 discriminator 1
 635 0190 FB8A     		ldrh	r3, [r7, #22]
 636 0192 012B     		cmp	r3, #1
 637 0194 44D1     		bne	.L32
 638              	.L30:
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 639              		.loc 1 894 54
 640 0196 FB68     		ldr	r3, [r7, #12]
 641 0198 1A6B     		ldr	r2, [r3, #48]
 642              		.loc 1 894 30
 643 019a FB68     		ldr	r3, [r7, #12]
 644 019c 1B68     		ldr	r3, [r3]
 645              		.loc 1 894 25
 646 019e 0C33     		adds	r3, r3, #12
 647              		.loc 1 894 49
 648 01a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 649              		.loc 1 894 46
 650 01a2 1A70     		strb	r2, [r3]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 651              		.loc 1 895 24
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 28


 652 01a4 FB68     		ldr	r3, [r7, #12]
 653 01a6 1B6B     		ldr	r3, [r3, #48]
 654 01a8 5A1C     		adds	r2, r3, #1
 655 01aa FB68     		ldr	r3, [r7, #12]
 656 01ac 1A63     		str	r2, [r3, #48]
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 657              		.loc 1 896 11
 658 01ae FB68     		ldr	r3, [r7, #12]
 659 01b0 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 660 01b2 9BB2     		uxth	r3, r3
 661              		.loc 1 896 24
 662 01b4 013B     		subs	r3, r3, #1
 663 01b6 9AB2     		uxth	r2, r3
 664 01b8 FB68     		ldr	r3, [r7, #12]
 665 01ba DA86     		strh	r2, [r3, #54]	@ movhi
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 666              		.loc 1 898 11
 667 01bc 30E0     		b	.L32
 668              	.L36:
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 669              		.loc 1 901 11
 670 01be FB68     		ldr	r3, [r7, #12]
 671 01c0 1B68     		ldr	r3, [r3]
 672 01c2 9B68     		ldr	r3, [r3, #8]
 673 01c4 03F00203 		and	r3, r3, #2
 674              		.loc 1 901 10
 675 01c8 022B     		cmp	r3, #2
 676 01ca 13D1     		bne	.L33
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 677              		.loc 1 903 56
 678 01cc FB68     		ldr	r3, [r7, #12]
 679 01ce 1A6B     		ldr	r2, [r3, #48]
 680              		.loc 1 903 32
 681 01d0 FB68     		ldr	r3, [r7, #12]
 682 01d2 1B68     		ldr	r3, [r3]
 683              		.loc 1 903 27
 684 01d4 0C33     		adds	r3, r3, #12
 685              		.loc 1 903 51
 686 01d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 687              		.loc 1 903 48
 688 01d8 1A70     		strb	r2, [r3]
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 689              		.loc 1 904 26
 690 01da FB68     		ldr	r3, [r7, #12]
 691 01dc 1B6B     		ldr	r3, [r3, #48]
 692 01de 5A1C     		adds	r2, r3, #1
 693 01e0 FB68     		ldr	r3, [r7, #12]
 694 01e2 1A63     		str	r2, [r3, #48]
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 695              		.loc 1 905 13
 696 01e4 FB68     		ldr	r3, [r7, #12]
 697 01e6 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 698 01e8 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 29


 699              		.loc 1 905 26
 700 01ea 013B     		subs	r3, r3, #1
 701 01ec 9AB2     		uxth	r2, r3
 702 01ee FB68     		ldr	r3, [r7, #12]
 703 01f0 DA86     		strh	r2, [r3, #54]	@ movhi
 704 01f2 15E0     		b	.L32
 705              	.L33:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 706              		.loc 1 910 16
 707 01f4 FFF7FEFF 		bl	HAL_GetTick
 708 01f8 0246     		mov	r2, r0
 709              		.loc 1 910 30
 710 01fa BB69     		ldr	r3, [r7, #24]
 711 01fc D31A     		subs	r3, r2, r3
 712              		.loc 1 910 12
 713 01fe 3A68     		ldr	r2, [r7]
 714 0200 9A42     		cmp	r2, r3
 715 0202 03D8     		bhi	.L34
 716              		.loc 1 910 56 discriminator 1
 717 0204 3B68     		ldr	r3, [r7]
 718 0206 B3F1FF3F 		cmp	r3, #-1
 719 020a 02D1     		bne	.L35
 720              	.L34:
 721              		.loc 1 910 87 discriminator 3
 722 020c 3B68     		ldr	r3, [r7]
 723 020e 002B     		cmp	r3, #0
 724 0210 06D1     		bne	.L32
 725              	.L35:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 726              		.loc 1 912 21
 727 0212 0323     		movs	r3, #3
 728 0214 FB77     		strb	r3, [r7, #31]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 729              		.loc 1 913 23
 730 0216 FB68     		ldr	r3, [r7, #12]
 731 0218 0122     		movs	r2, #1
 732 021a 83F85120 		strb	r2, [r3, #81]
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 733              		.loc 1 914 11
 734 021e 29E0     		b	.L16
 735              	.L32:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 736              		.loc 1 898 16
 737 0220 FB68     		ldr	r3, [r7, #12]
 738 0222 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 739 0224 9BB2     		uxth	r3, r3
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 740              		.loc 1 898 11
 741 0226 002B     		cmp	r3, #0
 742 0228 C9D1     		bne	.L36
 743              	.L29:
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 30


 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 744              		.loc 1 928 7
 745 022a BA69     		ldr	r2, [r7, #24]
 746 022c 3968     		ldr	r1, [r7]
 747 022e F868     		ldr	r0, [r7, #12]
 748 0230 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 749 0234 0346     		mov	r3, r0
 750              		.loc 1 928 6
 751 0236 002B     		cmp	r3, #0
 752 0238 02D0     		beq	.L37
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 753              		.loc 1 930 21
 754 023a FB68     		ldr	r3, [r7, #12]
 755 023c 2022     		movs	r2, #32
 756 023e 5A65     		str	r2, [r3, #84]
 757              	.L37:
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 758              		.loc 1 934 17
 759 0240 FB68     		ldr	r3, [r7, #12]
 760 0242 9B68     		ldr	r3, [r3, #8]
 761              		.loc 1 934 6
 762 0244 002B     		cmp	r3, #0
 763 0246 0AD1     		bne	.L38
 764              	.LBB2:
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 765              		.loc 1 936 5
 766 0248 0023     		movs	r3, #0
 767 024a 3B61     		str	r3, [r7, #16]
 768 024c FB68     		ldr	r3, [r7, #12]
 769 024e 1B68     		ldr	r3, [r3]
 770 0250 DB68     		ldr	r3, [r3, #12]
 771 0252 3B61     		str	r3, [r7, #16]
 772 0254 FB68     		ldr	r3, [r7, #12]
 773 0256 1B68     		ldr	r3, [r3]
 774 0258 9B68     		ldr	r3, [r3, #8]
 775 025a 3B61     		str	r3, [r7, #16]
 776 025c 3B69     		ldr	r3, [r7, #16]
 777              	.L38:
 778              	.LBE2:
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 31


 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 779              		.loc 1 939 11
 780 025e FB68     		ldr	r3, [r7, #12]
 781 0260 5B6D     		ldr	r3, [r3, #84]
 782              		.loc 1 939 6
 783 0262 002B     		cmp	r3, #0
 784 0264 02D0     		beq	.L39
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 785              		.loc 1 941 15
 786 0266 0123     		movs	r3, #1
 787 0268 FB77     		strb	r3, [r7, #31]
 788 026a 03E0     		b	.L16
 789              	.L39:
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 790              		.loc 1 945 17
 791 026c FB68     		ldr	r3, [r7, #12]
 792 026e 0122     		movs	r2, #1
 793 0270 83F85120 		strb	r2, [r3, #81]
 794              	.L16:
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 795              		.loc 1 950 3
 796 0274 FB68     		ldr	r3, [r7, #12]
 797 0276 0022     		movs	r2, #0
 798 0278 83F85020 		strb	r2, [r3, #80]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 799              		.loc 1 951 10
 800 027c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 801              	.L14:
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 802              		.loc 1 952 1
 803 027e 1846     		mov	r0, r3
 804 0280 2037     		adds	r7, r7, #32
 805              	.LCFI25:
 806              		.cfi_def_cfa_offset 8
 807 0282 BD46     		mov	sp, r7
 808              	.LCFI26:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 0284 80BD     		pop	{r7, pc}
 812              		.cfi_endproc
 813              	.LFE69:
 815              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 816              		.align	1
 817              		.global	HAL_SPI_Receive
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	HAL_SPI_Receive:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 32


 823              	.LFB70:
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be received
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 824              		.loc 1 964 1
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 24
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              	.LCFI27:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 88B0     		sub	sp, sp, #32
 834              	.LCFI28:
 835              		.cfi_def_cfa_offset 40
 836 0004 02AF     		add	r7, sp, #8
 837              	.LCFI29:
 838              		.cfi_def_cfa 7, 32
 839 0006 F860     		str	r0, [r7, #12]
 840 0008 B960     		str	r1, [r7, #8]
 841 000a 3B60     		str	r3, [r7]
 842 000c 1346     		mov	r3, r2	@ movhi
 843 000e FB80     		strh	r3, [r7, #6]	@ movhi
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 844              		.loc 1 969 21
 845 0010 0023     		movs	r3, #0
 846 0012 FB75     		strb	r3, [r7, #23]
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 847              		.loc 1 971 11
 848 0014 FB68     		ldr	r3, [r7, #12]
 849 0016 93F85130 		ldrb	r3, [r3, #81]
 850 001a DBB2     		uxtb	r3, r3
 851              		.loc 1 971 6
 852 001c 012B     		cmp	r3, #1
 853 001e 02D0     		beq	.L41
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 854              		.loc 1 973 15
 855 0020 0223     		movs	r3, #2
 856 0022 FB75     		strb	r3, [r7, #23]
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 857              		.loc 1 974 5
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 33


 858 0024 FBE0     		b	.L42
 859              	.L41:
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 860              		.loc 1 977 18
 861 0026 FB68     		ldr	r3, [r7, #12]
 862 0028 5B68     		ldr	r3, [r3, #4]
 863              		.loc 1 977 6
 864 002a B3F5827F 		cmp	r3, #260
 865 002e 12D1     		bne	.L43
 866              		.loc 1 977 58 discriminator 1
 867 0030 FB68     		ldr	r3, [r7, #12]
 868 0032 9B68     		ldr	r3, [r3, #8]
 869              		.loc 1 977 44 discriminator 1
 870 0034 002B     		cmp	r3, #0
 871 0036 0ED1     		bne	.L43
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 872              		.loc 1 979 17
 873 0038 FB68     		ldr	r3, [r7, #12]
 874 003a 0422     		movs	r2, #4
 875 003c 83F85120 		strb	r2, [r3, #81]
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 876              		.loc 1 981 12
 877 0040 FA88     		ldrh	r2, [r7, #6]
 878 0042 3B68     		ldr	r3, [r7]
 879 0044 0093     		str	r3, [sp]
 880 0046 1346     		mov	r3, r2
 881 0048 BA68     		ldr	r2, [r7, #8]
 882 004a B968     		ldr	r1, [r7, #8]
 883 004c F868     		ldr	r0, [r7, #12]
 884 004e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 885 0052 0346     		mov	r3, r0
 886 0054 E8E0     		b	.L44
 887              	.L43:
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 888              		.loc 1 985 3
 889 0056 FB68     		ldr	r3, [r7, #12]
 890 0058 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 891 005c 012B     		cmp	r3, #1
 892 005e 01D1     		bne	.L45
 893              		.loc 1 985 3 is_stmt 0 discriminator 1
 894 0060 0223     		movs	r3, #2
 895 0062 E1E0     		b	.L44
 896              	.L45:
 897              		.loc 1 985 3 discriminator 2
 898 0064 FB68     		ldr	r3, [r7, #12]
 899 0066 0122     		movs	r2, #1
 900 0068 83F85020 		strb	r2, [r3, #80]
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 34


 901              		.loc 1 988 15 is_stmt 1 discriminator 2
 902 006c FFF7FEFF 		bl	HAL_GetTick
 903 0070 3861     		str	r0, [r7, #16]
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 904              		.loc 1 990 6 discriminator 2
 905 0072 BB68     		ldr	r3, [r7, #8]
 906 0074 002B     		cmp	r3, #0
 907 0076 02D0     		beq	.L46
 908              		.loc 1 990 23 discriminator 1
 909 0078 FB88     		ldrh	r3, [r7, #6]
 910 007a 002B     		cmp	r3, #0
 911 007c 02D1     		bne	.L47
 912              	.L46:
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 913              		.loc 1 992 15
 914 007e 0123     		movs	r3, #1
 915 0080 FB75     		strb	r3, [r7, #23]
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 916              		.loc 1 993 5
 917 0082 CCE0     		b	.L42
 918              	.L47:
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 919              		.loc 1 997 21
 920 0084 FB68     		ldr	r3, [r7, #12]
 921 0086 0422     		movs	r2, #4
 922 0088 83F85120 		strb	r2, [r3, #81]
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 923              		.loc 1 998 21
 924 008c FB68     		ldr	r3, [r7, #12]
 925 008e 0022     		movs	r2, #0
 926 0090 5A65     		str	r2, [r3, #84]
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 927              		.loc 1 999 21
 928 0092 FB68     		ldr	r3, [r7, #12]
 929 0094 BA68     		ldr	r2, [r7, #8]
 930 0096 9A63     		str	r2, [r3, #56]
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 931              		.loc 1 1000 21
 932 0098 FB68     		ldr	r3, [r7, #12]
 933 009a FA88     		ldrh	r2, [r7, #6]	@ movhi
 934 009c 9A87     		strh	r2, [r3, #60]	@ movhi
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 935              		.loc 1 1001 21
 936 009e FB68     		ldr	r3, [r7, #12]
 937 00a0 FA88     		ldrh	r2, [r7, #6]	@ movhi
 938 00a2 DA87     		strh	r2, [r3, #62]	@ movhi
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 939              		.loc 1 1004 21
 940 00a4 FB68     		ldr	r3, [r7, #12]
 941 00a6 0022     		movs	r2, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 35


 942 00a8 1A63     		str	r2, [r3, #48]
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 943              		.loc 1 1005 21
 944 00aa FB68     		ldr	r3, [r7, #12]
 945 00ac 0022     		movs	r2, #0
 946 00ae 9A86     		strh	r2, [r3, #52]	@ movhi
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 947              		.loc 1 1006 21
 948 00b0 FB68     		ldr	r3, [r7, #12]
 949 00b2 0022     		movs	r2, #0
 950 00b4 DA86     		strh	r2, [r3, #54]	@ movhi
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 951              		.loc 1 1007 21
 952 00b6 FB68     		ldr	r3, [r7, #12]
 953 00b8 0022     		movs	r2, #0
 954 00ba 1A64     		str	r2, [r3, #64]
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 955              		.loc 1 1008 21
 956 00bc FB68     		ldr	r3, [r7, #12]
 957 00be 0022     		movs	r2, #0
 958 00c0 5A64     		str	r2, [r3, #68]
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount--;
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 959              		.loc 1 1021 17
 960 00c2 FB68     		ldr	r3, [r7, #12]
 961 00c4 9B68     		ldr	r3, [r3, #8]
 962              		.loc 1 1021 6
 963 00c6 B3F5004F 		cmp	r3, #32768
 964 00ca 0FD1     		bne	.L48
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 965              		.loc 1 1024 5
 966 00cc FB68     		ldr	r3, [r7, #12]
 967 00ce 1B68     		ldr	r3, [r3]
 968 00d0 1A68     		ldr	r2, [r3]
 969 00d2 FB68     		ldr	r3, [r7, #12]
 970 00d4 1B68     		ldr	r3, [r3]
 971 00d6 22F04002 		bic	r2, r2, #64
 972 00da 1A60     		str	r2, [r3]
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 973              		.loc 1 1025 5
 974 00dc FB68     		ldr	r3, [r7, #12]
 975 00de 1B68     		ldr	r3, [r3]
 976 00e0 1A68     		ldr	r2, [r3]
 977 00e2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 36


 978 00e4 1B68     		ldr	r3, [r3]
 979 00e6 22F48042 		bic	r2, r2, #16384
 980 00ea 1A60     		str	r2, [r3]
 981              	.L48:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 982              		.loc 1 1029 12
 983 00ec FB68     		ldr	r3, [r7, #12]
 984 00ee 1B68     		ldr	r3, [r3]
 985              		.loc 1 1029 22
 986 00f0 1B68     		ldr	r3, [r3]
 987              		.loc 1 1029 28
 988 00f2 03F04003 		and	r3, r3, #64
 989              		.loc 1 1029 6
 990 00f6 402B     		cmp	r3, #64
 991 00f8 07D0     		beq	.L49
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 992              		.loc 1 1032 5
 993 00fa FB68     		ldr	r3, [r7, #12]
 994 00fc 1B68     		ldr	r3, [r3]
 995 00fe 1A68     		ldr	r2, [r3]
 996 0100 FB68     		ldr	r3, [r7, #12]
 997 0102 1B68     		ldr	r3, [r3]
 998 0104 42F04002 		orr	r2, r2, #64
 999 0108 1A60     		str	r2, [r3]
 1000              	.L49:
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 1001              		.loc 1 1036 17
 1002 010a FB68     		ldr	r3, [r7, #12]
 1003 010c DB68     		ldr	r3, [r3, #12]
 1004              		.loc 1 1036 6
 1005 010e 002B     		cmp	r3, #0
 1006 0110 6AD1     		bne	.L57
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 1007              		.loc 1 1039 11
 1008 0112 32E0     		b	.L51
 1009              	.L55:
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1010              		.loc 1 1042 11
 1011 0114 FB68     		ldr	r3, [r7, #12]
 1012 0116 1B68     		ldr	r3, [r3]
 1013 0118 9B68     		ldr	r3, [r3, #8]
 1014 011a 03F00103 		and	r3, r3, #1
 1015              		.loc 1 1042 10
 1016 011e 012B     		cmp	r3, #1
 1017 0120 15D1     		bne	.L52
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 37


1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* read the received data */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 1018              		.loc 1 1045 65
 1019 0122 FB68     		ldr	r3, [r7, #12]
 1020 0124 1B68     		ldr	r3, [r3]
 1021              		.loc 1 1045 60
 1022 0126 03F10C02 		add	r2, r3, #12
 1023              		.loc 1 1045 27
 1024 012a FB68     		ldr	r3, [r7, #12]
 1025 012c 9B6B     		ldr	r3, [r3, #56]
 1026              		.loc 1 1045 43
 1027 012e 1278     		ldrb	r2, [r2]
 1028 0130 D2B2     		uxtb	r2, r2
 1029              		.loc 1 1045 41
 1030 0132 1A70     		strb	r2, [r3]
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1031              		.loc 1 1046 26
 1032 0134 FB68     		ldr	r3, [r7, #12]
 1033 0136 9B6B     		ldr	r3, [r3, #56]
 1034 0138 5A1C     		adds	r2, r3, #1
 1035 013a FB68     		ldr	r3, [r7, #12]
 1036 013c 9A63     		str	r2, [r3, #56]
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1037              		.loc 1 1047 13
 1038 013e FB68     		ldr	r3, [r7, #12]
 1039 0140 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1040 0142 9BB2     		uxth	r3, r3
 1041              		.loc 1 1047 26
 1042 0144 013B     		subs	r3, r3, #1
 1043 0146 9AB2     		uxth	r2, r3
 1044 0148 FB68     		ldr	r3, [r7, #12]
 1045 014a DA87     		strh	r2, [r3, #62]	@ movhi
 1046 014c 15E0     		b	.L51
 1047              	.L52:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1048              		.loc 1 1052 16
 1049 014e FFF7FEFF 		bl	HAL_GetTick
 1050 0152 0246     		mov	r2, r0
 1051              		.loc 1 1052 30
 1052 0154 3B69     		ldr	r3, [r7, #16]
 1053 0156 D31A     		subs	r3, r2, r3
 1054              		.loc 1 1052 12
 1055 0158 3A68     		ldr	r2, [r7]
 1056 015a 9A42     		cmp	r2, r3
 1057 015c 03D8     		bhi	.L53
 1058              		.loc 1 1052 56 discriminator 1
 1059 015e 3B68     		ldr	r3, [r7]
 1060 0160 B3F1FF3F 		cmp	r3, #-1
 1061 0164 02D1     		bne	.L54
 1062              	.L53:
 1063              		.loc 1 1052 87 discriminator 3
 1064 0166 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 38


 1065 0168 002B     		cmp	r3, #0
 1066 016a 06D1     		bne	.L51
 1067              	.L54:
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 1068              		.loc 1 1054 21
 1069 016c 0323     		movs	r3, #3
 1070 016e FB75     		strb	r3, [r7, #23]
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1071              		.loc 1 1055 23
 1072 0170 FB68     		ldr	r3, [r7, #12]
 1073 0172 0122     		movs	r2, #1
 1074 0174 83F85120 		strb	r2, [r3, #81]
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1075              		.loc 1 1056 11
 1076 0178 51E0     		b	.L42
 1077              	.L51:
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1078              		.loc 1 1039 16
 1079 017a FB68     		ldr	r3, [r7, #12]
 1080 017c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1081 017e 9BB2     		uxth	r3, r3
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1082              		.loc 1 1039 11
 1083 0180 002B     		cmp	r3, #0
 1084 0182 C7D1     		bne	.L55
 1085 0184 35E0     		b	.L56
 1086              	.L61:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1087              		.loc 1 1067 11
 1088 0186 FB68     		ldr	r3, [r7, #12]
 1089 0188 1B68     		ldr	r3, [r3]
 1090 018a 9B68     		ldr	r3, [r3, #8]
 1091 018c 03F00103 		and	r3, r3, #1
 1092              		.loc 1 1067 10
 1093 0190 012B     		cmp	r3, #1
 1094 0192 13D1     		bne	.L58
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1095              		.loc 1 1069 57
 1096 0194 FB68     		ldr	r3, [r7, #12]
 1097 0196 1B68     		ldr	r3, [r3]
 1098              		.loc 1 1069 67
 1099 0198 DA68     		ldr	r2, [r3, #12]
 1100              		.loc 1 1069 27
 1101 019a FB68     		ldr	r3, [r7, #12]
 1102 019c 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 39


 1103              		.loc 1 1069 43
 1104 019e 92B2     		uxth	r2, r2
 1105              		.loc 1 1069 41
 1106 01a0 1A80     		strh	r2, [r3]	@ movhi
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1107              		.loc 1 1070 26
 1108 01a2 FB68     		ldr	r3, [r7, #12]
 1109 01a4 9B6B     		ldr	r3, [r3, #56]
 1110 01a6 9A1C     		adds	r2, r3, #2
 1111 01a8 FB68     		ldr	r3, [r7, #12]
 1112 01aa 9A63     		str	r2, [r3, #56]
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1113              		.loc 1 1071 13
 1114 01ac FB68     		ldr	r3, [r7, #12]
 1115 01ae DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1116 01b0 9BB2     		uxth	r3, r3
 1117              		.loc 1 1071 26
 1118 01b2 013B     		subs	r3, r3, #1
 1119 01b4 9AB2     		uxth	r2, r3
 1120 01b6 FB68     		ldr	r3, [r7, #12]
 1121 01b8 DA87     		strh	r2, [r3, #62]	@ movhi
 1122 01ba 15E0     		b	.L57
 1123              	.L58:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1124              		.loc 1 1076 16
 1125 01bc FFF7FEFF 		bl	HAL_GetTick
 1126 01c0 0246     		mov	r2, r0
 1127              		.loc 1 1076 30
 1128 01c2 3B69     		ldr	r3, [r7, #16]
 1129 01c4 D31A     		subs	r3, r2, r3
 1130              		.loc 1 1076 12
 1131 01c6 3A68     		ldr	r2, [r7]
 1132 01c8 9A42     		cmp	r2, r3
 1133 01ca 03D8     		bhi	.L59
 1134              		.loc 1 1076 56 discriminator 1
 1135 01cc 3B68     		ldr	r3, [r7]
 1136 01ce B3F1FF3F 		cmp	r3, #-1
 1137 01d2 02D1     		bne	.L60
 1138              	.L59:
 1139              		.loc 1 1076 87 discriminator 3
 1140 01d4 3B68     		ldr	r3, [r7]
 1141 01d6 002B     		cmp	r3, #0
 1142 01d8 06D1     		bne	.L57
 1143              	.L60:
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 1144              		.loc 1 1078 21
 1145 01da 0323     		movs	r3, #3
 1146 01dc FB75     		strb	r3, [r7, #23]
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1147              		.loc 1 1079 23
 1148 01de FB68     		ldr	r3, [r7, #12]
 1149 01e0 0122     		movs	r2, #1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 40


 1150 01e2 83F85120 		strb	r2, [r3, #81]
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1151              		.loc 1 1080 11
 1152 01e6 1AE0     		b	.L42
 1153              	.L57:
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1154              		.loc 1 1064 16
 1155 01e8 FB68     		ldr	r3, [r7, #12]
 1156 01ea DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1157 01ec 9BB2     		uxth	r3, r3
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1158              		.loc 1 1064 11
 1159 01ee 002B     		cmp	r3, #0
 1160 01f0 C9D1     		bne	.L61
 1161              	.L56:
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRCNEXT is well reset by hardware */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by h
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read the latest data */
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* the latest data has not been received */
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the CRC data */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 41


1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg);
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1162              		.loc 1 1134 7
 1163 01f2 3A69     		ldr	r2, [r7, #16]
 1164 01f4 3968     		ldr	r1, [r7]
 1165 01f6 F868     		ldr	r0, [r7, #12]
 1166 01f8 FFF7FEFF 		bl	SPI_EndRxTransaction
 1167 01fc 0346     		mov	r3, r0
 1168              		.loc 1 1134 6
 1169 01fe 002B     		cmp	r3, #0
 1170 0200 02D0     		beq	.L62
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1171              		.loc 1 1136 21
 1172 0202 FB68     		ldr	r3, [r7, #12]
 1173 0204 2022     		movs	r2, #32
 1174 0206 5A65     		str	r2, [r3, #84]
 1175              	.L62:
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1176              		.loc 1 1158 11
 1177 0208 FB68     		ldr	r3, [r7, #12]
 1178 020a 5B6D     		ldr	r3, [r3, #84]
 1179              		.loc 1 1158 6
 1180 020c 002B     		cmp	r3, #0
 1181 020e 02D0     		beq	.L63
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 42


1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1182              		.loc 1 1160 15
 1183 0210 0123     		movs	r3, #1
 1184 0212 FB75     		strb	r3, [r7, #23]
 1185 0214 03E0     		b	.L42
 1186              	.L63:
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1187              		.loc 1 1164 17
 1188 0216 FB68     		ldr	r3, [r7, #12]
 1189 0218 0122     		movs	r2, #1
 1190 021a 83F85120 		strb	r2, [r3, #81]
 1191              	.L42:
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1192              		.loc 1 1168 3
 1193 021e FB68     		ldr	r3, [r7, #12]
 1194 0220 0022     		movs	r2, #0
 1195 0222 83F85020 		strb	r2, [r3, #80]
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1196              		.loc 1 1169 10
 1197 0226 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1198              	.L44:
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1199              		.loc 1 1170 1
 1200 0228 1846     		mov	r0, r3
 1201 022a 1837     		adds	r7, r7, #24
 1202              	.LCFI30:
 1203              		.cfi_def_cfa_offset 8
 1204 022c BD46     		mov	sp, r7
 1205              	.LCFI31:
 1206              		.cfi_def_cfa_register 13
 1207              		@ sp needed
 1208 022e 80BD     		pop	{r7, pc}
 1209              		.cfi_endproc
 1210              	.LFE70:
 1212              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_SPI_TransmitReceive
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1219              	HAL_SPI_TransmitReceive:
 1220              	.LFB71:
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 43


1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                           uint32_t Timeout)
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 1221              		.loc 1 1184 1
 1222              		.cfi_startproc
 1223              		@ args = 4, pretend = 0, frame = 48
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 80B5     		push	{r7, lr}
 1226              	.LCFI32:
 1227              		.cfi_def_cfa_offset 8
 1228              		.cfi_offset 7, -8
 1229              		.cfi_offset 14, -4
 1230 0002 8CB0     		sub	sp, sp, #48
 1231              	.LCFI33:
 1232              		.cfi_def_cfa_offset 56
 1233 0004 00AF     		add	r7, sp, #0
 1234              	.LCFI34:
 1235              		.cfi_def_cfa_register 7
 1236 0006 F860     		str	r0, [r7, #12]
 1237 0008 B960     		str	r1, [r7, #8]
 1238 000a 7A60     		str	r2, [r7, #4]
 1239 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tickstart;
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
 1240              		.loc 1 1194 24
 1241 000e 0123     		movs	r3, #1
 1242 0010 FB62     		str	r3, [r7, #44]
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
 1243              		.loc 1 1195 24
 1244 0012 0023     		movs	r3, #0
 1245 0014 87F82B30 		strb	r3, [r7, #43]
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1246              		.loc 1 1201 3
 1247 0018 FB68     		ldr	r3, [r7, #12]
 1248 001a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1249 001e 012B     		cmp	r3, #1
 1250 0020 01D1     		bne	.L65
 1251              		.loc 1 1201 3 is_stmt 0 discriminator 1
 1252 0022 0223     		movs	r3, #2
 1253 0024 98E1     		b	.L66
 1254              	.L65:
 1255              		.loc 1 1201 3 discriminator 2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 44


 1256 0026 FB68     		ldr	r3, [r7, #12]
 1257 0028 0122     		movs	r2, #1
 1258 002a 83F85020 		strb	r2, [r3, #80]
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1259              		.loc 1 1204 15 is_stmt 1 discriminator 2
 1260 002e FFF7FEFF 		bl	HAL_GetTick
 1261 0032 7862     		str	r0, [r7, #36]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 1262              		.loc 1 1207 23 discriminator 2
 1263 0034 FB68     		ldr	r3, [r7, #12]
 1264 0036 93F85130 		ldrb	r3, [r3, #81]
 1265 003a 87F82330 		strb	r3, [r7, #35]
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1266              		.loc 1 1208 23 discriminator 2
 1267 003e FB68     		ldr	r3, [r7, #12]
 1268 0040 5B68     		ldr	r3, [r3, #4]
 1269 0042 FB61     		str	r3, [r7, #28]
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 1270              		.loc 1 1209 23 discriminator 2
 1271 0044 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1272 0046 7B83     		strh	r3, [r7, #26]	@ movhi
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 1273              		.loc 1 1211 6 discriminator 2
 1274 0048 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1275 004c 012B     		cmp	r3, #1
 1276 004e 0FD0     		beq	.L67
 1277              		.loc 1 1211 7 discriminator 1
 1278 0050 FB69     		ldr	r3, [r7, #28]
 1279 0052 B3F5827F 		cmp	r3, #260
 1280 0056 07D1     		bne	.L68
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1281              		.loc 1 1212 54
 1282 0058 FB68     		ldr	r3, [r7, #12]
 1283 005a 9B68     		ldr	r3, [r3, #8]
 1284              		.loc 1 1212 40
 1285 005c 002B     		cmp	r3, #0
 1286 005e 03D1     		bne	.L68
 1287              		.loc 1 1212 90 discriminator 1
 1288 0060 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 1289 0064 042B     		cmp	r3, #4
 1290 0066 03D0     		beq	.L67
 1291              	.L68:
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1292              		.loc 1 1214 15
 1293 0068 0223     		movs	r3, #2
 1294 006a 87F82B30 		strb	r3, [r7, #43]
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1295              		.loc 1 1215 5
 1296 006e 6DE1     		b	.L69
 1297              	.L67:
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 45


1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1298              		.loc 1 1218 6
 1299 0070 BB68     		ldr	r3, [r7, #8]
 1300 0072 002B     		cmp	r3, #0
 1301 0074 05D0     		beq	.L70
 1302              		.loc 1 1218 25 discriminator 1
 1303 0076 7B68     		ldr	r3, [r7, #4]
 1304 0078 002B     		cmp	r3, #0
 1305 007a 02D0     		beq	.L70
 1306              		.loc 1 1218 46 discriminator 2
 1307 007c 7B88     		ldrh	r3, [r7, #2]
 1308 007e 002B     		cmp	r3, #0
 1309 0080 03D1     		bne	.L71
 1310              	.L70:
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1311              		.loc 1 1220 15
 1312 0082 0123     		movs	r3, #1
 1313 0084 87F82B30 		strb	r3, [r7, #43]
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1314              		.loc 1 1221 5
 1315 0088 60E1     		b	.L69
 1316              	.L71:
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1317              		.loc 1 1225 11
 1318 008a FB68     		ldr	r3, [r7, #12]
 1319 008c 93F85130 		ldrb	r3, [r3, #81]
 1320 0090 DBB2     		uxtb	r3, r3
 1321              		.loc 1 1225 6
 1322 0092 042B     		cmp	r3, #4
 1323 0094 03D0     		beq	.L72
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1324              		.loc 1 1227 17
 1325 0096 FB68     		ldr	r3, [r7, #12]
 1326 0098 0522     		movs	r2, #5
 1327 009a 83F85120 		strb	r2, [r3, #81]
 1328              	.L72:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1329              		.loc 1 1231 21
 1330 009e FB68     		ldr	r3, [r7, #12]
 1331 00a0 0022     		movs	r2, #0
 1332 00a2 5A65     		str	r2, [r3, #84]
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1333              		.loc 1 1232 21
 1334 00a4 FB68     		ldr	r3, [r7, #12]
 1335 00a6 7A68     		ldr	r2, [r7, #4]
 1336 00a8 9A63     		str	r2, [r3, #56]
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1337              		.loc 1 1233 21
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 46


 1338 00aa FB68     		ldr	r3, [r7, #12]
 1339 00ac 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1340 00ae DA87     		strh	r2, [r3, #62]	@ movhi
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1341              		.loc 1 1234 21
 1342 00b0 FB68     		ldr	r3, [r7, #12]
 1343 00b2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1344 00b4 9A87     		strh	r2, [r3, #60]	@ movhi
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1345              		.loc 1 1235 21
 1346 00b6 FB68     		ldr	r3, [r7, #12]
 1347 00b8 BA68     		ldr	r2, [r7, #8]
 1348 00ba 1A63     		str	r2, [r3, #48]
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1349              		.loc 1 1236 21
 1350 00bc FB68     		ldr	r3, [r7, #12]
 1351 00be 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1352 00c0 DA86     		strh	r2, [r3, #54]	@ movhi
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1353              		.loc 1 1237 21
 1354 00c2 FB68     		ldr	r3, [r7, #12]
 1355 00c4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1356 00c6 9A86     		strh	r2, [r3, #52]	@ movhi
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1357              		.loc 1 1240 21
 1358 00c8 FB68     		ldr	r3, [r7, #12]
 1359 00ca 0022     		movs	r2, #0
 1360 00cc 1A64     		str	r2, [r3, #64]
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1361              		.loc 1 1241 21
 1362 00ce FB68     		ldr	r3, [r7, #12]
 1363 00d0 0022     		movs	r2, #0
 1364 00d2 5A64     		str	r2, [r3, #68]
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1365              		.loc 1 1252 12
 1366 00d4 FB68     		ldr	r3, [r7, #12]
 1367 00d6 1B68     		ldr	r3, [r3]
 1368              		.loc 1 1252 22
 1369 00d8 1B68     		ldr	r3, [r3]
 1370              		.loc 1 1252 28
 1371 00da 03F04003 		and	r3, r3, #64
 1372              		.loc 1 1252 6
 1373 00de 402B     		cmp	r3, #64
 1374 00e0 07D0     		beq	.L73
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 47


1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1375              		.loc 1 1255 5
 1376 00e2 FB68     		ldr	r3, [r7, #12]
 1377 00e4 1B68     		ldr	r3, [r3]
 1378 00e6 1A68     		ldr	r2, [r3]
 1379 00e8 FB68     		ldr	r3, [r7, #12]
 1380 00ea 1B68     		ldr	r3, [r3]
 1381 00ec 42F04002 		orr	r2, r2, #64
 1382 00f0 1A60     		str	r2, [r3]
 1383              	.L73:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 1384              		.loc 1 1259 17
 1385 00f2 FB68     		ldr	r3, [r7, #12]
 1386 00f4 DB68     		ldr	r3, [r3, #12]
 1387              		.loc 1 1259 6
 1388 00f6 B3F5006F 		cmp	r3, #2048
 1389 00fa 7CD1     		bne	.L74
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1390              		.loc 1 1261 20
 1391 00fc FB68     		ldr	r3, [r7, #12]
 1392 00fe 5B68     		ldr	r3, [r3, #4]
 1393              		.loc 1 1261 8
 1394 0100 002B     		cmp	r3, #0
 1395 0102 02D0     		beq	.L75
 1396              		.loc 1 1261 45 discriminator 1
 1397 0104 7B8B     		ldrh	r3, [r7, #26]
 1398 0106 012B     		cmp	r3, #1
 1399 0108 6AD1     		bne	.L77
 1400              	.L75:
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1401              		.loc 1 1263 46
 1402 010a FB68     		ldr	r3, [r7, #12]
 1403 010c 1B6B     		ldr	r3, [r3, #48]
 1404              		.loc 1 1263 28
 1405 010e 1A88     		ldrh	r2, [r3]
 1406              		.loc 1 1263 11
 1407 0110 FB68     		ldr	r3, [r7, #12]
 1408 0112 1B68     		ldr	r3, [r3]
 1409              		.loc 1 1263 26
 1410 0114 DA60     		str	r2, [r3, #12]
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1411              		.loc 1 1264 24
 1412 0116 FB68     		ldr	r3, [r7, #12]
 1413 0118 1B6B     		ldr	r3, [r3, #48]
 1414 011a 9A1C     		adds	r2, r3, #2
 1415 011c FB68     		ldr	r3, [r7, #12]
 1416 011e 1A63     		str	r2, [r3, #48]
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1417              		.loc 1 1265 11
 1418 0120 FB68     		ldr	r3, [r7, #12]
 1419 0122 DB8E     		ldrh	r3, [r3, #54]	@ movhi
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 48


 1420 0124 9BB2     		uxth	r3, r3
 1421              		.loc 1 1265 24
 1422 0126 013B     		subs	r3, r3, #1
 1423 0128 9AB2     		uxth	r2, r3
 1424 012a FB68     		ldr	r3, [r7, #12]
 1425 012c DA86     		strh	r2, [r3, #54]	@ movhi
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1426              		.loc 1 1267 11
 1427 012e 57E0     		b	.L77
 1428              	.L80:
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1429              		.loc 1 1270 12
 1430 0130 FB68     		ldr	r3, [r7, #12]
 1431 0132 1B68     		ldr	r3, [r3]
 1432 0134 9B68     		ldr	r3, [r3, #8]
 1433 0136 03F00203 		and	r3, r3, #2
 1434              		.loc 1 1270 10
 1435 013a 022B     		cmp	r3, #2
 1436 013c 1BD1     		bne	.L78
 1437              		.loc 1 1270 60 discriminator 1
 1438 013e FB68     		ldr	r3, [r7, #12]
 1439 0140 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1440 0142 9BB2     		uxth	r3, r3
 1441              		.loc 1 1270 52 discriminator 1
 1442 0144 002B     		cmp	r3, #0
 1443 0146 16D0     		beq	.L78
 1444              		.loc 1 1270 80 discriminator 2
 1445 0148 FB6A     		ldr	r3, [r7, #44]
 1446 014a 012B     		cmp	r3, #1
 1447 014c 13D1     		bne	.L78
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 1448              		.loc 1 1272 48
 1449 014e FB68     		ldr	r3, [r7, #12]
 1450 0150 1B6B     		ldr	r3, [r3, #48]
 1451              		.loc 1 1272 30
 1452 0152 1A88     		ldrh	r2, [r3]
 1453              		.loc 1 1272 13
 1454 0154 FB68     		ldr	r3, [r7, #12]
 1455 0156 1B68     		ldr	r3, [r3]
 1456              		.loc 1 1272 28
 1457 0158 DA60     		str	r2, [r3, #12]
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1458              		.loc 1 1273 26
 1459 015a FB68     		ldr	r3, [r7, #12]
 1460 015c 1B6B     		ldr	r3, [r3, #48]
 1461 015e 9A1C     		adds	r2, r3, #2
 1462 0160 FB68     		ldr	r3, [r7, #12]
 1463 0162 1A63     		str	r2, [r3, #48]
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1464              		.loc 1 1274 13
 1465 0164 FB68     		ldr	r3, [r7, #12]
 1466 0166 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1467 0168 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 49


 1468              		.loc 1 1274 26
 1469 016a 013B     		subs	r3, r3, #1
 1470 016c 9AB2     		uxth	r2, r3
 1471 016e FB68     		ldr	r3, [r7, #12]
 1472 0170 DA86     		strh	r2, [r3, #54]	@ movhi
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 1473              		.loc 1 1276 19
 1474 0172 0023     		movs	r3, #0
 1475 0174 FB62     		str	r3, [r7, #44]
 1476              	.L78:
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check RXNE flag */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1477              		.loc 1 1288 12
 1478 0176 FB68     		ldr	r3, [r7, #12]
 1479 0178 1B68     		ldr	r3, [r3]
 1480 017a 9B68     		ldr	r3, [r3, #8]
 1481 017c 03F00103 		and	r3, r3, #1
 1482              		.loc 1 1288 10
 1483 0180 012B     		cmp	r3, #1
 1484 0182 19D1     		bne	.L79
 1485              		.loc 1 1288 61 discriminator 1
 1486 0184 FB68     		ldr	r3, [r7, #12]
 1487 0186 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1488 0188 9BB2     		uxth	r3, r3
 1489              		.loc 1 1288 53 discriminator 1
 1490 018a 002B     		cmp	r3, #0
 1491 018c 14D0     		beq	.L79
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1492              		.loc 1 1290 57
 1493 018e FB68     		ldr	r3, [r7, #12]
 1494 0190 1B68     		ldr	r3, [r3]
 1495              		.loc 1 1290 67
 1496 0192 DA68     		ldr	r2, [r3, #12]
 1497              		.loc 1 1290 27
 1498 0194 FB68     		ldr	r3, [r7, #12]
 1499 0196 9B6B     		ldr	r3, [r3, #56]
 1500              		.loc 1 1290 43
 1501 0198 92B2     		uxth	r2, r2
 1502              		.loc 1 1290 41
 1503 019a 1A80     		strh	r2, [r3]	@ movhi
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1504              		.loc 1 1291 26
 1505 019c FB68     		ldr	r3, [r7, #12]
 1506 019e 9B6B     		ldr	r3, [r3, #56]
 1507 01a0 9A1C     		adds	r2, r3, #2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 50


 1508 01a2 FB68     		ldr	r3, [r7, #12]
 1509 01a4 9A63     		str	r2, [r3, #56]
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1510              		.loc 1 1292 13
 1511 01a6 FB68     		ldr	r3, [r7, #12]
 1512 01a8 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1513 01aa 9BB2     		uxth	r3, r3
 1514              		.loc 1 1292 26
 1515 01ac 013B     		subs	r3, r3, #1
 1516 01ae 9AB2     		uxth	r2, r3
 1517 01b0 FB68     		ldr	r3, [r7, #12]
 1518 01b2 DA87     		strh	r2, [r3, #62]	@ movhi
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 1519              		.loc 1 1294 19
 1520 01b4 0123     		movs	r3, #1
 1521 01b6 FB62     		str	r3, [r7, #44]
 1522              	.L79:
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 1523              		.loc 1 1296 13
 1524 01b8 FFF7FEFF 		bl	HAL_GetTick
 1525 01bc 0246     		mov	r2, r0
 1526              		.loc 1 1296 27
 1527 01be 7B6A     		ldr	r3, [r7, #36]
 1528 01c0 D31A     		subs	r3, r2, r3
 1529              		.loc 1 1296 10
 1530 01c2 BA6B     		ldr	r2, [r7, #56]
 1531 01c4 9A42     		cmp	r2, r3
 1532 01c6 0BD8     		bhi	.L77
 1533              		.loc 1 1296 53 discriminator 1
 1534 01c8 BB6B     		ldr	r3, [r7, #56]
 1535 01ca B3F1FF3F 		cmp	r3, #-1
 1536 01ce 07D0     		beq	.L77
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1537              		.loc 1 1298 19
 1538 01d0 0323     		movs	r3, #3
 1539 01d2 87F82B30 		strb	r3, [r7, #43]
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1540              		.loc 1 1299 21
 1541 01d6 FB68     		ldr	r3, [r7, #12]
 1542 01d8 0122     		movs	r2, #1
 1543 01da 83F85120 		strb	r2, [r3, #81]
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1544              		.loc 1 1300 9
 1545 01de B5E0     		b	.L69
 1546              	.L77:
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1547              		.loc 1 1267 17
 1548 01e0 FB68     		ldr	r3, [r7, #12]
 1549 01e2 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1550 01e4 9BB2     		uxth	r3, r3
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1551              		.loc 1 1267 11
 1552 01e6 002B     		cmp	r3, #0
 1553 01e8 A2D1     		bne	.L80
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 51


1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1554              		.loc 1 1267 45 discriminator 1
 1555 01ea FB68     		ldr	r3, [r7, #12]
 1556 01ec DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1557 01ee 9BB2     		uxth	r3, r3
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1558              		.loc 1 1267 37 discriminator 1
 1559 01f0 002B     		cmp	r3, #0
 1560 01f2 9DD1     		bne	.L80
 1561 01f4 80E0     		b	.L81
 1562              	.L74:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1563              		.loc 1 1307 20
 1564 01f6 FB68     		ldr	r3, [r7, #12]
 1565 01f8 5B68     		ldr	r3, [r3, #4]
 1566              		.loc 1 1307 8
 1567 01fa 002B     		cmp	r3, #0
 1568 01fc 02D0     		beq	.L82
 1569              		.loc 1 1307 45 discriminator 1
 1570 01fe 7B8B     		ldrh	r3, [r7, #26]
 1571 0200 012B     		cmp	r3, #1
 1572 0202 6FD1     		bne	.L84
 1573              	.L82:
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 1574              		.loc 1 1309 54
 1575 0204 FB68     		ldr	r3, [r7, #12]
 1576 0206 1A6B     		ldr	r2, [r3, #48]
 1577              		.loc 1 1309 30
 1578 0208 FB68     		ldr	r3, [r7, #12]
 1579 020a 1B68     		ldr	r3, [r3]
 1580              		.loc 1 1309 25
 1581 020c 0C33     		adds	r3, r3, #12
 1582              		.loc 1 1309 49
 1583 020e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1584              		.loc 1 1309 46
 1585 0210 1A70     		strb	r2, [r3]
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1586              		.loc 1 1310 24
 1587 0212 FB68     		ldr	r3, [r7, #12]
 1588 0214 1B6B     		ldr	r3, [r3, #48]
 1589 0216 5A1C     		adds	r2, r3, #1
 1590 0218 FB68     		ldr	r3, [r7, #12]
 1591 021a 1A63     		str	r2, [r3, #48]
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1592              		.loc 1 1311 11
 1593 021c FB68     		ldr	r3, [r7, #12]
 1594 021e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1595 0220 9BB2     		uxth	r3, r3
 1596              		.loc 1 1311 24
 1597 0222 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 52


 1598 0224 9AB2     		uxth	r2, r3
 1599 0226 FB68     		ldr	r3, [r7, #12]
 1600 0228 DA86     		strh	r2, [r3, #54]	@ movhi
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1601              		.loc 1 1313 11
 1602 022a 5BE0     		b	.L84
 1603              	.L89:
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1604              		.loc 1 1316 12
 1605 022c FB68     		ldr	r3, [r7, #12]
 1606 022e 1B68     		ldr	r3, [r3]
 1607 0230 9B68     		ldr	r3, [r3, #8]
 1608 0232 03F00203 		and	r3, r3, #2
 1609              		.loc 1 1316 10
 1610 0236 022B     		cmp	r3, #2
 1611 0238 1CD1     		bne	.L85
 1612              		.loc 1 1316 60 discriminator 1
 1613 023a FB68     		ldr	r3, [r7, #12]
 1614 023c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1615 023e 9BB2     		uxth	r3, r3
 1616              		.loc 1 1316 52 discriminator 1
 1617 0240 002B     		cmp	r3, #0
 1618 0242 17D0     		beq	.L85
 1619              		.loc 1 1316 80 discriminator 2
 1620 0244 FB6A     		ldr	r3, [r7, #44]
 1621 0246 012B     		cmp	r3, #1
 1622 0248 14D1     		bne	.L85
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 1623              		.loc 1 1318 54
 1624 024a FB68     		ldr	r3, [r7, #12]
 1625 024c 1A6B     		ldr	r2, [r3, #48]
 1626              		.loc 1 1318 31
 1627 024e FB68     		ldr	r3, [r7, #12]
 1628 0250 1B68     		ldr	r3, [r3]
 1629              		.loc 1 1318 26
 1630 0252 0C33     		adds	r3, r3, #12
 1631              		.loc 1 1318 49
 1632 0254 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1633              		.loc 1 1318 46
 1634 0256 1A70     		strb	r2, [r3]
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1635              		.loc 1 1319 13
 1636 0258 FB68     		ldr	r3, [r7, #12]
 1637 025a 1B6B     		ldr	r3, [r3, #48]
 1638              		.loc 1 1319 25
 1639 025c 5A1C     		adds	r2, r3, #1
 1640 025e FB68     		ldr	r3, [r7, #12]
 1641 0260 1A63     		str	r2, [r3, #48]
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1642              		.loc 1 1320 13
 1643 0262 FB68     		ldr	r3, [r7, #12]
 1644 0264 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1645 0266 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 53


 1646              		.loc 1 1320 26
 1647 0268 013B     		subs	r3, r3, #1
 1648 026a 9AB2     		uxth	r2, r3
 1649 026c FB68     		ldr	r3, [r7, #12]
 1650 026e DA86     		strh	r2, [r3, #54]	@ movhi
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 1651              		.loc 1 1322 19
 1652 0270 0023     		movs	r3, #0
 1653 0272 FB62     		str	r3, [r7, #44]
 1654              	.L85:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1655              		.loc 1 1334 12
 1656 0274 FB68     		ldr	r3, [r7, #12]
 1657 0276 1B68     		ldr	r3, [r3]
 1658 0278 9B68     		ldr	r3, [r3, #8]
 1659 027a 03F00103 		and	r3, r3, #1
 1660              		.loc 1 1334 10
 1661 027e 012B     		cmp	r3, #1
 1662 0280 19D1     		bne	.L86
 1663              		.loc 1 1334 61 discriminator 1
 1664 0282 FB68     		ldr	r3, [r7, #12]
 1665 0284 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1666 0286 9BB2     		uxth	r3, r3
 1667              		.loc 1 1334 53 discriminator 1
 1668 0288 002B     		cmp	r3, #0
 1669 028a 14D0     		beq	.L86
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1670              		.loc 1 1336 46
 1671 028c FB68     		ldr	r3, [r7, #12]
 1672 028e 1B68     		ldr	r3, [r3]
 1673              		.loc 1 1336 56
 1674 0290 DA68     		ldr	r2, [r3, #12]
 1675              		.loc 1 1336 26
 1676 0292 FB68     		ldr	r3, [r7, #12]
 1677 0294 9B6B     		ldr	r3, [r3, #56]
 1678              		.loc 1 1336 40
 1679 0296 D2B2     		uxtb	r2, r2
 1680 0298 1A70     		strb	r2, [r3]
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1681              		.loc 1 1337 13
 1682 029a FB68     		ldr	r3, [r7, #12]
 1683 029c 9B6B     		ldr	r3, [r3, #56]
 1684              		.loc 1 1337 25
 1685 029e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 54


 1686 02a0 FB68     		ldr	r3, [r7, #12]
 1687 02a2 9A63     		str	r2, [r3, #56]
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1688              		.loc 1 1338 13
 1689 02a4 FB68     		ldr	r3, [r7, #12]
 1690 02a6 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1691 02a8 9BB2     		uxth	r3, r3
 1692              		.loc 1 1338 26
 1693 02aa 013B     		subs	r3, r3, #1
 1694 02ac 9AB2     		uxth	r2, r3
 1695 02ae FB68     		ldr	r3, [r7, #12]
 1696 02b0 DA87     		strh	r2, [r3, #62]	@ movhi
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 1697              		.loc 1 1340 19
 1698 02b2 0123     		movs	r3, #1
 1699 02b4 FB62     		str	r3, [r7, #44]
 1700              	.L86:
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
 1701              		.loc 1 1342 14
 1702 02b6 FFF7FEFF 		bl	HAL_GetTick
 1703 02ba 0246     		mov	r2, r0
 1704              		.loc 1 1342 28
 1705 02bc 7B6A     		ldr	r3, [r7, #36]
 1706 02be D31A     		subs	r3, r2, r3
 1707              		.loc 1 1342 10
 1708 02c0 BA6B     		ldr	r2, [r7, #56]
 1709 02c2 9A42     		cmp	r2, r3
 1710 02c4 03D8     		bhi	.L87
 1711              		.loc 1 1342 54 discriminator 1
 1712 02c6 BB6B     		ldr	r3, [r7, #56]
 1713 02c8 B3F1FF3F 		cmp	r3, #-1
 1714 02cc 02D1     		bne	.L88
 1715              	.L87:
 1716              		.loc 1 1342 87 discriminator 3
 1717 02ce BB6B     		ldr	r3, [r7, #56]
 1718 02d0 002B     		cmp	r3, #0
 1719 02d2 07D1     		bne	.L84
 1720              	.L88:
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
 1721              		.loc 1 1344 19
 1722 02d4 0323     		movs	r3, #3
 1723 02d6 87F82B30 		strb	r3, [r7, #43]
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1724              		.loc 1 1345 21
 1725 02da FB68     		ldr	r3, [r7, #12]
 1726 02dc 0122     		movs	r2, #1
 1727 02de 83F85120 		strb	r2, [r3, #81]
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1728              		.loc 1 1346 9
 1729 02e2 33E0     		b	.L69
 1730              	.L84:
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1731              		.loc 1 1313 17
 1732 02e4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 55


 1733 02e6 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1734 02e8 9BB2     		uxth	r3, r3
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1735              		.loc 1 1313 11
 1736 02ea 002B     		cmp	r3, #0
 1737 02ec 9ED1     		bne	.L89
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1738              		.loc 1 1313 45 discriminator 1
 1739 02ee FB68     		ldr	r3, [r7, #12]
 1740 02f0 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1741 02f2 9BB2     		uxth	r3, r3
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1742              		.loc 1 1313 37 discriminator 1
 1743 02f4 002B     		cmp	r3, #0
 1744 02f6 99D1     		bne	.L89
 1745              	.L81:
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait until TXE flag */
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Error on the CRC reception */
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC */
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg);
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 56


1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1746              		.loc 1 1390 7
 1747 02f8 7A6A     		ldr	r2, [r7, #36]
 1748 02fa B96B     		ldr	r1, [r7, #56]
 1749 02fc F868     		ldr	r0, [r7, #12]
 1750 02fe FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1751 0302 0346     		mov	r3, r0
 1752              		.loc 1 1390 6
 1753 0304 002B     		cmp	r3, #0
 1754 0306 06D0     		beq	.L90
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1755              		.loc 1 1392 15
 1756 0308 0123     		movs	r3, #1
 1757 030a 87F82B30 		strb	r3, [r7, #43]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1758              		.loc 1 1393 21
 1759 030e FB68     		ldr	r3, [r7, #12]
 1760 0310 2022     		movs	r2, #32
 1761 0312 5A65     		str	r2, [r3, #84]
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1762              		.loc 1 1394 5
 1763 0314 1AE0     		b	.L69
 1764              	.L90:
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 1765              		.loc 1 1398 17
 1766 0316 FB68     		ldr	r3, [r7, #12]
 1767 0318 9B68     		ldr	r3, [r3, #8]
 1768              		.loc 1 1398 6
 1769 031a 002B     		cmp	r3, #0
 1770 031c 0AD1     		bne	.L91
 1771              	.LBB3:
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 1772              		.loc 1 1400 5
 1773 031e 0023     		movs	r3, #0
 1774 0320 7B61     		str	r3, [r7, #20]
 1775 0322 FB68     		ldr	r3, [r7, #12]
 1776 0324 1B68     		ldr	r3, [r3]
 1777 0326 DB68     		ldr	r3, [r3, #12]
 1778 0328 7B61     		str	r3, [r7, #20]
 1779 032a FB68     		ldr	r3, [r7, #12]
 1780 032c 1B68     		ldr	r3, [r3]
 1781 032e 9B68     		ldr	r3, [r3, #8]
 1782 0330 7B61     		str	r3, [r7, #20]
 1783 0332 7B69     		ldr	r3, [r7, #20]
 1784              	.L91:
 1785              	.LBE3:
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1786              		.loc 1 1403 11
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 57


 1787 0334 FB68     		ldr	r3, [r7, #12]
 1788 0336 5B6D     		ldr	r3, [r3, #84]
 1789              		.loc 1 1403 6
 1790 0338 002B     		cmp	r3, #0
 1791 033a 03D0     		beq	.L92
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1792              		.loc 1 1405 15
 1793 033c 0123     		movs	r3, #1
 1794 033e 87F82B30 		strb	r3, [r7, #43]
 1795 0342 03E0     		b	.L69
 1796              	.L92:
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1797              		.loc 1 1409 17
 1798 0344 FB68     		ldr	r3, [r7, #12]
 1799 0346 0122     		movs	r2, #1
 1800 0348 83F85120 		strb	r2, [r3, #81]
 1801              	.L69:
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1802              		.loc 1 1413 3
 1803 034c FB68     		ldr	r3, [r7, #12]
 1804 034e 0022     		movs	r2, #0
 1805 0350 83F85020 		strb	r2, [r3, #80]
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1806              		.loc 1 1414 10
 1807 0354 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1808              	.L66:
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1809              		.loc 1 1415 1
 1810 0358 1846     		mov	r0, r3
 1811 035a 3037     		adds	r7, r7, #48
 1812              	.LCFI35:
 1813              		.cfi_def_cfa_offset 8
 1814 035c BD46     		mov	sp, r7
 1815              	.LCFI36:
 1816              		.cfi_def_cfa_register 13
 1817              		@ sp needed
 1818 035e 80BD     		pop	{r7, pc}
 1819              		.cfi_endproc
 1820              	.LFE71:
 1822              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1823              		.align	1
 1824              		.global	HAL_SPI_Transmit_IT
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1829              	HAL_SPI_Transmit_IT:
 1830              	.LFB72:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 58


1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 1831              		.loc 1 1426 1
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 24
 1834              		@ frame_needed = 1, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836 0000 80B4     		push	{r7}
 1837              	.LCFI37:
 1838              		.cfi_def_cfa_offset 4
 1839              		.cfi_offset 7, -4
 1840 0002 87B0     		sub	sp, sp, #28
 1841              	.LCFI38:
 1842              		.cfi_def_cfa_offset 32
 1843 0004 00AF     		add	r7, sp, #0
 1844              	.LCFI39:
 1845              		.cfi_def_cfa_register 7
 1846 0006 F860     		str	r0, [r7, #12]
 1847 0008 B960     		str	r1, [r7, #8]
 1848 000a 1346     		mov	r3, r2
 1849 000c FB80     		strh	r3, [r7, #6]	@ movhi
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1850              		.loc 1 1427 21
 1851 000e 0023     		movs	r3, #0
 1852 0010 FB75     		strb	r3, [r7, #23]
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1853              		.loc 1 1433 3
 1854 0012 FB68     		ldr	r3, [r7, #12]
 1855 0014 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1856 0018 012B     		cmp	r3, #1
 1857 001a 01D1     		bne	.L94
 1858              		.loc 1 1433 3 is_stmt 0 discriminator 1
 1859 001c 0223     		movs	r3, #2
 1860 001e 6FE0     		b	.L95
 1861              	.L94:
 1862              		.loc 1 1433 3 discriminator 2
 1863 0020 FB68     		ldr	r3, [r7, #12]
 1864 0022 0122     		movs	r2, #1
 1865 0024 83F85020 		strb	r2, [r3, #80]
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 1866              		.loc 1 1435 6 is_stmt 1 discriminator 2
 1867 0028 BB68     		ldr	r3, [r7, #8]
 1868 002a 002B     		cmp	r3, #0
 1869 002c 02D0     		beq	.L96
 1870              		.loc 1 1435 23 discriminator 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 59


 1871 002e FB88     		ldrh	r3, [r7, #6]
 1872 0030 002B     		cmp	r3, #0
 1873 0032 02D1     		bne	.L97
 1874              	.L96:
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 1875              		.loc 1 1437 15
 1876 0034 0123     		movs	r3, #1
 1877 0036 FB75     		strb	r3, [r7, #23]
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1878              		.loc 1 1438 5
 1879 0038 5DE0     		b	.L98
 1880              	.L97:
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1881              		.loc 1 1441 11
 1882 003a FB68     		ldr	r3, [r7, #12]
 1883 003c 93F85130 		ldrb	r3, [r3, #81]
 1884 0040 DBB2     		uxtb	r3, r3
 1885              		.loc 1 1441 6
 1886 0042 012B     		cmp	r3, #1
 1887 0044 02D0     		beq	.L99
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 1888              		.loc 1 1443 15
 1889 0046 0223     		movs	r3, #2
 1890 0048 FB75     		strb	r3, [r7, #23]
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1891              		.loc 1 1444 5
 1892 004a 54E0     		b	.L98
 1893              	.L99:
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 1894              		.loc 1 1448 21
 1895 004c FB68     		ldr	r3, [r7, #12]
 1896 004e 0322     		movs	r2, #3
 1897 0050 83F85120 		strb	r2, [r3, #81]
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1898              		.loc 1 1449 21
 1899 0054 FB68     		ldr	r3, [r7, #12]
 1900 0056 0022     		movs	r2, #0
 1901 0058 5A65     		str	r2, [r3, #84]
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1902              		.loc 1 1450 21
 1903 005a FB68     		ldr	r3, [r7, #12]
 1904 005c BA68     		ldr	r2, [r7, #8]
 1905 005e 1A63     		str	r2, [r3, #48]
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1906              		.loc 1 1451 21
 1907 0060 FB68     		ldr	r3, [r7, #12]
 1908 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1909 0064 9A86     		strh	r2, [r3, #52]	@ movhi
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1910              		.loc 1 1452 21
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 60


 1911 0066 FB68     		ldr	r3, [r7, #12]
 1912 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1913 006a DA86     		strh	r2, [r3, #54]	@ movhi
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 1914              		.loc 1 1455 21
 1915 006c FB68     		ldr	r3, [r7, #12]
 1916 006e 0022     		movs	r2, #0
 1917 0070 9A63     		str	r2, [r3, #56]
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1918              		.loc 1 1456 21
 1919 0072 FB68     		ldr	r3, [r7, #12]
 1920 0074 0022     		movs	r2, #0
 1921 0076 9A87     		strh	r2, [r3, #60]	@ movhi
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1922              		.loc 1 1457 21
 1923 0078 FB68     		ldr	r3, [r7, #12]
 1924 007a 0022     		movs	r2, #0
 1925 007c DA87     		strh	r2, [r3, #62]	@ movhi
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1926              		.loc 1 1458 21
 1927 007e FB68     		ldr	r3, [r7, #12]
 1928 0080 0022     		movs	r2, #0
 1929 0082 1A64     		str	r2, [r3, #64]
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1930              		.loc 1 1461 17
 1931 0084 FB68     		ldr	r3, [r7, #12]
 1932 0086 DB68     		ldr	r3, [r3, #12]
 1933              		.loc 1 1461 6
 1934 0088 002B     		cmp	r3, #0
 1935 008a 03D0     		beq	.L100
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 1936              		.loc 1 1463 17
 1937 008c FB68     		ldr	r3, [r7, #12]
 1938 008e 1F4A     		ldr	r2, .L104
 1939 0090 5A64     		str	r2, [r3, #68]
 1940 0092 02E0     		b	.L101
 1941              	.L100:
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 1942              		.loc 1 1467 17
 1943 0094 FB68     		ldr	r3, [r7, #12]
 1944 0096 1E4A     		ldr	r2, .L104+4
 1945 0098 5A64     		str	r2, [r3, #68]
 1946              	.L101:
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1947              		.loc 1 1471 17
 1948 009a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 61


 1949 009c 9B68     		ldr	r3, [r3, #8]
 1950              		.loc 1 1471 6
 1951 009e B3F5004F 		cmp	r3, #32768
 1952 00a2 0FD1     		bne	.L102
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 1953              		.loc 1 1474 5
 1954 00a4 FB68     		ldr	r3, [r7, #12]
 1955 00a6 1B68     		ldr	r3, [r3]
 1956 00a8 1A68     		ldr	r2, [r3]
 1957 00aa FB68     		ldr	r3, [r7, #12]
 1958 00ac 1B68     		ldr	r3, [r3]
 1959 00ae 22F04002 		bic	r2, r2, #64
 1960 00b2 1A60     		str	r2, [r3]
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1961              		.loc 1 1475 5
 1962 00b4 FB68     		ldr	r3, [r7, #12]
 1963 00b6 1B68     		ldr	r3, [r3]
 1964 00b8 1A68     		ldr	r2, [r3]
 1965 00ba FB68     		ldr	r3, [r7, #12]
 1966 00bc 1B68     		ldr	r3, [r3]
 1967 00be 42F48042 		orr	r2, r2, #16384
 1968 00c2 1A60     		str	r2, [r3]
 1969              	.L102:
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1970              		.loc 1 1487 3
 1971 00c4 FB68     		ldr	r3, [r7, #12]
 1972 00c6 1B68     		ldr	r3, [r3]
 1973 00c8 5A68     		ldr	r2, [r3, #4]
 1974 00ca FB68     		ldr	r3, [r7, #12]
 1975 00cc 1B68     		ldr	r3, [r3]
 1976 00ce 42F0A002 		orr	r2, r2, #160
 1977 00d2 5A60     		str	r2, [r3, #4]
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1978              		.loc 1 1491 12
 1979 00d4 FB68     		ldr	r3, [r7, #12]
 1980 00d6 1B68     		ldr	r3, [r3]
 1981              		.loc 1 1491 22
 1982 00d8 1B68     		ldr	r3, [r3]
 1983              		.loc 1 1491 28
 1984 00da 03F04003 		and	r3, r3, #64
 1985              		.loc 1 1491 6
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 62


 1986 00de 402B     		cmp	r3, #64
 1987 00e0 08D0     		beq	.L103
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1988              		.loc 1 1494 5
 1989 00e2 FB68     		ldr	r3, [r7, #12]
 1990 00e4 1B68     		ldr	r3, [r3]
 1991 00e6 1A68     		ldr	r2, [r3]
 1992 00e8 FB68     		ldr	r3, [r7, #12]
 1993 00ea 1B68     		ldr	r3, [r3]
 1994 00ec 42F04002 		orr	r2, r2, #64
 1995 00f0 1A60     		str	r2, [r3]
 1996 00f2 00E0     		b	.L98
 1997              	.L103:
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
 1998              		.loc 1 1497 1
 1999 00f4 00BF     		nop
 2000              	.L98:
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2001              		.loc 1 1498 3
 2002 00f6 FB68     		ldr	r3, [r7, #12]
 2003 00f8 0022     		movs	r2, #0
 2004 00fa 83F85020 		strb	r2, [r3, #80]
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2005              		.loc 1 1499 10
 2006 00fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2007              	.L95:
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2008              		.loc 1 1500 1
 2009 0100 1846     		mov	r0, r3
 2010 0102 1C37     		adds	r7, r7, #28
 2011              	.LCFI40:
 2012              		.cfi_def_cfa_offset 4
 2013 0104 BD46     		mov	sp, r7
 2014              	.LCFI41:
 2015              		.cfi_def_cfa_register 13
 2016              		@ sp needed
 2017 0106 80BC     		pop	{r7}
 2018              	.LCFI42:
 2019              		.cfi_restore 7
 2020              		.cfi_def_cfa_offset 0
 2021 0108 7047     		bx	lr
 2022              	.L105:
 2023 010a 00BF     		.align	2
 2024              	.L104:
 2025 010c 00000000 		.word	SPI_TxISR_16BIT
 2026 0110 00000000 		.word	SPI_TxISR_8BIT
 2027              		.cfi_endproc
 2028              	.LFE72:
 2030              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2031              		.align	1
 2032              		.global	HAL_SPI_Receive_IT
 2033              		.syntax unified
 2034              		.thumb
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 63


 2035              		.thumb_func
 2037              	HAL_SPI_Receive_IT:
 2038              	.LFB73:
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2039              		.loc 1 1511 1
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 24
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043 0000 80B5     		push	{r7, lr}
 2044              	.LCFI43:
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 7, -8
 2047              		.cfi_offset 14, -4
 2048 0002 86B0     		sub	sp, sp, #24
 2049              	.LCFI44:
 2050              		.cfi_def_cfa_offset 32
 2051 0004 00AF     		add	r7, sp, #0
 2052              	.LCFI45:
 2053              		.cfi_def_cfa_register 7
 2054 0006 F860     		str	r0, [r7, #12]
 2055 0008 B960     		str	r1, [r7, #8]
 2056 000a 1346     		mov	r3, r2
 2057 000c FB80     		strh	r3, [r7, #6]	@ movhi
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2058              		.loc 1 1512 21
 2059 000e 0023     		movs	r3, #0
 2060 0010 FB75     		strb	r3, [r7, #23]
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2061              		.loc 1 1515 11
 2062 0012 FB68     		ldr	r3, [r7, #12]
 2063 0014 93F85130 		ldrb	r3, [r3, #81]
 2064 0018 DBB2     		uxtb	r3, r3
 2065              		.loc 1 1515 6
 2066 001a 012B     		cmp	r3, #1
 2067 001c 02D0     		beq	.L107
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2068              		.loc 1 1517 15
 2069 001e 0223     		movs	r3, #2
 2070 0020 FB75     		strb	r3, [r7, #23]
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2071              		.loc 1 1518 5
 2072 0022 7DE0     		b	.L108
 2073              	.L107:
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 64


1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2074              		.loc 1 1521 18
 2075 0024 FB68     		ldr	r3, [r7, #12]
 2076 0026 9B68     		ldr	r3, [r3, #8]
 2077              		.loc 1 1521 6
 2078 0028 002B     		cmp	r3, #0
 2079 002a 10D1     		bne	.L109
 2080              		.loc 1 1521 68 discriminator 1
 2081 002c FB68     		ldr	r3, [r7, #12]
 2082 002e 5B68     		ldr	r3, [r3, #4]
 2083              		.loc 1 1521 54 discriminator 1
 2084 0030 B3F5827F 		cmp	r3, #260
 2085 0034 0BD1     		bne	.L109
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2086              		.loc 1 1523 17
 2087 0036 FB68     		ldr	r3, [r7, #12]
 2088 0038 0422     		movs	r2, #4
 2089 003a 83F85120 		strb	r2, [r3, #81]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 2090              		.loc 1 1525 12
 2091 003e FB88     		ldrh	r3, [r7, #6]
 2092 0040 BA68     		ldr	r2, [r7, #8]
 2093 0042 B968     		ldr	r1, [r7, #8]
 2094 0044 F868     		ldr	r0, [r7, #12]
 2095 0046 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2096 004a 0346     		mov	r3, r0
 2097 004c 6DE0     		b	.L110
 2098              	.L109:
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2099              		.loc 1 1529 3
 2100 004e FB68     		ldr	r3, [r7, #12]
 2101 0050 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2102 0054 012B     		cmp	r3, #1
 2103 0056 01D1     		bne	.L111
 2104              		.loc 1 1529 3 is_stmt 0 discriminator 1
 2105 0058 0223     		movs	r3, #2
 2106 005a 66E0     		b	.L110
 2107              	.L111:
 2108              		.loc 1 1529 3 discriminator 2
 2109 005c FB68     		ldr	r3, [r7, #12]
 2110 005e 0122     		movs	r2, #1
 2111 0060 83F85020 		strb	r2, [r3, #80]
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2112              		.loc 1 1531 6 is_stmt 1 discriminator 2
 2113 0064 BB68     		ldr	r3, [r7, #8]
 2114 0066 002B     		cmp	r3, #0
 2115 0068 02D0     		beq	.L112
 2116              		.loc 1 1531 23 discriminator 1
 2117 006a FB88     		ldrh	r3, [r7, #6]
 2118 006c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 65


 2119 006e 02D1     		bne	.L113
 2120              	.L112:
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2121              		.loc 1 1533 15
 2122 0070 0123     		movs	r3, #1
 2123 0072 FB75     		strb	r3, [r7, #23]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2124              		.loc 1 1534 5
 2125 0074 54E0     		b	.L108
 2126              	.L113:
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2127              		.loc 1 1538 21
 2128 0076 FB68     		ldr	r3, [r7, #12]
 2129 0078 0422     		movs	r2, #4
 2130 007a 83F85120 		strb	r2, [r3, #81]
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2131              		.loc 1 1539 21
 2132 007e FB68     		ldr	r3, [r7, #12]
 2133 0080 0022     		movs	r2, #0
 2134 0082 5A65     		str	r2, [r3, #84]
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2135              		.loc 1 1540 21
 2136 0084 FB68     		ldr	r3, [r7, #12]
 2137 0086 BA68     		ldr	r2, [r7, #8]
 2138 0088 9A63     		str	r2, [r3, #56]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2139              		.loc 1 1541 21
 2140 008a FB68     		ldr	r3, [r7, #12]
 2141 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2142 008e 9A87     		strh	r2, [r3, #60]	@ movhi
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2143              		.loc 1 1542 21
 2144 0090 FB68     		ldr	r3, [r7, #12]
 2145 0092 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2146 0094 DA87     		strh	r2, [r3, #62]	@ movhi
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 2147              		.loc 1 1545 21
 2148 0096 FB68     		ldr	r3, [r7, #12]
 2149 0098 0022     		movs	r2, #0
 2150 009a 1A63     		str	r2, [r3, #48]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2151              		.loc 1 1546 21
 2152 009c FB68     		ldr	r3, [r7, #12]
 2153 009e 0022     		movs	r2, #0
 2154 00a0 9A86     		strh	r2, [r3, #52]	@ movhi
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2155              		.loc 1 1547 21
 2156 00a2 FB68     		ldr	r3, [r7, #12]
 2157 00a4 0022     		movs	r2, #0
 2158 00a6 DA86     		strh	r2, [r3, #54]	@ movhi
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 66


 2159              		.loc 1 1548 21
 2160 00a8 FB68     		ldr	r3, [r7, #12]
 2161 00aa 0022     		movs	r2, #0
 2162 00ac 5A64     		str	r2, [r3, #68]
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2163              		.loc 1 1551 17
 2164 00ae FB68     		ldr	r3, [r7, #12]
 2165 00b0 DB68     		ldr	r3, [r3, #12]
 2166              		.loc 1 1551 6
 2167 00b2 002B     		cmp	r3, #0
 2168 00b4 03D0     		beq	.L114
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2169              		.loc 1 1553 17
 2170 00b6 FB68     		ldr	r3, [r7, #12]
 2171 00b8 1E4A     		ldr	r2, .L118
 2172 00ba 1A64     		str	r2, [r3, #64]
 2173 00bc 02E0     		b	.L115
 2174              	.L114:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2175              		.loc 1 1557 17
 2176 00be FB68     		ldr	r3, [r7, #12]
 2177 00c0 1D4A     		ldr	r2, .L118+4
 2178 00c2 1A64     		str	r2, [r3, #64]
 2179              	.L115:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2180              		.loc 1 1561 17
 2181 00c4 FB68     		ldr	r3, [r7, #12]
 2182 00c6 9B68     		ldr	r3, [r3, #8]
 2183              		.loc 1 1561 6
 2184 00c8 B3F5004F 		cmp	r3, #32768
 2185 00cc 0FD1     		bne	.L116
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2186              		.loc 1 1564 5
 2187 00ce FB68     		ldr	r3, [r7, #12]
 2188 00d0 1B68     		ldr	r3, [r3]
 2189 00d2 1A68     		ldr	r2, [r3]
 2190 00d4 FB68     		ldr	r3, [r7, #12]
 2191 00d6 1B68     		ldr	r3, [r3]
 2192 00d8 22F04002 		bic	r2, r2, #64
 2193 00dc 1A60     		str	r2, [r3]
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2194              		.loc 1 1565 5
 2195 00de FB68     		ldr	r3, [r7, #12]
 2196 00e0 1B68     		ldr	r3, [r3]
 2197 00e2 1A68     		ldr	r2, [r3]
 2198 00e4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 67


 2199 00e6 1B68     		ldr	r3, [r3]
 2200 00e8 22F48042 		bic	r2, r2, #16384
 2201 00ec 1A60     		str	r2, [r3]
 2202              	.L116:
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2203              		.loc 1 1577 3
 2204 00ee FB68     		ldr	r3, [r7, #12]
 2205 00f0 1B68     		ldr	r3, [r3]
 2206 00f2 5A68     		ldr	r2, [r3, #4]
 2207 00f4 FB68     		ldr	r3, [r7, #12]
 2208 00f6 1B68     		ldr	r3, [r3]
 2209 00f8 42F06002 		orr	r2, r2, #96
 2210 00fc 5A60     		str	r2, [r3, #4]
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             process unlock */
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2211              		.loc 1 1584 12
 2212 00fe FB68     		ldr	r3, [r7, #12]
 2213 0100 1B68     		ldr	r3, [r3]
 2214              		.loc 1 1584 22
 2215 0102 1B68     		ldr	r3, [r3]
 2216              		.loc 1 1584 28
 2217 0104 03F04003 		and	r3, r3, #64
 2218              		.loc 1 1584 6
 2219 0108 402B     		cmp	r3, #64
 2220 010a 08D0     		beq	.L117
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2221              		.loc 1 1587 5
 2222 010c FB68     		ldr	r3, [r7, #12]
 2223 010e 1B68     		ldr	r3, [r3]
 2224 0110 1A68     		ldr	r2, [r3]
 2225 0112 FB68     		ldr	r3, [r7, #12]
 2226 0114 1B68     		ldr	r3, [r3]
 2227 0116 42F04002 		orr	r2, r2, #64
 2228 011a 1A60     		str	r2, [r3]
 2229 011c 00E0     		b	.L108
 2230              	.L117:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 68


 2231              		.loc 1 1590 1
 2232 011e 00BF     		nop
 2233              	.L108:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2234              		.loc 1 1592 3
 2235 0120 FB68     		ldr	r3, [r7, #12]
 2236 0122 0022     		movs	r2, #0
 2237 0124 83F85020 		strb	r2, [r3, #80]
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2238              		.loc 1 1593 10
 2239 0128 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2240              	.L110:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2241              		.loc 1 1594 1
 2242 012a 1846     		mov	r0, r3
 2243 012c 1837     		adds	r7, r7, #24
 2244              	.LCFI46:
 2245              		.cfi_def_cfa_offset 8
 2246 012e BD46     		mov	sp, r7
 2247              	.LCFI47:
 2248              		.cfi_def_cfa_register 13
 2249              		@ sp needed
 2250 0130 80BD     		pop	{r7, pc}
 2251              	.L119:
 2252 0132 00BF     		.align	2
 2253              	.L118:
 2254 0134 00000000 		.word	SPI_RxISR_16BIT
 2255 0138 00000000 		.word	SPI_RxISR_8BIT
 2256              		.cfi_endproc
 2257              	.LFE73:
 2259              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2260              		.align	1
 2261              		.global	HAL_SPI_TransmitReceive_IT
 2262              		.syntax unified
 2263              		.thumb
 2264              		.thumb_func
 2266              	HAL_SPI_TransmitReceive_IT:
 2267              	.LFB74:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2268              		.loc 1 1606 1
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 24
 2271              		@ frame_needed = 1, uses_anonymous_args = 0
 2272              		@ link register save eliminated.
 2273 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 69


 2274              	.LCFI48:
 2275              		.cfi_def_cfa_offset 4
 2276              		.cfi_offset 7, -4
 2277 0002 87B0     		sub	sp, sp, #28
 2278              	.LCFI49:
 2279              		.cfi_def_cfa_offset 32
 2280 0004 00AF     		add	r7, sp, #0
 2281              	.LCFI50:
 2282              		.cfi_def_cfa_register 7
 2283 0006 F860     		str	r0, [r7, #12]
 2284 0008 B960     		str	r1, [r7, #8]
 2285 000a 7A60     		str	r2, [r7, #4]
 2286 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
 2287              		.loc 1 1609 24
 2288 000e 0023     		movs	r3, #0
 2289 0010 FB75     		strb	r3, [r7, #23]
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2290              		.loc 1 1615 3
 2291 0012 FB68     		ldr	r3, [r7, #12]
 2292 0014 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2293 0018 012B     		cmp	r3, #1
 2294 001a 01D1     		bne	.L121
 2295              		.loc 1 1615 3 is_stmt 0 discriminator 1
 2296 001c 0223     		movs	r3, #2
 2297 001e 75E0     		b	.L122
 2298              	.L121:
 2299              		.loc 1 1615 3 discriminator 2
 2300 0020 FB68     		ldr	r3, [r7, #12]
 2301 0022 0122     		movs	r2, #1
 2302 0024 83F85020 		strb	r2, [r3, #80]
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 2303              		.loc 1 1618 23 is_stmt 1 discriminator 2
 2304 0028 FB68     		ldr	r3, [r7, #12]
 2305 002a 93F85130 		ldrb	r3, [r3, #81]
 2306 002e BB75     		strb	r3, [r7, #22]
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2307              		.loc 1 1619 23 discriminator 2
 2308 0030 FB68     		ldr	r3, [r7, #12]
 2309 0032 5B68     		ldr	r3, [r3, #4]
 2310 0034 3B61     		str	r3, [r7, #16]
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 2311              		.loc 1 1621 6 discriminator 2
 2312 0036 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2313 0038 012B     		cmp	r3, #1
 2314 003a 0DD0     		beq	.L123
 2315              		.loc 1 1621 7 discriminator 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 70


 2316 003c 3B69     		ldr	r3, [r7, #16]
 2317 003e B3F5827F 		cmp	r3, #260
 2318 0042 06D1     		bne	.L124
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2319              		.loc 1 1622 54
 2320 0044 FB68     		ldr	r3, [r7, #12]
 2321 0046 9B68     		ldr	r3, [r3, #8]
 2322              		.loc 1 1622 40
 2323 0048 002B     		cmp	r3, #0
 2324 004a 02D1     		bne	.L124
 2325              		.loc 1 1622 90 discriminator 1
 2326 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 2327 004e 042B     		cmp	r3, #4
 2328 0050 02D0     		beq	.L123
 2329              	.L124:
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2330              		.loc 1 1624 15
 2331 0052 0223     		movs	r3, #2
 2332 0054 FB75     		strb	r3, [r7, #23]
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2333              		.loc 1 1625 5
 2334 0056 54E0     		b	.L125
 2335              	.L123:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2336              		.loc 1 1628 6
 2337 0058 BB68     		ldr	r3, [r7, #8]
 2338 005a 002B     		cmp	r3, #0
 2339 005c 05D0     		beq	.L126
 2340              		.loc 1 1628 25 discriminator 1
 2341 005e 7B68     		ldr	r3, [r7, #4]
 2342 0060 002B     		cmp	r3, #0
 2343 0062 02D0     		beq	.L126
 2344              		.loc 1 1628 46 discriminator 2
 2345 0064 7B88     		ldrh	r3, [r7, #2]
 2346 0066 002B     		cmp	r3, #0
 2347 0068 02D1     		bne	.L127
 2348              	.L126:
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2349              		.loc 1 1630 15
 2350 006a 0123     		movs	r3, #1
 2351 006c FB75     		strb	r3, [r7, #23]
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2352              		.loc 1 1631 5
 2353 006e 48E0     		b	.L125
 2354              	.L127:
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 2355              		.loc 1 1635 11
 2356 0070 FB68     		ldr	r3, [r7, #12]
 2357 0072 93F85130 		ldrb	r3, [r3, #81]
 2358 0076 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 71


 2359              		.loc 1 1635 6
 2360 0078 042B     		cmp	r3, #4
 2361 007a 03D0     		beq	.L128
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2362              		.loc 1 1637 17
 2363 007c FB68     		ldr	r3, [r7, #12]
 2364 007e 0522     		movs	r2, #5
 2365 0080 83F85120 		strb	r2, [r3, #81]
 2366              	.L128:
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2367              		.loc 1 1641 21
 2368 0084 FB68     		ldr	r3, [r7, #12]
 2369 0086 0022     		movs	r2, #0
 2370 0088 5A65     		str	r2, [r3, #84]
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2371              		.loc 1 1642 21
 2372 008a FB68     		ldr	r3, [r7, #12]
 2373 008c BA68     		ldr	r2, [r7, #8]
 2374 008e 1A63     		str	r2, [r3, #48]
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2375              		.loc 1 1643 21
 2376 0090 FB68     		ldr	r3, [r7, #12]
 2377 0092 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2378 0094 9A86     		strh	r2, [r3, #52]	@ movhi
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2379              		.loc 1 1644 21
 2380 0096 FB68     		ldr	r3, [r7, #12]
 2381 0098 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2382 009a DA86     		strh	r2, [r3, #54]	@ movhi
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2383              		.loc 1 1645 21
 2384 009c FB68     		ldr	r3, [r7, #12]
 2385 009e 7A68     		ldr	r2, [r7, #4]
 2386 00a0 9A63     		str	r2, [r3, #56]
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2387              		.loc 1 1646 21
 2388 00a2 FB68     		ldr	r3, [r7, #12]
 2389 00a4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2390 00a6 9A87     		strh	r2, [r3, #60]	@ movhi
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2391              		.loc 1 1647 21
 2392 00a8 FB68     		ldr	r3, [r7, #12]
 2393 00aa 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2394 00ac DA87     		strh	r2, [r3, #62]	@ movhi
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2395              		.loc 1 1650 17
 2396 00ae FB68     		ldr	r3, [r7, #12]
 2397 00b0 DB68     		ldr	r3, [r3, #12]
 2398              		.loc 1 1650 6
 2399 00b2 002B     		cmp	r3, #0
 2400 00b4 06D0     		beq	.L129
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 72


1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
 2401              		.loc 1 1652 21
 2402 00b6 FB68     		ldr	r3, [r7, #12]
 2403 00b8 174A     		ldr	r2, .L132
 2404 00ba 1A64     		str	r2, [r3, #64]
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2405              		.loc 1 1653 21
 2406 00bc FB68     		ldr	r3, [r7, #12]
 2407 00be 174A     		ldr	r2, .L132+4
 2408 00c0 5A64     		str	r2, [r3, #68]
 2409 00c2 05E0     		b	.L130
 2410              	.L129:
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
 2411              		.loc 1 1657 21
 2412 00c4 FB68     		ldr	r3, [r7, #12]
 2413 00c6 164A     		ldr	r2, .L132+8
 2414 00c8 1A64     		str	r2, [r3, #64]
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2415              		.loc 1 1658 21
 2416 00ca FB68     		ldr	r3, [r7, #12]
 2417 00cc 154A     		ldr	r2, .L132+12
 2418 00ce 5A64     		str	r2, [r3, #68]
 2419              	.L130:
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2420              		.loc 1 1670 3
 2421 00d0 FB68     		ldr	r3, [r7, #12]
 2422 00d2 1B68     		ldr	r3, [r3]
 2423 00d4 5A68     		ldr	r2, [r3, #4]
 2424 00d6 FB68     		ldr	r3, [r7, #12]
 2425 00d8 1B68     		ldr	r3, [r3]
 2426 00da 42F0E002 		orr	r2, r2, #224
 2427 00de 5A60     		str	r2, [r3, #4]
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2428              		.loc 1 1673 12
 2429 00e0 FB68     		ldr	r3, [r7, #12]
 2430 00e2 1B68     		ldr	r3, [r3]
 2431              		.loc 1 1673 22
 2432 00e4 1B68     		ldr	r3, [r3]
 2433              		.loc 1 1673 28
 2434 00e6 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 73


 2435              		.loc 1 1673 6
 2436 00ea 402B     		cmp	r3, #64
 2437 00ec 08D0     		beq	.L131
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2438              		.loc 1 1676 5
 2439 00ee FB68     		ldr	r3, [r7, #12]
 2440 00f0 1B68     		ldr	r3, [r3]
 2441 00f2 1A68     		ldr	r2, [r3]
 2442 00f4 FB68     		ldr	r3, [r7, #12]
 2443 00f6 1B68     		ldr	r3, [r3]
 2444 00f8 42F04002 		orr	r2, r2, #64
 2445 00fc 1A60     		str	r2, [r3]
 2446 00fe 00E0     		b	.L125
 2447              	.L131:
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
 2448              		.loc 1 1679 1
 2449 0100 00BF     		nop
 2450              	.L125:
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2451              		.loc 1 1681 3
 2452 0102 FB68     		ldr	r3, [r7, #12]
 2453 0104 0022     		movs	r2, #0
 2454 0106 83F85020 		strb	r2, [r3, #80]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2455              		.loc 1 1682 10
 2456 010a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2457              	.L122:
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2458              		.loc 1 1683 1
 2459 010c 1846     		mov	r0, r3
 2460 010e 1C37     		adds	r7, r7, #28
 2461              	.LCFI51:
 2462              		.cfi_def_cfa_offset 4
 2463 0110 BD46     		mov	sp, r7
 2464              	.LCFI52:
 2465              		.cfi_def_cfa_register 13
 2466              		@ sp needed
 2467 0112 80BC     		pop	{r7}
 2468              	.LCFI53:
 2469              		.cfi_restore 7
 2470              		.cfi_def_cfa_offset 0
 2471 0114 7047     		bx	lr
 2472              	.L133:
 2473 0116 00BF     		.align	2
 2474              	.L132:
 2475 0118 00000000 		.word	SPI_2linesRxISR_16BIT
 2476 011c 00000000 		.word	SPI_2linesTxISR_16BIT
 2477 0120 00000000 		.word	SPI_2linesRxISR_8BIT
 2478 0124 00000000 		.word	SPI_2linesTxISR_8BIT
 2479              		.cfi_endproc
 2480              	.LFE74:
 2482              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 74


 2483              		.align	1
 2484              		.global	HAL_SPI_Transmit_DMA
 2485              		.syntax unified
 2486              		.thumb
 2487              		.thumb_func
 2489              	HAL_SPI_Transmit_DMA:
 2490              	.LFB75:
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2491              		.loc 1 1694 1
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 24
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              	.LCFI54:
 2497              		.cfi_def_cfa_offset 8
 2498              		.cfi_offset 7, -8
 2499              		.cfi_offset 14, -4
 2500 0002 86B0     		sub	sp, sp, #24
 2501              	.LCFI55:
 2502              		.cfi_def_cfa_offset 32
 2503 0004 00AF     		add	r7, sp, #0
 2504              	.LCFI56:
 2505              		.cfi_def_cfa_register 7
 2506 0006 F860     		str	r0, [r7, #12]
 2507 0008 B960     		str	r1, [r7, #8]
 2508 000a 1346     		mov	r3, r2
 2509 000c FB80     		strh	r3, [r7, #6]	@ movhi
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2510              		.loc 1 1695 21
 2511 000e 0023     		movs	r3, #0
 2512 0010 FB75     		strb	r3, [r7, #23]
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check tx dma handle */
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2513              		.loc 1 1704 3
 2514 0012 FB68     		ldr	r3, [r7, #12]
 2515 0014 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2516 0018 012B     		cmp	r3, #1
 2517 001a 01D1     		bne	.L135
 2518              		.loc 1 1704 3 is_stmt 0 discriminator 1
 2519 001c 0223     		movs	r3, #2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 75


 2520 001e 97E0     		b	.L136
 2521              	.L135:
 2522              		.loc 1 1704 3 discriminator 2
 2523 0020 FB68     		ldr	r3, [r7, #12]
 2524 0022 0122     		movs	r2, #1
 2525 0024 83F85020 		strb	r2, [r3, #80]
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2526              		.loc 1 1706 11 is_stmt 1 discriminator 2
 2527 0028 FB68     		ldr	r3, [r7, #12]
 2528 002a 93F85130 		ldrb	r3, [r3, #81]
 2529 002e DBB2     		uxtb	r3, r3
 2530              		.loc 1 1706 6 discriminator 2
 2531 0030 012B     		cmp	r3, #1
 2532 0032 02D0     		beq	.L137
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2533              		.loc 1 1708 15
 2534 0034 0223     		movs	r3, #2
 2535 0036 FB75     		strb	r3, [r7, #23]
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2536              		.loc 1 1709 5
 2537 0038 85E0     		b	.L138
 2538              	.L137:
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2539              		.loc 1 1712 6
 2540 003a BB68     		ldr	r3, [r7, #8]
 2541 003c 002B     		cmp	r3, #0
 2542 003e 02D0     		beq	.L139
 2543              		.loc 1 1712 23 discriminator 1
 2544 0040 FB88     		ldrh	r3, [r7, #6]
 2545 0042 002B     		cmp	r3, #0
 2546 0044 02D1     		bne	.L140
 2547              	.L139:
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2548              		.loc 1 1714 15
 2549 0046 0123     		movs	r3, #1
 2550 0048 FB75     		strb	r3, [r7, #23]
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2551              		.loc 1 1715 5
 2552 004a 7CE0     		b	.L138
 2553              	.L140:
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2554              		.loc 1 1719 21
 2555 004c FB68     		ldr	r3, [r7, #12]
 2556 004e 0322     		movs	r2, #3
 2557 0050 83F85120 		strb	r2, [r3, #81]
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2558              		.loc 1 1720 21
 2559 0054 FB68     		ldr	r3, [r7, #12]
 2560 0056 0022     		movs	r2, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 76


 2561 0058 5A65     		str	r2, [r3, #84]
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2562              		.loc 1 1721 21
 2563 005a FB68     		ldr	r3, [r7, #12]
 2564 005c BA68     		ldr	r2, [r7, #8]
 2565 005e 1A63     		str	r2, [r3, #48]
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2566              		.loc 1 1722 21
 2567 0060 FB68     		ldr	r3, [r7, #12]
 2568 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2569 0064 9A86     		strh	r2, [r3, #52]	@ movhi
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2570              		.loc 1 1723 21
 2571 0066 FB68     		ldr	r3, [r7, #12]
 2572 0068 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2573 006a DA86     		strh	r2, [r3, #54]	@ movhi
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2574              		.loc 1 1726 21
 2575 006c FB68     		ldr	r3, [r7, #12]
 2576 006e 0022     		movs	r2, #0
 2577 0070 9A63     		str	r2, [r3, #56]
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2578              		.loc 1 1727 21
 2579 0072 FB68     		ldr	r3, [r7, #12]
 2580 0074 0022     		movs	r2, #0
 2581 0076 5A64     		str	r2, [r3, #68]
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2582              		.loc 1 1728 21
 2583 0078 FB68     		ldr	r3, [r7, #12]
 2584 007a 0022     		movs	r2, #0
 2585 007c 1A64     		str	r2, [r3, #64]
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2586              		.loc 1 1729 21
 2587 007e FB68     		ldr	r3, [r7, #12]
 2588 0080 0022     		movs	r2, #0
 2589 0082 9A87     		strh	r2, [r3, #60]	@ movhi
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2590              		.loc 1 1730 21
 2591 0084 FB68     		ldr	r3, [r7, #12]
 2592 0086 0022     		movs	r2, #0
 2593 0088 DA87     		strh	r2, [r3, #62]	@ movhi
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2594              		.loc 1 1733 17
 2595 008a FB68     		ldr	r3, [r7, #12]
 2596 008c 9B68     		ldr	r3, [r3, #8]
 2597              		.loc 1 1733 6
 2598 008e B3F5004F 		cmp	r3, #32768
 2599 0092 0FD1     		bne	.L141
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2600              		.loc 1 1736 5
 2601 0094 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 77


 2602 0096 1B68     		ldr	r3, [r3]
 2603 0098 1A68     		ldr	r2, [r3]
 2604 009a FB68     		ldr	r3, [r7, #12]
 2605 009c 1B68     		ldr	r3, [r3]
 2606 009e 22F04002 		bic	r2, r2, #64
 2607 00a2 1A60     		str	r2, [r3]
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2608              		.loc 1 1737 5
 2609 00a4 FB68     		ldr	r3, [r7, #12]
 2610 00a6 1B68     		ldr	r3, [r3]
 2611 00a8 1A68     		ldr	r2, [r3]
 2612 00aa FB68     		ldr	r3, [r7, #12]
 2613 00ac 1B68     		ldr	r3, [r3]
 2614 00ae 42F48042 		orr	r2, r2, #16384
 2615 00b2 1A60     		str	r2, [r3]
 2616              	.L141:
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2617              		.loc 1 1749 7
 2618 00b4 FB68     		ldr	r3, [r7, #12]
 2619 00b6 9B6C     		ldr	r3, [r3, #72]
 2620              		.loc 1 1749 38
 2621 00b8 274A     		ldr	r2, .L144
 2622 00ba DA62     		str	r2, [r3, #44]
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2623              		.loc 1 1752 7
 2624 00bc FB68     		ldr	r3, [r7, #12]
 2625 00be 9B6C     		ldr	r3, [r3, #72]
 2626              		.loc 1 1752 34
 2627 00c0 264A     		ldr	r2, .L144+4
 2628 00c2 9A62     		str	r2, [r3, #40]
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2629              		.loc 1 1755 7
 2630 00c4 FB68     		ldr	r3, [r7, #12]
 2631 00c6 9B6C     		ldr	r3, [r3, #72]
 2632              		.loc 1 1755 35
 2633 00c8 254A     		ldr	r2, .L144+8
 2634 00ca 1A63     		str	r2, [r3, #48]
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 2635              		.loc 1 1758 7
 2636 00cc FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 78


 2637 00ce 9B6C     		ldr	r3, [r3, #72]
 2638              		.loc 1 1758 35
 2639 00d0 0022     		movs	r2, #0
 2640 00d2 5A63     		str	r2, [r3, #52]
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 2641              		.loc 1 1761 17
 2642 00d4 FB68     		ldr	r3, [r7, #12]
 2643 00d6 986C     		ldr	r0, [r3, #72]
 2644              		.loc 1 1761 62
 2645 00d8 FB68     		ldr	r3, [r7, #12]
 2646 00da 1B6B     		ldr	r3, [r3, #48]
 2647              		.loc 1 1761 17
 2648 00dc 1946     		mov	r1, r3
 2649              		.loc 1 1761 91
 2650 00de FB68     		ldr	r3, [r7, #12]
 2651 00e0 1B68     		ldr	r3, [r3]
 2652              		.loc 1 1761 86
 2653 00e2 0C33     		adds	r3, r3, #12
 2654              		.loc 1 1761 17
 2655 00e4 1A46     		mov	r2, r3
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2656              		.loc 1 1762 38
 2657 00e6 FB68     		ldr	r3, [r7, #12]
 2658 00e8 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 2659 00ea 9BB2     		uxth	r3, r3
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2660              		.loc 1 1761 17
 2661 00ec FFF7FEFF 		bl	HAL_DMA_Start_IT
 2662 00f0 0346     		mov	r3, r0
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2663              		.loc 1 1761 6
 2664 00f2 002B     		cmp	r3, #0
 2665 00f4 08D0     		beq	.L142
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 2666              		.loc 1 1765 5
 2667 00f6 FB68     		ldr	r3, [r7, #12]
 2668 00f8 5B6D     		ldr	r3, [r3, #84]
 2669 00fa 43F01002 		orr	r2, r3, #16
 2670 00fe FB68     		ldr	r3, [r7, #12]
 2671 0100 5A65     		str	r2, [r3, #84]
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2672              		.loc 1 1766 15
 2673 0102 0123     		movs	r3, #1
 2674 0104 FB75     		strb	r3, [r7, #23]
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2675              		.loc 1 1768 5
 2676 0106 1EE0     		b	.L138
 2677              	.L142:
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 79


 2678              		.loc 1 1772 12
 2679 0108 FB68     		ldr	r3, [r7, #12]
 2680 010a 1B68     		ldr	r3, [r3]
 2681              		.loc 1 1772 22
 2682 010c 1B68     		ldr	r3, [r3]
 2683              		.loc 1 1772 28
 2684 010e 03F04003 		and	r3, r3, #64
 2685              		.loc 1 1772 6
 2686 0112 402B     		cmp	r3, #64
 2687 0114 07D0     		beq	.L143
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2688              		.loc 1 1775 5
 2689 0116 FB68     		ldr	r3, [r7, #12]
 2690 0118 1B68     		ldr	r3, [r3]
 2691 011a 1A68     		ldr	r2, [r3]
 2692 011c FB68     		ldr	r3, [r7, #12]
 2693 011e 1B68     		ldr	r3, [r3]
 2694 0120 42F04002 		orr	r2, r2, #64
 2695 0124 1A60     		str	r2, [r3]
 2696              	.L143:
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2697              		.loc 1 1779 3
 2698 0126 FB68     		ldr	r3, [r7, #12]
 2699 0128 1B68     		ldr	r3, [r3]
 2700 012a 5A68     		ldr	r2, [r3, #4]
 2701 012c FB68     		ldr	r3, [r7, #12]
 2702 012e 1B68     		ldr	r3, [r3]
 2703 0130 42F02002 		orr	r2, r2, #32
 2704 0134 5A60     		str	r2, [r3, #4]
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2705              		.loc 1 1782 3
 2706 0136 FB68     		ldr	r3, [r7, #12]
 2707 0138 1B68     		ldr	r3, [r3]
 2708 013a 5A68     		ldr	r2, [r3, #4]
 2709 013c FB68     		ldr	r3, [r7, #12]
 2710 013e 1B68     		ldr	r3, [r3]
 2711 0140 42F00202 		orr	r2, r2, #2
 2712 0144 5A60     		str	r2, [r3, #4]
 2713              	.L138:
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2714              		.loc 1 1786 3
 2715 0146 FB68     		ldr	r3, [r7, #12]
 2716 0148 0022     		movs	r2, #0
 2717 014a 83F85020 		strb	r2, [r3, #80]
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2718              		.loc 1 1787 10
 2719 014e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 80


 2720              	.L136:
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2721              		.loc 1 1788 1
 2722 0150 1846     		mov	r0, r3
 2723 0152 1837     		adds	r7, r7, #24
 2724              	.LCFI57:
 2725              		.cfi_def_cfa_offset 8
 2726 0154 BD46     		mov	sp, r7
 2727              	.LCFI58:
 2728              		.cfi_def_cfa_register 13
 2729              		@ sp needed
 2730 0156 80BD     		pop	{r7, pc}
 2731              	.L145:
 2732              		.align	2
 2733              	.L144:
 2734 0158 00000000 		.word	SPI_DMAHalfTransmitCplt
 2735 015c 00000000 		.word	SPI_DMATransmitCplt
 2736 0160 00000000 		.word	SPI_DMAError
 2737              		.cfi_endproc
 2738              	.LFE75:
 2740              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2741              		.align	1
 2742              		.global	HAL_SPI_Receive_DMA
 2743              		.syntax unified
 2744              		.thumb
 2745              		.thumb_func
 2747              	HAL_SPI_Receive_DMA:
 2748              	.LFB76:
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2749              		.loc 1 1801 1
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 24
 2752              		@ frame_needed = 1, uses_anonymous_args = 0
 2753 0000 80B5     		push	{r7, lr}
 2754              	.LCFI59:
 2755              		.cfi_def_cfa_offset 8
 2756              		.cfi_offset 7, -8
 2757              		.cfi_offset 14, -4
 2758 0002 86B0     		sub	sp, sp, #24
 2759              	.LCFI60:
 2760              		.cfi_def_cfa_offset 32
 2761 0004 00AF     		add	r7, sp, #0
 2762              	.LCFI61:
 2763              		.cfi_def_cfa_register 7
 2764 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 81


 2765 0008 B960     		str	r1, [r7, #8]
 2766 000a 1346     		mov	r3, r2
 2767 000c FB80     		strh	r3, [r7, #6]	@ movhi
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2768              		.loc 1 1802 21
 2769 000e 0023     		movs	r3, #0
 2770 0010 FB75     		strb	r3, [r7, #23]
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx dma handle */
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2771              		.loc 1 1807 11
 2772 0012 FB68     		ldr	r3, [r7, #12]
 2773 0014 93F85130 		ldrb	r3, [r3, #81]
 2774 0018 DBB2     		uxtb	r3, r3
 2775              		.loc 1 1807 6
 2776 001a 012B     		cmp	r3, #1
 2777 001c 02D0     		beq	.L147
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 2778              		.loc 1 1809 15
 2779 001e 0223     		movs	r3, #2
 2780 0020 FB75     		strb	r3, [r7, #23]
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2781              		.loc 1 1810 5
 2782 0022 A2E0     		b	.L148
 2783              	.L147:
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2784              		.loc 1 1813 18
 2785 0024 FB68     		ldr	r3, [r7, #12]
 2786 0026 9B68     		ldr	r3, [r3, #8]
 2787              		.loc 1 1813 6
 2788 0028 002B     		cmp	r3, #0
 2789 002a 10D1     		bne	.L149
 2790              		.loc 1 1813 68 discriminator 1
 2791 002c FB68     		ldr	r3, [r7, #12]
 2792 002e 5B68     		ldr	r3, [r3, #4]
 2793              		.loc 1 1813 54 discriminator 1
 2794 0030 B3F5827F 		cmp	r3, #260
 2795 0034 0BD1     		bne	.L149
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2796              		.loc 1 1815 17
 2797 0036 FB68     		ldr	r3, [r7, #12]
 2798 0038 0422     		movs	r2, #4
 2799 003a 83F85120 		strb	r2, [r3, #81]
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check tx dma handle */
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2800              		.loc 1 1821 12
 2801 003e FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 82


 2802 0040 BA68     		ldr	r2, [r7, #8]
 2803 0042 B968     		ldr	r1, [r7, #8]
 2804 0044 F868     		ldr	r0, [r7, #12]
 2805 0046 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2806 004a 0346     		mov	r3, r0
 2807 004c 92E0     		b	.L150
 2808              	.L149:
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2809              		.loc 1 1825 3
 2810 004e FB68     		ldr	r3, [r7, #12]
 2811 0050 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2812 0054 012B     		cmp	r3, #1
 2813 0056 01D1     		bne	.L151
 2814              		.loc 1 1825 3 is_stmt 0 discriminator 1
 2815 0058 0223     		movs	r3, #2
 2816 005a 8BE0     		b	.L150
 2817              	.L151:
 2818              		.loc 1 1825 3 discriminator 2
 2819 005c FB68     		ldr	r3, [r7, #12]
 2820 005e 0122     		movs	r2, #1
 2821 0060 83F85020 		strb	r2, [r3, #80]
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2822              		.loc 1 1827 6 is_stmt 1 discriminator 2
 2823 0064 BB68     		ldr	r3, [r7, #8]
 2824 0066 002B     		cmp	r3, #0
 2825 0068 02D0     		beq	.L152
 2826              		.loc 1 1827 23 discriminator 1
 2827 006a FB88     		ldrh	r3, [r7, #6]
 2828 006c 002B     		cmp	r3, #0
 2829 006e 02D1     		bne	.L153
 2830              	.L152:
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2831              		.loc 1 1829 15
 2832 0070 0123     		movs	r3, #1
 2833 0072 FB75     		strb	r3, [r7, #23]
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2834              		.loc 1 1830 5
 2835 0074 79E0     		b	.L148
 2836              	.L153:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2837              		.loc 1 1834 21
 2838 0076 FB68     		ldr	r3, [r7, #12]
 2839 0078 0422     		movs	r2, #4
 2840 007a 83F85120 		strb	r2, [r3, #81]
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2841              		.loc 1 1835 21
 2842 007e FB68     		ldr	r3, [r7, #12]
 2843 0080 0022     		movs	r2, #0
 2844 0082 5A65     		str	r2, [r3, #84]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 83


1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2845              		.loc 1 1836 21
 2846 0084 FB68     		ldr	r3, [r7, #12]
 2847 0086 BA68     		ldr	r2, [r7, #8]
 2848 0088 9A63     		str	r2, [r3, #56]
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2849              		.loc 1 1837 21
 2850 008a FB68     		ldr	r3, [r7, #12]
 2851 008c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2852 008e 9A87     		strh	r2, [r3, #60]	@ movhi
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2853              		.loc 1 1838 21
 2854 0090 FB68     		ldr	r3, [r7, #12]
 2855 0092 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2856 0094 DA87     		strh	r2, [r3, #62]	@ movhi
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2857              		.loc 1 1841 21
 2858 0096 FB68     		ldr	r3, [r7, #12]
 2859 0098 0022     		movs	r2, #0
 2860 009a 1A64     		str	r2, [r3, #64]
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2861              		.loc 1 1842 21
 2862 009c FB68     		ldr	r3, [r7, #12]
 2863 009e 0022     		movs	r2, #0
 2864 00a0 5A64     		str	r2, [r3, #68]
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2865              		.loc 1 1843 21
 2866 00a2 FB68     		ldr	r3, [r7, #12]
 2867 00a4 0022     		movs	r2, #0
 2868 00a6 9A86     		strh	r2, [r3, #52]	@ movhi
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2869              		.loc 1 1844 21
 2870 00a8 FB68     		ldr	r3, [r7, #12]
 2871 00aa 0022     		movs	r2, #0
 2872 00ac DA86     		strh	r2, [r3, #54]	@ movhi
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2873              		.loc 1 1847 17
 2874 00ae FB68     		ldr	r3, [r7, #12]
 2875 00b0 9B68     		ldr	r3, [r3, #8]
 2876              		.loc 1 1847 6
 2877 00b2 B3F5004F 		cmp	r3, #32768
 2878 00b6 0FD1     		bne	.L154
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2879              		.loc 1 1850 5
 2880 00b8 FB68     		ldr	r3, [r7, #12]
 2881 00ba 1B68     		ldr	r3, [r3]
 2882 00bc 1A68     		ldr	r2, [r3]
 2883 00be FB68     		ldr	r3, [r7, #12]
 2884 00c0 1B68     		ldr	r3, [r3]
 2885 00c2 22F04002 		bic	r2, r2, #64
 2886 00c6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 84


1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2887              		.loc 1 1851 5
 2888 00c8 FB68     		ldr	r3, [r7, #12]
 2889 00ca 1B68     		ldr	r3, [r3]
 2890 00cc 1A68     		ldr	r2, [r3]
 2891 00ce FB68     		ldr	r3, [r7, #12]
 2892 00d0 1B68     		ldr	r3, [r3]
 2893 00d2 22F48042 		bic	r2, r2, #16384
 2894 00d6 1A60     		str	r2, [r3]
 2895              	.L154:
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2896              		.loc 1 1863 7
 2897 00d8 FB68     		ldr	r3, [r7, #12]
 2898 00da DB6C     		ldr	r3, [r3, #76]
 2899              		.loc 1 1863 38
 2900 00dc 274A     		ldr	r2, .L157
 2901 00de DA62     		str	r2, [r3, #44]
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2902              		.loc 1 1866 7
 2903 00e0 FB68     		ldr	r3, [r7, #12]
 2904 00e2 DB6C     		ldr	r3, [r3, #76]
 2905              		.loc 1 1866 34
 2906 00e4 264A     		ldr	r2, .L157+4
 2907 00e6 9A62     		str	r2, [r3, #40]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2908              		.loc 1 1869 7
 2909 00e8 FB68     		ldr	r3, [r7, #12]
 2910 00ea DB6C     		ldr	r3, [r3, #76]
 2911              		.loc 1 1869 35
 2912 00ec 254A     		ldr	r2, .L157+8
 2913 00ee 1A63     		str	r2, [r3, #48]
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 2914              		.loc 1 1872 7
 2915 00f0 FB68     		ldr	r3, [r7, #12]
 2916 00f2 DB6C     		ldr	r3, [r3, #76]
 2917              		.loc 1 1872 35
 2918 00f4 0022     		movs	r2, #0
 2919 00f6 5A63     		str	r2, [r3, #52]
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 85


1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 2920              		.loc 1 1875 17
 2921 00f8 FB68     		ldr	r3, [r7, #12]
 2922 00fa D86C     		ldr	r0, [r3, #76]
 2923              		.loc 1 1875 63
 2924 00fc FB68     		ldr	r3, [r7, #12]
 2925 00fe 1B68     		ldr	r3, [r3]
 2926              		.loc 1 1875 58
 2927 0100 0C33     		adds	r3, r3, #12
 2928              		.loc 1 1875 17
 2929 0102 1946     		mov	r1, r3
 2930              		.loc 1 1875 93
 2931 0104 FB68     		ldr	r3, [r7, #12]
 2932 0106 9B6B     		ldr	r3, [r3, #56]
 2933              		.loc 1 1875 17
 2934 0108 1A46     		mov	r2, r3
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2935              		.loc 1 1876 38
 2936 010a FB68     		ldr	r3, [r7, #12]
 2937 010c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2938 010e 9BB2     		uxth	r3, r3
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2939              		.loc 1 1875 17
 2940 0110 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2941 0114 0346     		mov	r3, r0
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2942              		.loc 1 1875 6
 2943 0116 002B     		cmp	r3, #0
 2944 0118 08D0     		beq	.L155
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 2945              		.loc 1 1879 5
 2946 011a FB68     		ldr	r3, [r7, #12]
 2947 011c 5B6D     		ldr	r3, [r3, #84]
 2948 011e 43F01002 		orr	r2, r3, #16
 2949 0122 FB68     		ldr	r3, [r7, #12]
 2950 0124 5A65     		str	r2, [r3, #84]
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2951              		.loc 1 1880 15
 2952 0126 0123     		movs	r3, #1
 2953 0128 FB75     		strb	r3, [r7, #23]
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2954              		.loc 1 1882 5
 2955 012a 1EE0     		b	.L148
 2956              	.L155:
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2957              		.loc 1 1886 12
 2958 012c FB68     		ldr	r3, [r7, #12]
 2959 012e 1B68     		ldr	r3, [r3]
 2960              		.loc 1 1886 22
 2961 0130 1B68     		ldr	r3, [r3]
 2962              		.loc 1 1886 28
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 86


 2963 0132 03F04003 		and	r3, r3, #64
 2964              		.loc 1 1886 6
 2965 0136 402B     		cmp	r3, #64
 2966 0138 07D0     		beq	.L156
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2967              		.loc 1 1889 5
 2968 013a FB68     		ldr	r3, [r7, #12]
 2969 013c 1B68     		ldr	r3, [r3]
 2970 013e 1A68     		ldr	r2, [r3]
 2971 0140 FB68     		ldr	r3, [r7, #12]
 2972 0142 1B68     		ldr	r3, [r3]
 2973 0144 42F04002 		orr	r2, r2, #64
 2974 0148 1A60     		str	r2, [r3]
 2975              	.L156:
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2976              		.loc 1 1893 3
 2977 014a FB68     		ldr	r3, [r7, #12]
 2978 014c 1B68     		ldr	r3, [r3]
 2979 014e 5A68     		ldr	r2, [r3, #4]
 2980 0150 FB68     		ldr	r3, [r7, #12]
 2981 0152 1B68     		ldr	r3, [r3]
 2982 0154 42F02002 		orr	r2, r2, #32
 2983 0158 5A60     		str	r2, [r3, #4]
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 2984              		.loc 1 1896 3
 2985 015a FB68     		ldr	r3, [r7, #12]
 2986 015c 1B68     		ldr	r3, [r3]
 2987 015e 5A68     		ldr	r2, [r3, #4]
 2988 0160 FB68     		ldr	r3, [r7, #12]
 2989 0162 1B68     		ldr	r3, [r3]
 2990 0164 42F00102 		orr	r2, r2, #1
 2991 0168 5A60     		str	r2, [r3, #4]
 2992              	.L148:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2993              		.loc 1 1900 3
 2994 016a FB68     		ldr	r3, [r7, #12]
 2995 016c 0022     		movs	r2, #0
 2996 016e 83F85020 		strb	r2, [r3, #80]
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2997              		.loc 1 1901 10
 2998 0172 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2999              	.L150:
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3000              		.loc 1 1902 1
 3001 0174 1846     		mov	r0, r3
 3002 0176 1837     		adds	r7, r7, #24
 3003              	.LCFI62:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 87


 3004              		.cfi_def_cfa_offset 8
 3005 0178 BD46     		mov	sp, r7
 3006              	.LCFI63:
 3007              		.cfi_def_cfa_register 13
 3008              		@ sp needed
 3009 017a 80BD     		pop	{r7, pc}
 3010              	.L158:
 3011              		.align	2
 3012              	.L157:
 3013 017c 00000000 		.word	SPI_DMAHalfReceiveCplt
 3014 0180 00000000 		.word	SPI_DMAReceiveCplt
 3015 0184 00000000 		.word	SPI_DMAError
 3016              		.cfi_endproc
 3017              	.LFE76:
 3019              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 3020              		.align	1
 3021              		.global	HAL_SPI_TransmitReceive_DMA
 3022              		.syntax unified
 3023              		.thumb
 3024              		.thumb_func
 3026              	HAL_SPI_TransmitReceive_DMA:
 3027              	.LFB77:
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                               uint16_t Size)
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 3028              		.loc 1 1916 1
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 24
 3031              		@ frame_needed = 1, uses_anonymous_args = 0
 3032 0000 80B5     		push	{r7, lr}
 3033              	.LCFI64:
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 7, -8
 3036              		.cfi_offset 14, -4
 3037 0002 86B0     		sub	sp, sp, #24
 3038              	.LCFI65:
 3039              		.cfi_def_cfa_offset 32
 3040 0004 00AF     		add	r7, sp, #0
 3041              	.LCFI66:
 3042              		.cfi_def_cfa_register 7
 3043 0006 F860     		str	r0, [r7, #12]
 3044 0008 B960     		str	r1, [r7, #8]
 3045 000a 7A60     		str	r2, [r7, #4]
 3046 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 88


1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3047              		.loc 1 1919 21
 3048 000e 0023     		movs	r3, #0
 3049 0010 FB75     		strb	r3, [r7, #23]
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3050              		.loc 1 1929 3
 3051 0012 FB68     		ldr	r3, [r7, #12]
 3052 0014 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3053 0018 012B     		cmp	r3, #1
 3054 001a 01D1     		bne	.L160
 3055              		.loc 1 1929 3 is_stmt 0 discriminator 1
 3056 001c 0223     		movs	r3, #2
 3057 001e DBE0     		b	.L161
 3058              	.L160:
 3059              		.loc 1 1929 3 discriminator 2
 3060 0020 FB68     		ldr	r3, [r7, #12]
 3061 0022 0122     		movs	r2, #1
 3062 0024 83F85020 		strb	r2, [r3, #80]
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 3063              		.loc 1 1932 23 is_stmt 1 discriminator 2
 3064 0028 FB68     		ldr	r3, [r7, #12]
 3065 002a 93F85130 		ldrb	r3, [r3, #81]
 3066 002e BB75     		strb	r3, [r7, #22]
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3067              		.loc 1 1933 23 discriminator 2
 3068 0030 FB68     		ldr	r3, [r7, #12]
 3069 0032 5B68     		ldr	r3, [r3, #4]
 3070 0034 3B61     		str	r3, [r7, #16]
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
 3071              		.loc 1 1935 6 discriminator 2
 3072 0036 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3073 0038 012B     		cmp	r3, #1
 3074 003a 0DD0     		beq	.L162
 3075              		.loc 1 1935 7 discriminator 1
 3076 003c 3B69     		ldr	r3, [r7, #16]
 3077 003e B3F5827F 		cmp	r3, #260
 3078 0042 06D1     		bne	.L163
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 3079              		.loc 1 1936 54
 3080 0044 FB68     		ldr	r3, [r7, #12]
 3081 0046 9B68     		ldr	r3, [r3, #8]
 3082              		.loc 1 1936 40
 3083 0048 002B     		cmp	r3, #0
 3084 004a 02D1     		bne	.L163
 3085              		.loc 1 1936 90 discriminator 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 89


 3086 004c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3087 004e 042B     		cmp	r3, #4
 3088 0050 02D0     		beq	.L162
 3089              	.L163:
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 3090              		.loc 1 1938 15
 3091 0052 0223     		movs	r3, #2
 3092 0054 FB75     		strb	r3, [r7, #23]
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 3093              		.loc 1 1939 5
 3094 0056 BAE0     		b	.L164
 3095              	.L162:
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 3096              		.loc 1 1942 6
 3097 0058 BB68     		ldr	r3, [r7, #8]
 3098 005a 002B     		cmp	r3, #0
 3099 005c 05D0     		beq	.L165
 3100              		.loc 1 1942 25 discriminator 1
 3101 005e 7B68     		ldr	r3, [r7, #4]
 3102 0060 002B     		cmp	r3, #0
 3103 0062 02D0     		beq	.L165
 3104              		.loc 1 1942 46 discriminator 2
 3105 0064 7B88     		ldrh	r3, [r7, #2]
 3106 0066 002B     		cmp	r3, #0
 3107 0068 02D1     		bne	.L166
 3108              	.L165:
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3109              		.loc 1 1944 15
 3110 006a 0123     		movs	r3, #1
 3111 006c FB75     		strb	r3, [r7, #23]
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 3112              		.loc 1 1945 5
 3113 006e AEE0     		b	.L164
 3114              	.L166:
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3115              		.loc 1 1949 11
 3116 0070 FB68     		ldr	r3, [r7, #12]
 3117 0072 93F85130 		ldrb	r3, [r3, #81]
 3118 0076 DBB2     		uxtb	r3, r3
 3119              		.loc 1 1949 6
 3120 0078 042B     		cmp	r3, #4
 3121 007a 03D0     		beq	.L167
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 3122              		.loc 1 1951 17
 3123 007c FB68     		ldr	r3, [r7, #12]
 3124 007e 0522     		movs	r2, #5
 3125 0080 83F85120 		strb	r2, [r3, #81]
 3126              	.L167:
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 90


1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3127              		.loc 1 1955 21
 3128 0084 FB68     		ldr	r3, [r7, #12]
 3129 0086 0022     		movs	r2, #0
 3130 0088 5A65     		str	r2, [r3, #84]
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 3131              		.loc 1 1956 21
 3132 008a FB68     		ldr	r3, [r7, #12]
 3133 008c BA68     		ldr	r2, [r7, #8]
 3134 008e 1A63     		str	r2, [r3, #48]
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3135              		.loc 1 1957 21
 3136 0090 FB68     		ldr	r3, [r7, #12]
 3137 0092 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3138 0094 9A86     		strh	r2, [r3, #52]	@ movhi
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3139              		.loc 1 1958 21
 3140 0096 FB68     		ldr	r3, [r7, #12]
 3141 0098 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3142 009a DA86     		strh	r2, [r3, #54]	@ movhi
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3143              		.loc 1 1959 21
 3144 009c FB68     		ldr	r3, [r7, #12]
 3145 009e 7A68     		ldr	r2, [r7, #4]
 3146 00a0 9A63     		str	r2, [r3, #56]
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3147              		.loc 1 1960 21
 3148 00a2 FB68     		ldr	r3, [r7, #12]
 3149 00a4 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3150 00a6 9A87     		strh	r2, [r3, #60]	@ movhi
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3151              		.loc 1 1961 21
 3152 00a8 FB68     		ldr	r3, [r7, #12]
 3153 00aa 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3154 00ac DA87     		strh	r2, [r3, #62]	@ movhi
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3155              		.loc 1 1964 21
 3156 00ae FB68     		ldr	r3, [r7, #12]
 3157 00b0 0022     		movs	r2, #0
 3158 00b2 1A64     		str	r2, [r3, #64]
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3159              		.loc 1 1965 21
 3160 00b4 FB68     		ldr	r3, [r7, #12]
 3161 00b6 0022     		movs	r2, #0
 3162 00b8 5A64     		str	r2, [r3, #68]
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 91


1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 3163              		.loc 1 1976 11
 3164 00ba FB68     		ldr	r3, [r7, #12]
 3165 00bc 93F85130 		ldrb	r3, [r3, #81]
 3166 00c0 DBB2     		uxtb	r3, r3
 3167              		.loc 1 1976 6
 3168 00c2 042B     		cmp	r3, #4
 3169 00c4 08D1     		bne	.L168
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3170              		.loc 1 1979 9
 3171 00c6 FB68     		ldr	r3, [r7, #12]
 3172 00c8 DB6C     		ldr	r3, [r3, #76]
 3173              		.loc 1 1979 40
 3174 00ca 454A     		ldr	r2, .L173
 3175 00cc DA62     		str	r2, [r3, #44]
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3176              		.loc 1 1980 9
 3177 00ce FB68     		ldr	r3, [r7, #12]
 3178 00d0 DB6C     		ldr	r3, [r3, #76]
 3179              		.loc 1 1980 40
 3180 00d2 444A     		ldr	r2, .L173+4
 3181 00d4 9A62     		str	r2, [r3, #40]
 3182 00d6 07E0     		b	.L169
 3183              	.L168:
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 3184              		.loc 1 1985 9
 3185 00d8 FB68     		ldr	r3, [r7, #12]
 3186 00da DB6C     		ldr	r3, [r3, #76]
 3187              		.loc 1 1985 40
 3188 00dc 424A     		ldr	r2, .L173+8
 3189 00de DA62     		str	r2, [r3, #44]
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3190              		.loc 1 1986 9
 3191 00e0 FB68     		ldr	r3, [r7, #12]
 3192 00e2 DB6C     		ldr	r3, [r3, #76]
 3193              		.loc 1 1986 40
 3194 00e4 414A     		ldr	r2, .L173+12
 3195 00e6 9A62     		str	r2, [r3, #40]
 3196              	.L169:
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 3197              		.loc 1 1990 7
 3198 00e8 FB68     		ldr	r3, [r7, #12]
 3199 00ea DB6C     		ldr	r3, [r3, #76]
 3200              		.loc 1 1990 35
 3201 00ec 404A     		ldr	r2, .L173+16
 3202 00ee 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 92


1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3203              		.loc 1 1993 7
 3204 00f0 FB68     		ldr	r3, [r7, #12]
 3205 00f2 DB6C     		ldr	r3, [r3, #76]
 3206              		.loc 1 1993 35
 3207 00f4 0022     		movs	r2, #0
 3208 00f6 5A63     		str	r2, [r3, #52]
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 3209              		.loc 1 1996 17
 3210 00f8 FB68     		ldr	r3, [r7, #12]
 3211 00fa D86C     		ldr	r0, [r3, #76]
 3212              		.loc 1 1996 63
 3213 00fc FB68     		ldr	r3, [r7, #12]
 3214 00fe 1B68     		ldr	r3, [r3]
 3215              		.loc 1 1996 58
 3216 0100 0C33     		adds	r3, r3, #12
 3217              		.loc 1 1996 17
 3218 0102 1946     		mov	r1, r3
 3219              		.loc 1 1996 93
 3220 0104 FB68     		ldr	r3, [r7, #12]
 3221 0106 9B6B     		ldr	r3, [r3, #56]
 3222              		.loc 1 1996 17
 3223 0108 1A46     		mov	r2, r3
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3224              		.loc 1 1997 38
 3225 010a FB68     		ldr	r3, [r7, #12]
 3226 010c DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3227 010e 9BB2     		uxth	r3, r3
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3228              		.loc 1 1996 17
 3229 0110 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3230 0114 0346     		mov	r3, r0
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3231              		.loc 1 1996 6
 3232 0116 002B     		cmp	r3, #0
 3233 0118 08D0     		beq	.L170
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3234              		.loc 1 2000 5
 3235 011a FB68     		ldr	r3, [r7, #12]
 3236 011c 5B6D     		ldr	r3, [r3, #84]
 3237 011e 43F01002 		orr	r2, r3, #16
 3238 0122 FB68     		ldr	r3, [r7, #12]
 3239 0124 5A65     		str	r2, [r3, #84]
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3240              		.loc 1 2001 15
 3241 0126 0123     		movs	r3, #1
 3242 0128 FB75     		strb	r3, [r7, #23]
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 3243              		.loc 1 2003 5
 3244 012a 50E0     		b	.L164
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 93


 3245              	.L170:
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3246              		.loc 1 2007 3
 3247 012c FB68     		ldr	r3, [r7, #12]
 3248 012e 1B68     		ldr	r3, [r3]
 3249 0130 5A68     		ldr	r2, [r3, #4]
 3250 0132 FB68     		ldr	r3, [r7, #12]
 3251 0134 1B68     		ldr	r3, [r3]
 3252 0136 42F00102 		orr	r2, r2, #1
 3253 013a 5A60     		str	r2, [r3, #4]
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 3254              		.loc 1 2011 7
 3255 013c FB68     		ldr	r3, [r7, #12]
 3256 013e 9B6C     		ldr	r3, [r3, #72]
 3257              		.loc 1 2011 38
 3258 0140 0022     		movs	r2, #0
 3259 0142 DA62     		str	r2, [r3, #44]
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3260              		.loc 1 2012 7
 3261 0144 FB68     		ldr	r3, [r7, #12]
 3262 0146 9B6C     		ldr	r3, [r3, #72]
 3263              		.loc 1 2012 38
 3264 0148 0022     		movs	r2, #0
 3265 014a 9A62     		str	r2, [r3, #40]
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3266              		.loc 1 2013 7
 3267 014c FB68     		ldr	r3, [r7, #12]
 3268 014e 9B6C     		ldr	r3, [r3, #72]
 3269              		.loc 1 2013 38
 3270 0150 0022     		movs	r2, #0
 3271 0152 1A63     		str	r2, [r3, #48]
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3272              		.loc 1 2014 7
 3273 0154 FB68     		ldr	r3, [r7, #12]
 3274 0156 9B6C     		ldr	r3, [r3, #72]
 3275              		.loc 1 2014 38
 3276 0158 0022     		movs	r2, #0
 3277 015a 5A63     		str	r2, [r3, #52]
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 3278              		.loc 1 2017 17
 3279 015c FB68     		ldr	r3, [r7, #12]
 3280 015e 986C     		ldr	r0, [r3, #72]
 3281              		.loc 1 2017 62
 3282 0160 FB68     		ldr	r3, [r7, #12]
 3283 0162 1B6B     		ldr	r3, [r3, #48]
 3284              		.loc 1 2017 17
 3285 0164 1946     		mov	r1, r3
 3286              		.loc 1 2017 91
 3287 0166 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 94


 3288 0168 1B68     		ldr	r3, [r3]
 3289              		.loc 1 2017 86
 3290 016a 0C33     		adds	r3, r3, #12
 3291              		.loc 1 2017 17
 3292 016c 1A46     		mov	r2, r3
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3293              		.loc 1 2018 38
 3294 016e FB68     		ldr	r3, [r7, #12]
 3295 0170 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 3296 0172 9BB2     		uxth	r3, r3
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3297              		.loc 1 2017 17
 3298 0174 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3299 0178 0346     		mov	r3, r0
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3300              		.loc 1 2017 6
 3301 017a 002B     		cmp	r3, #0
 3302 017c 08D0     		beq	.L171
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3303              		.loc 1 2021 5
 3304 017e FB68     		ldr	r3, [r7, #12]
 3305 0180 5B6D     		ldr	r3, [r3, #84]
 3306 0182 43F01002 		orr	r2, r3, #16
 3307 0186 FB68     		ldr	r3, [r7, #12]
 3308 0188 5A65     		str	r2, [r3, #84]
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3309              		.loc 1 2022 15
 3310 018a 0123     		movs	r3, #1
 3311 018c FB75     		strb	r3, [r7, #23]
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 3312              		.loc 1 2024 5
 3313 018e 1EE0     		b	.L164
 3314              	.L171:
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3315              		.loc 1 2028 12
 3316 0190 FB68     		ldr	r3, [r7, #12]
 3317 0192 1B68     		ldr	r3, [r3]
 3318              		.loc 1 2028 22
 3319 0194 1B68     		ldr	r3, [r3]
 3320              		.loc 1 2028 28
 3321 0196 03F04003 		and	r3, r3, #64
 3322              		.loc 1 2028 6
 3323 019a 402B     		cmp	r3, #64
 3324 019c 07D0     		beq	.L172
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3325              		.loc 1 2031 5
 3326 019e FB68     		ldr	r3, [r7, #12]
 3327 01a0 1B68     		ldr	r3, [r3]
 3328 01a2 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 95


 3329 01a4 FB68     		ldr	r3, [r7, #12]
 3330 01a6 1B68     		ldr	r3, [r3]
 3331 01a8 42F04002 		orr	r2, r2, #64
 3332 01ac 1A60     		str	r2, [r3]
 3333              	.L172:
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3334              		.loc 1 2034 3
 3335 01ae FB68     		ldr	r3, [r7, #12]
 3336 01b0 1B68     		ldr	r3, [r3]
 3337 01b2 5A68     		ldr	r2, [r3, #4]
 3338 01b4 FB68     		ldr	r3, [r7, #12]
 3339 01b6 1B68     		ldr	r3, [r3]
 3340 01b8 42F02002 		orr	r2, r2, #32
 3341 01bc 5A60     		str	r2, [r3, #4]
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3342              		.loc 1 2037 3
 3343 01be FB68     		ldr	r3, [r7, #12]
 3344 01c0 1B68     		ldr	r3, [r3]
 3345 01c2 5A68     		ldr	r2, [r3, #4]
 3346 01c4 FB68     		ldr	r3, [r7, #12]
 3347 01c6 1B68     		ldr	r3, [r3]
 3348 01c8 42F00202 		orr	r2, r2, #2
 3349 01cc 5A60     		str	r2, [r3, #4]
 3350              	.L164:
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3351              		.loc 1 2041 3
 3352 01ce FB68     		ldr	r3, [r7, #12]
 3353 01d0 0022     		movs	r2, #0
 3354 01d2 83F85020 		strb	r2, [r3, #80]
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 3355              		.loc 1 2042 10
 3356 01d6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3357              	.L161:
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3358              		.loc 1 2043 1
 3359 01d8 1846     		mov	r0, r3
 3360 01da 1837     		adds	r7, r7, #24
 3361              	.LCFI67:
 3362              		.cfi_def_cfa_offset 8
 3363 01dc BD46     		mov	sp, r7
 3364              	.LCFI68:
 3365              		.cfi_def_cfa_register 13
 3366              		@ sp needed
 3367 01de 80BD     		pop	{r7, pc}
 3368              	.L174:
 3369              		.align	2
 3370              	.L173:
 3371 01e0 00000000 		.word	SPI_DMAHalfReceiveCplt
 3372 01e4 00000000 		.word	SPI_DMAReceiveCplt
 3373 01e8 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 96


 3374 01ec 00000000 		.word	SPI_DMATransmitReceiveCplt
 3375 01f0 00000000 		.word	SPI_DMAError
 3376              		.cfi_endproc
 3377              	.LFE77:
 3379              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3380              		.align	1
 3381              		.global	HAL_SPI_Abort
 3382              		.syntax unified
 3383              		.thumb
 3384              		.thumb_func
 3386              	HAL_SPI_Abort:
 3387              	.LFB78:
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 3388              		.loc 1 2059 1
 3389              		.cfi_startproc
 3390              		@ args = 0, pretend = 0, frame = 24
 3391              		@ frame_needed = 1, uses_anonymous_args = 0
 3392 0000 80B5     		push	{r7, lr}
 3393              	.LCFI69:
 3394              		.cfi_def_cfa_offset 8
 3395              		.cfi_offset 7, -8
 3396              		.cfi_offset 14, -4
 3397 0002 86B0     		sub	sp, sp, #24
 3398              	.LCFI70:
 3399              		.cfi_def_cfa_offset 32
 3400 0004 00AF     		add	r7, sp, #0
 3401              	.LCFI71:
 3402              		.cfi_def_cfa_register 7
 3403 0006 7860     		str	r0, [r7, #4]
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
 3404              		.loc 1 2065 13
 3405 0008 0023     		movs	r3, #0
 3406 000a FB75     		strb	r3, [r7, #23]
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3407              		.loc 1 2066 61
 3408 000c 6A4B     		ldr	r3, .L193
 3409 000e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 97


 3410 0010 6A4A     		ldr	r2, .L193+4
 3411 0012 A2FB0323 		umull	r2, r3, r2, r3
 3412 0016 5B0A     		lsrs	r3, r3, #9
 3413              		.loc 1 2066 36
 3414 0018 6422     		movs	r2, #100
 3415 001a 02FB03F3 		mul	r3, r2, r3
 3416              		.loc 1 2066 14
 3417 001e FB60     		str	r3, [r7, #12]
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 3418              		.loc 1 2067 9
 3419 0020 FB68     		ldr	r3, [r7, #12]
 3420 0022 3B61     		str	r3, [r7, #16]
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3421              		.loc 1 2070 3
 3422 0024 7B68     		ldr	r3, [r7, #4]
 3423 0026 1B68     		ldr	r3, [r3]
 3424 0028 5A68     		ldr	r2, [r3, #4]
 3425 002a 7B68     		ldr	r3, [r7, #4]
 3426 002c 1B68     		ldr	r3, [r3]
 3427 002e 22F02002 		bic	r2, r2, #32
 3428 0032 5A60     		str	r2, [r3, #4]
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3429              		.loc 1 2073 7
 3430 0034 7B68     		ldr	r3, [r7, #4]
 3431 0036 1B68     		ldr	r3, [r3]
 3432 0038 5B68     		ldr	r3, [r3, #4]
 3433 003a 03F08003 		and	r3, r3, #128
 3434              		.loc 1 2073 6
 3435 003e 002B     		cmp	r3, #0
 3436 0040 17D0     		beq	.L176
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3437              		.loc 1 2075 17
 3438 0042 7B68     		ldr	r3, [r7, #4]
 3439 0044 5E4A     		ldr	r2, .L193+8
 3440 0046 5A64     		str	r2, [r3, #68]
 3441              	.L179:
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3442              		.loc 1 2079 17
 3443 0048 3B69     		ldr	r3, [r7, #16]
 3444              		.loc 1 2079 10
 3445 004a 002B     		cmp	r3, #0
 3446 004c 06D1     		bne	.L177
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3447              		.loc 1 2081 9
 3448 004e 7B68     		ldr	r3, [r7, #4]
 3449 0050 5B6D     		ldr	r3, [r3, #84]
 3450 0052 43F04002 		orr	r2, r3, #64
 3451 0056 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 98


 3452 0058 5A65     		str	r2, [r3, #84]
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3453              		.loc 1 2082 9
 3454 005a 08E0     		b	.L178
 3455              	.L177:
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3456              		.loc 1 2084 12
 3457 005c 3B69     		ldr	r3, [r7, #16]
 3458 005e 013B     		subs	r3, r3, #1
 3459 0060 3B61     		str	r3, [r7, #16]
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3460              		.loc 1 2085 18
 3461 0062 7B68     		ldr	r3, [r7, #4]
 3462 0064 93F85130 		ldrb	r3, [r3, #81]
 3463 0068 DBB2     		uxtb	r3, r3
 3464              		.loc 1 2085 5
 3465 006a 072B     		cmp	r3, #7
 3466 006c ECD1     		bne	.L179
 3467              	.L178:
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3468              		.loc 1 2087 11
 3469 006e FB68     		ldr	r3, [r7, #12]
 3470 0070 3B61     		str	r3, [r7, #16]
 3471              	.L176:
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3472              		.loc 1 2090 7
 3473 0072 7B68     		ldr	r3, [r7, #4]
 3474 0074 1B68     		ldr	r3, [r3]
 3475 0076 5B68     		ldr	r3, [r3, #4]
 3476 0078 03F04003 		and	r3, r3, #64
 3477              		.loc 1 2090 6
 3478 007c 002B     		cmp	r3, #0
 3479 007e 17D0     		beq	.L180
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3480              		.loc 1 2092 17
 3481 0080 7B68     		ldr	r3, [r7, #4]
 3482 0082 504A     		ldr	r2, .L193+12
 3483 0084 1A64     		str	r2, [r3, #64]
 3484              	.L183:
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3485              		.loc 1 2096 17
 3486 0086 3B69     		ldr	r3, [r7, #16]
 3487              		.loc 1 2096 10
 3488 0088 002B     		cmp	r3, #0
 3489 008a 06D1     		bne	.L181
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3490              		.loc 1 2098 9
 3491 008c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 99


 3492 008e 5B6D     		ldr	r3, [r3, #84]
 3493 0090 43F04002 		orr	r2, r3, #64
 3494 0094 7B68     		ldr	r3, [r7, #4]
 3495 0096 5A65     		str	r2, [r3, #84]
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3496              		.loc 1 2099 9
 3497 0098 08E0     		b	.L182
 3498              	.L181:
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3499              		.loc 1 2101 12
 3500 009a 3B69     		ldr	r3, [r7, #16]
 3501 009c 013B     		subs	r3, r3, #1
 3502 009e 3B61     		str	r3, [r7, #16]
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3503              		.loc 1 2102 18
 3504 00a0 7B68     		ldr	r3, [r7, #4]
 3505 00a2 93F85130 		ldrb	r3, [r3, #81]
 3506 00a6 DBB2     		uxtb	r3, r3
 3507              		.loc 1 2102 5
 3508 00a8 072B     		cmp	r3, #7
 3509 00aa ECD1     		bne	.L183
 3510              	.L182:
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3511              		.loc 1 2104 11
 3512 00ac FB68     		ldr	r3, [r7, #12]
 3513 00ae 3B61     		str	r3, [r7, #16]
 3514              	.L180:
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3515              		.loc 1 2108 7
 3516 00b0 7B68     		ldr	r3, [r7, #4]
 3517 00b2 1B68     		ldr	r3, [r3]
 3518 00b4 5B68     		ldr	r3, [r3, #4]
 3519 00b6 03F00203 		and	r3, r3, #2
 3520              		.loc 1 2108 6
 3521 00ba 002B     		cmp	r3, #0
 3522 00bc 2ED0     		beq	.L184
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3523              		.loc 1 2111 13
 3524 00be 7B68     		ldr	r3, [r7, #4]
 3525 00c0 9B6C     		ldr	r3, [r3, #72]
 3526              		.loc 1 2111 8
 3527 00c2 002B     		cmp	r3, #0
 3528 00c4 2AD0     		beq	.L184
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3529              		.loc 1 2115 11
 3530 00c6 7B68     		ldr	r3, [r7, #4]
 3531 00c8 9B6C     		ldr	r3, [r3, #72]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 100


 3532              		.loc 1 2115 39
 3533 00ca 0022     		movs	r2, #0
 3534 00cc 5A63     		str	r2, [r3, #52]
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 3535              		.loc 1 2118 11
 3536 00ce 7B68     		ldr	r3, [r7, #4]
 3537 00d0 9B6C     		ldr	r3, [r3, #72]
 3538 00d2 1846     		mov	r0, r3
 3539 00d4 FFF7FEFF 		bl	HAL_DMA_Abort
 3540 00d8 0346     		mov	r3, r0
 3541              		.loc 1 2118 10
 3542 00da 002B     		cmp	r3, #0
 3543 00dc 02D0     		beq	.L185
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3544              		.loc 1 2120 25
 3545 00de 7B68     		ldr	r3, [r7, #4]
 3546 00e0 4022     		movs	r2, #64
 3547 00e2 5A65     		str	r2, [r3, #84]
 3548              	.L185:
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
 3549              		.loc 1 2124 7
 3550 00e4 7B68     		ldr	r3, [r7, #4]
 3551 00e6 1B68     		ldr	r3, [r3]
 3552 00e8 5A68     		ldr	r2, [r3, #4]
 3553 00ea 7B68     		ldr	r3, [r7, #4]
 3554 00ec 1B68     		ldr	r3, [r3]
 3555 00ee 22F00202 		bic	r2, r2, #2
 3556 00f2 5A60     		str	r2, [r3, #4]
 3557              	.L187:
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       do
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (count == 0U)
 3558              		.loc 1 2129 19
 3559 00f4 3B69     		ldr	r3, [r7, #16]
 3560              		.loc 1 2129 12
 3561 00f6 002B     		cmp	r3, #0
 3562 00f8 06D1     		bne	.L186
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3563              		.loc 1 2131 11
 3564 00fa 7B68     		ldr	r3, [r7, #4]
 3565 00fc 5B6D     		ldr	r3, [r3, #84]
 3566 00fe 43F04002 		orr	r2, r3, #64
 3567 0102 7B68     		ldr	r3, [r7, #4]
 3568 0104 5A65     		str	r2, [r3, #84]
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
 3569              		.loc 1 2132 11
 3570 0106 09E0     		b	.L184
 3571              	.L186:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 101


2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         count--;
 3572              		.loc 1 2134 14
 3573 0108 3B69     		ldr	r3, [r7, #16]
 3574 010a 013B     		subs	r3, r3, #1
 3575 010c 3B61     		str	r3, [r7, #16]
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3576              		.loc 1 2135 21
 3577 010e 7B68     		ldr	r3, [r7, #4]
 3578 0110 1B68     		ldr	r3, [r3]
 3579              		.loc 1 2135 31
 3580 0112 9B68     		ldr	r3, [r3, #8]
 3581              		.loc 1 2135 36
 3582 0114 03F00203 		and	r3, r3, #2
 3583              		.loc 1 2135 7
 3584 0118 002B     		cmp	r3, #0
 3585 011a EBD0     		beq	.L187
 3586              	.L184:
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3587              		.loc 1 2140 7
 3588 011c 7B68     		ldr	r3, [r7, #4]
 3589 011e 1B68     		ldr	r3, [r3]
 3590 0120 5B68     		ldr	r3, [r3, #4]
 3591 0122 03F00103 		and	r3, r3, #1
 3592              		.loc 1 2140 6
 3593 0126 002B     		cmp	r3, #0
 3594 0128 22D0     		beq	.L188
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3595              		.loc 1 2143 13
 3596 012a 7B68     		ldr	r3, [r7, #4]
 3597 012c DB6C     		ldr	r3, [r3, #76]
 3598              		.loc 1 2143 8
 3599 012e 002B     		cmp	r3, #0
 3600 0130 1ED0     		beq	.L188
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3601              		.loc 1 2147 11
 3602 0132 7B68     		ldr	r3, [r7, #4]
 3603 0134 DB6C     		ldr	r3, [r3, #76]
 3604              		.loc 1 2147 39
 3605 0136 0022     		movs	r2, #0
 3606 0138 5A63     		str	r2, [r3, #52]
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 3607              		.loc 1 2150 11
 3608 013a 7B68     		ldr	r3, [r7, #4]
 3609 013c DB6C     		ldr	r3, [r3, #76]
 3610 013e 1846     		mov	r0, r3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 102


 3611 0140 FFF7FEFF 		bl	HAL_DMA_Abort
 3612 0144 0346     		mov	r3, r0
 3613              		.loc 1 2150 10
 3614 0146 002B     		cmp	r3, #0
 3615 0148 02D0     		beq	.L189
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3616              		.loc 1 2152 25
 3617 014a 7B68     		ldr	r3, [r7, #4]
 3618 014c 4022     		movs	r2, #64
 3619 014e 5A65     		str	r2, [r3, #84]
 3620              	.L189:
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable peripheral */
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3621              		.loc 1 2156 7
 3622 0150 7B68     		ldr	r3, [r7, #4]
 3623 0152 1B68     		ldr	r3, [r3]
 3624 0154 1A68     		ldr	r2, [r3]
 3625 0156 7B68     		ldr	r3, [r7, #4]
 3626 0158 1B68     		ldr	r3, [r3]
 3627 015a 22F04002 		bic	r2, r2, #64
 3628 015e 1A60     		str	r2, [r3]
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
 3629              		.loc 1 2159 7
 3630 0160 7B68     		ldr	r3, [r7, #4]
 3631 0162 1B68     		ldr	r3, [r3]
 3632 0164 5A68     		ldr	r2, [r3, #4]
 3633 0166 7B68     		ldr	r3, [r7, #4]
 3634 0168 1B68     		ldr	r3, [r3]
 3635 016a 22F00102 		bic	r2, r2, #1
 3636 016e 5A60     		str	r2, [r3, #4]
 3637              	.L188:
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3638              		.loc 1 2163 21
 3639 0170 7B68     		ldr	r3, [r7, #4]
 3640 0172 0022     		movs	r2, #0
 3641 0174 DA87     		strh	r2, [r3, #62]	@ movhi
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3642              		.loc 1 2164 21
 3643 0176 7B68     		ldr	r3, [r7, #4]
 3644 0178 0022     		movs	r2, #0
 3645 017a DA86     		strh	r2, [r3, #54]	@ movhi
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check error during Abort procedure */
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3646              		.loc 1 2167 11
 3647 017c 7B68     		ldr	r3, [r7, #4]
 3648 017e 5B6D     		ldr	r3, [r3, #84]
 3649              		.loc 1 2167 6
 3650 0180 402B     		cmp	r3, #64
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 103


 3651 0182 02D1     		bne	.L190
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3652              		.loc 1 2170 15
 3653 0184 0123     		movs	r3, #1
 3654 0186 FB75     		strb	r3, [r7, #23]
 3655 0188 02E0     		b	.L191
 3656              	.L190:
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 3657              		.loc 1 2175 21
 3658 018a 7B68     		ldr	r3, [r7, #4]
 3659 018c 0022     		movs	r2, #0
 3660 018e 5A65     		str	r2, [r3, #84]
 3661              	.L191:
 3662              	.LBB4:
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3663              		.loc 1 2179 3
 3664 0190 0023     		movs	r3, #0
 3665 0192 BB60     		str	r3, [r7, #8]
 3666 0194 7B68     		ldr	r3, [r7, #4]
 3667 0196 1B68     		ldr	r3, [r3]
 3668 0198 DB68     		ldr	r3, [r3, #12]
 3669 019a BB60     		str	r3, [r7, #8]
 3670 019c 7B68     		ldr	r3, [r7, #4]
 3671 019e 1B68     		ldr	r3, [r3]
 3672 01a0 9B68     		ldr	r3, [r3, #8]
 3673 01a2 BB60     		str	r3, [r7, #8]
 3674 01a4 BB68     		ldr	r3, [r7, #8]
 3675              	.LBE4:
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3676              		.loc 1 2182 15
 3677 01a6 7B68     		ldr	r3, [r7, #4]
 3678 01a8 0122     		movs	r2, #1
 3679 01aa 83F85120 		strb	r2, [r3, #81]
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 3680              		.loc 1 2184 10
 3681 01ae FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3682              		.loc 1 2185 1
 3683 01b0 1846     		mov	r0, r3
 3684 01b2 1837     		adds	r7, r7, #24
 3685              	.LCFI72:
 3686              		.cfi_def_cfa_offset 8
 3687 01b4 BD46     		mov	sp, r7
 3688              	.LCFI73:
 3689              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 104


 3690              		@ sp needed
 3691 01b6 80BD     		pop	{r7, pc}
 3692              	.L194:
 3693              		.align	2
 3694              	.L193:
 3695 01b8 00000000 		.word	SystemCoreClock
 3696 01bc F1197605 		.word	91625969
 3697 01c0 00000000 		.word	SPI_AbortTx_ISR
 3698 01c4 00000000 		.word	SPI_AbortRx_ISR
 3699              		.cfi_endproc
 3700              	.LFE78:
 3702              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 3703              		.align	1
 3704              		.global	HAL_SPI_Abort_IT
 3705              		.syntax unified
 3706              		.thumb
 3707              		.thumb_func
 3709              	HAL_SPI_Abort_IT:
 3710              	.LFB79:
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 3711              		.loc 1 2203 1
 3712              		.cfi_startproc
 3713              		@ args = 0, pretend = 0, frame = 32
 3714              		@ frame_needed = 1, uses_anonymous_args = 0
 3715 0000 80B5     		push	{r7, lr}
 3716              	.LCFI74:
 3717              		.cfi_def_cfa_offset 8
 3718              		.cfi_offset 7, -8
 3719              		.cfi_offset 14, -4
 3720 0002 88B0     		sub	sp, sp, #32
 3721              	.LCFI75:
 3722              		.cfi_def_cfa_offset 40
 3723 0004 00AF     		add	r7, sp, #0
 3724              	.LCFI76:
 3725              		.cfi_def_cfa_register 7
 3726 0006 7860     		str	r0, [r7, #4]
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt ;
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 105


2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
 3727              		.loc 1 2210 13
 3728 0008 0023     		movs	r3, #0
 3729 000a FB77     		strb	r3, [r7, #31]
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
 3730              		.loc 1 2211 13
 3731 000c 0123     		movs	r3, #1
 3732 000e BB61     		str	r3, [r7, #24]
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3733              		.loc 1 2212 61
 3734 0010 6E4B     		ldr	r3, .L216
 3735 0012 1B68     		ldr	r3, [r3]
 3736 0014 6E4A     		ldr	r2, .L216+4
 3737 0016 A2FB0323 		umull	r2, r3, r2, r3
 3738 001a 5B0A     		lsrs	r3, r3, #9
 3739              		.loc 1 2212 36
 3740 001c 6422     		movs	r2, #100
 3741 001e 02FB03F3 		mul	r3, r2, r3
 3742              		.loc 1 2212 14
 3743 0022 3B61     		str	r3, [r7, #16]
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 3744              		.loc 1 2213 9
 3745 0024 3B69     		ldr	r3, [r7, #16]
 3746 0026 7B61     		str	r3, [r7, #20]
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3747              		.loc 1 2216 3
 3748 0028 7B68     		ldr	r3, [r7, #4]
 3749 002a 1B68     		ldr	r3, [r3]
 3750 002c 5A68     		ldr	r2, [r3, #4]
 3751 002e 7B68     		ldr	r3, [r7, #4]
 3752 0030 1B68     		ldr	r3, [r3]
 3753 0032 22F02002 		bic	r2, r2, #32
 3754 0036 5A60     		str	r2, [r3, #4]
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3755              		.loc 1 2219 7
 3756 0038 7B68     		ldr	r3, [r7, #4]
 3757 003a 1B68     		ldr	r3, [r3]
 3758 003c 5B68     		ldr	r3, [r3, #4]
 3759 003e 03F08003 		and	r3, r3, #128
 3760              		.loc 1 2219 6
 3761 0042 002B     		cmp	r3, #0
 3762 0044 17D0     		beq	.L196
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3763              		.loc 1 2221 17
 3764 0046 7B68     		ldr	r3, [r7, #4]
 3765 0048 624A     		ldr	r2, .L216+8
 3766 004a 5A64     		str	r2, [r3, #68]
 3767              	.L199:
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 106


2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3768              		.loc 1 2225 17
 3769 004c 7B69     		ldr	r3, [r7, #20]
 3770              		.loc 1 2225 10
 3771 004e 002B     		cmp	r3, #0
 3772 0050 06D1     		bne	.L197
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3773              		.loc 1 2227 9
 3774 0052 7B68     		ldr	r3, [r7, #4]
 3775 0054 5B6D     		ldr	r3, [r3, #84]
 3776 0056 43F04002 		orr	r2, r3, #64
 3777 005a 7B68     		ldr	r3, [r7, #4]
 3778 005c 5A65     		str	r2, [r3, #84]
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3779              		.loc 1 2228 9
 3780 005e 08E0     		b	.L198
 3781              	.L197:
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3782              		.loc 1 2230 12
 3783 0060 7B69     		ldr	r3, [r7, #20]
 3784 0062 013B     		subs	r3, r3, #1
 3785 0064 7B61     		str	r3, [r7, #20]
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3786              		.loc 1 2231 18
 3787 0066 7B68     		ldr	r3, [r7, #4]
 3788 0068 93F85130 		ldrb	r3, [r3, #81]
 3789 006c DBB2     		uxtb	r3, r3
 3790              		.loc 1 2231 5
 3791 006e 072B     		cmp	r3, #7
 3792 0070 ECD1     		bne	.L199
 3793              	.L198:
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3794              		.loc 1 2233 11
 3795 0072 3B69     		ldr	r3, [r7, #16]
 3796 0074 7B61     		str	r3, [r7, #20]
 3797              	.L196:
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3798              		.loc 1 2236 7
 3799 0076 7B68     		ldr	r3, [r7, #4]
 3800 0078 1B68     		ldr	r3, [r3]
 3801 007a 5B68     		ldr	r3, [r3, #4]
 3802 007c 03F04003 		and	r3, r3, #64
 3803              		.loc 1 2236 6
 3804 0080 002B     		cmp	r3, #0
 3805 0082 17D0     		beq	.L200
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3806              		.loc 1 2238 17
 3807 0084 7B68     		ldr	r3, [r7, #4]
 3808 0086 544A     		ldr	r2, .L216+12
 3809 0088 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 107


 3810              	.L203:
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3811              		.loc 1 2242 17
 3812 008a 7B69     		ldr	r3, [r7, #20]
 3813              		.loc 1 2242 10
 3814 008c 002B     		cmp	r3, #0
 3815 008e 06D1     		bne	.L201
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3816              		.loc 1 2244 9
 3817 0090 7B68     		ldr	r3, [r7, #4]
 3818 0092 5B6D     		ldr	r3, [r3, #84]
 3819 0094 43F04002 		orr	r2, r3, #64
 3820 0098 7B68     		ldr	r3, [r7, #4]
 3821 009a 5A65     		str	r2, [r3, #84]
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3822              		.loc 1 2245 9
 3823 009c 08E0     		b	.L202
 3824              	.L201:
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3825              		.loc 1 2247 12
 3826 009e 7B69     		ldr	r3, [r7, #20]
 3827 00a0 013B     		subs	r3, r3, #1
 3828 00a2 7B61     		str	r3, [r7, #20]
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3829              		.loc 1 2248 18
 3830 00a4 7B68     		ldr	r3, [r7, #4]
 3831 00a6 93F85130 		ldrb	r3, [r3, #81]
 3832 00aa DBB2     		uxtb	r3, r3
 3833              		.loc 1 2248 5
 3834 00ac 072B     		cmp	r3, #7
 3835 00ae ECD1     		bne	.L203
 3836              	.L202:
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3837              		.loc 1 2250 11
 3838 00b0 3B69     		ldr	r3, [r7, #16]
 3839 00b2 7B61     		str	r3, [r7, #20]
 3840              	.L200:
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      before any call to DMA Abort functions */
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 3841              		.loc 1 2256 11
 3842 00b4 7B68     		ldr	r3, [r7, #4]
 3843 00b6 9B6C     		ldr	r3, [r3, #72]
 3844              		.loc 1 2256 6
 3845 00b8 002B     		cmp	r3, #0
 3846 00ba 0FD0     		beq	.L204
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 108


2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3847              		.loc 1 2260 9
 3848 00bc 7B68     		ldr	r3, [r7, #4]
 3849 00be 1B68     		ldr	r3, [r3]
 3850 00c0 5B68     		ldr	r3, [r3, #4]
 3851 00c2 03F00203 		and	r3, r3, #2
 3852              		.loc 1 2260 8
 3853 00c6 002B     		cmp	r3, #0
 3854 00c8 04D0     		beq	.L205
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 3855              		.loc 1 2262 11
 3856 00ca 7B68     		ldr	r3, [r7, #4]
 3857 00cc 9B6C     		ldr	r3, [r3, #72]
 3858              		.loc 1 2262 39
 3859 00ce 434A     		ldr	r2, .L216+16
 3860 00d0 5A63     		str	r2, [r3, #52]
 3861 00d2 03E0     		b	.L204
 3862              	.L205:
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3863              		.loc 1 2266 11
 3864 00d4 7B68     		ldr	r3, [r7, #4]
 3865 00d6 9B6C     		ldr	r3, [r3, #72]
 3866              		.loc 1 2266 39
 3867 00d8 0022     		movs	r2, #0
 3868 00da 5A63     		str	r2, [r3, #52]
 3869              	.L204:
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 3870              		.loc 1 2270 11
 3871 00dc 7B68     		ldr	r3, [r7, #4]
 3872 00de DB6C     		ldr	r3, [r3, #76]
 3873              		.loc 1 2270 6
 3874 00e0 002B     		cmp	r3, #0
 3875 00e2 0FD0     		beq	.L206
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3876              		.loc 1 2274 9
 3877 00e4 7B68     		ldr	r3, [r7, #4]
 3878 00e6 1B68     		ldr	r3, [r3]
 3879 00e8 5B68     		ldr	r3, [r3, #4]
 3880 00ea 03F00103 		and	r3, r3, #1
 3881              		.loc 1 2274 8
 3882 00ee 002B     		cmp	r3, #0
 3883 00f0 04D0     		beq	.L207
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 3884              		.loc 1 2276 11
 3885 00f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 109


 3886 00f4 DB6C     		ldr	r3, [r3, #76]
 3887              		.loc 1 2276 39
 3888 00f6 3A4A     		ldr	r2, .L216+20
 3889 00f8 5A63     		str	r2, [r3, #52]
 3890 00fa 03E0     		b	.L206
 3891              	.L207:
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3892              		.loc 1 2280 11
 3893 00fc 7B68     		ldr	r3, [r7, #4]
 3894 00fe DB6C     		ldr	r3, [r3, #76]
 3895              		.loc 1 2280 39
 3896 0100 0022     		movs	r2, #0
 3897 0102 5A63     		str	r2, [r3, #52]
 3898              	.L206:
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3899              		.loc 1 2285 7
 3900 0104 7B68     		ldr	r3, [r7, #4]
 3901 0106 1B68     		ldr	r3, [r3]
 3902 0108 5B68     		ldr	r3, [r3, #4]
 3903 010a 03F00203 		and	r3, r3, #2
 3904              		.loc 1 2285 6
 3905 010e 002B     		cmp	r3, #0
 3906 0110 15D0     		beq	.L208
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3907              		.loc 1 2288 13
 3908 0112 7B68     		ldr	r3, [r7, #4]
 3909 0114 9B6C     		ldr	r3, [r3, #72]
 3910              		.loc 1 2288 8
 3911 0116 002B     		cmp	r3, #0
 3912 0118 11D0     		beq	.L208
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3913              		.loc 1 2291 11
 3914 011a 7B68     		ldr	r3, [r7, #4]
 3915 011c 9B6C     		ldr	r3, [r3, #72]
 3916 011e 1846     		mov	r0, r3
 3917 0120 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3918 0124 0346     		mov	r3, r0
 3919              		.loc 1 2291 10
 3920 0126 002B     		cmp	r3, #0
 3921 0128 07D0     		beq	.L209
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3922              		.loc 1 2293 13
 3923 012a 7B68     		ldr	r3, [r7, #4]
 3924 012c 9B6C     		ldr	r3, [r3, #72]
 3925              		.loc 1 2293 41
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 110


 3926 012e 0022     		movs	r2, #0
 3927 0130 5A63     		str	r2, [r3, #52]
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3928              		.loc 1 2294 25
 3929 0132 7B68     		ldr	r3, [r7, #4]
 3930 0134 4022     		movs	r2, #64
 3931 0136 5A65     		str	r2, [r3, #84]
 3932 0138 01E0     		b	.L208
 3933              	.L209:
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
 3934              		.loc 1 2298 19
 3935 013a 0023     		movs	r3, #0
 3936 013c BB61     		str	r3, [r7, #24]
 3937              	.L208:
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3938              		.loc 1 2303 7
 3939 013e 7B68     		ldr	r3, [r7, #4]
 3940 0140 1B68     		ldr	r3, [r3]
 3941 0142 5B68     		ldr	r3, [r3, #4]
 3942 0144 03F00103 		and	r3, r3, #1
 3943              		.loc 1 2303 6
 3944 0148 002B     		cmp	r3, #0
 3945 014a 15D0     		beq	.L210
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3946              		.loc 1 2306 13
 3947 014c 7B68     		ldr	r3, [r7, #4]
 3948 014e DB6C     		ldr	r3, [r3, #76]
 3949              		.loc 1 2306 8
 3950 0150 002B     		cmp	r3, #0
 3951 0152 11D0     		beq	.L210
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3952              		.loc 1 2309 11
 3953 0154 7B68     		ldr	r3, [r7, #4]
 3954 0156 DB6C     		ldr	r3, [r3, #76]
 3955 0158 1846     		mov	r0, r3
 3956 015a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3957 015e 0346     		mov	r3, r0
 3958              		.loc 1 2309 10
 3959 0160 002B     		cmp	r3, #0
 3960 0162 07D0     		beq	.L211
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 3961              		.loc 1 2311 13
 3962 0164 7B68     		ldr	r3, [r7, #4]
 3963 0166 DB6C     		ldr	r3, [r3, #76]
 3964              		.loc 1 2311 41
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 111


 3965 0168 0022     		movs	r2, #0
 3966 016a 5A63     		str	r2, [r3, #52]
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3967              		.loc 1 2312 25
 3968 016c 7B68     		ldr	r3, [r7, #4]
 3969 016e 4022     		movs	r2, #64
 3970 0170 5A65     		str	r2, [r3, #84]
 3971 0172 01E0     		b	.L210
 3972              	.L211:
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
 3973              		.loc 1 2316 19
 3974 0174 0023     		movs	r3, #0
 3975 0176 BB61     		str	r3, [r7, #24]
 3976              	.L210:
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (abortcplt == 1U)
 3977              		.loc 1 2321 6
 3978 0178 BB69     		ldr	r3, [r7, #24]
 3979 017a 012B     		cmp	r3, #1
 3980 017c 21D1     		bne	.L212
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 3981              		.loc 1 2324 23
 3982 017e 7B68     		ldr	r3, [r7, #4]
 3983 0180 0022     		movs	r2, #0
 3984 0182 DA87     		strh	r2, [r3, #62]	@ movhi
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 3985              		.loc 1 2325 23
 3986 0184 7B68     		ldr	r3, [r7, #4]
 3987 0186 0022     		movs	r2, #0
 3988 0188 DA86     		strh	r2, [r3, #54]	@ movhi
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check error during Abort procedure */
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3989              		.loc 1 2328 13
 3990 018a 7B68     		ldr	r3, [r7, #4]
 3991 018c 5B6D     		ldr	r3, [r3, #84]
 3992              		.loc 1 2328 8
 3993 018e 402B     		cmp	r3, #64
 3994 0190 02D1     		bne	.L213
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3995              		.loc 1 2331 17
 3996 0192 0123     		movs	r3, #1
 3997 0194 FB77     		strb	r3, [r7, #31]
 3998 0196 02E0     		b	.L214
 3999              	.L213:
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 112


2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset errorCode */
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 4000              		.loc 1 2336 23
 4001 0198 7B68     		ldr	r3, [r7, #4]
 4002 019a 0022     		movs	r2, #0
 4003 019c 5A65     		str	r2, [r3, #84]
 4004              	.L214:
 4005              	.LBB5:
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4006              		.loc 1 2340 5
 4007 019e 0023     		movs	r3, #0
 4008 01a0 FB60     		str	r3, [r7, #12]
 4009 01a2 7B68     		ldr	r3, [r7, #4]
 4010 01a4 1B68     		ldr	r3, [r3]
 4011 01a6 DB68     		ldr	r3, [r3, #12]
 4012 01a8 FB60     		str	r3, [r7, #12]
 4013 01aa 7B68     		ldr	r3, [r7, #4]
 4014 01ac 1B68     		ldr	r3, [r3]
 4015 01ae 9B68     		ldr	r3, [r3, #8]
 4016 01b0 FB60     		str	r3, [r7, #12]
 4017 01b2 FB68     		ldr	r3, [r7, #12]
 4018              	.LBE5:
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4019              		.loc 1 2343 17
 4020 01b4 7B68     		ldr	r3, [r7, #4]
 4021 01b6 0122     		movs	r2, #1
 4022 01b8 83F85120 		strb	r2, [r3, #81]
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 4023              		.loc 1 2349 5
 4024 01bc 7868     		ldr	r0, [r7, #4]
 4025 01be FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 4026              	.L212:
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 4027              		.loc 1 2353 10
 4028 01c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4029              		.loc 1 2354 1
 4030 01c4 1846     		mov	r0, r3
 4031 01c6 2037     		adds	r7, r7, #32
 4032              	.LCFI77:
 4033              		.cfi_def_cfa_offset 8
 4034 01c8 BD46     		mov	sp, r7
 4035              	.LCFI78:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 113


 4036              		.cfi_def_cfa_register 13
 4037              		@ sp needed
 4038 01ca 80BD     		pop	{r7, pc}
 4039              	.L217:
 4040              		.align	2
 4041              	.L216:
 4042 01cc 00000000 		.word	SystemCoreClock
 4043 01d0 F1197605 		.word	91625969
 4044 01d4 00000000 		.word	SPI_AbortTx_ISR
 4045 01d8 00000000 		.word	SPI_AbortRx_ISR
 4046 01dc 00000000 		.word	SPI_DMATxAbortCallback
 4047 01e0 00000000 		.word	SPI_DMARxAbortCallback
 4048              		.cfi_endproc
 4049              	.LFE79:
 4051              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4052              		.align	1
 4053              		.global	HAL_SPI_DMAPause
 4054              		.syntax unified
 4055              		.thumb
 4056              		.thumb_func
 4058              	HAL_SPI_DMAPause:
 4059              	.LFB80:
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4060              		.loc 1 2363 1
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 8
 4063              		@ frame_needed = 1, uses_anonymous_args = 0
 4064              		@ link register save eliminated.
 4065 0000 80B4     		push	{r7}
 4066              	.LCFI79:
 4067              		.cfi_def_cfa_offset 4
 4068              		.cfi_offset 7, -4
 4069 0002 83B0     		sub	sp, sp, #12
 4070              	.LCFI80:
 4071              		.cfi_def_cfa_offset 16
 4072 0004 00AF     		add	r7, sp, #0
 4073              	.LCFI81:
 4074              		.cfi_def_cfa_register 7
 4075 0006 7860     		str	r0, [r7, #4]
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4076              		.loc 1 2365 3
 4077 0008 7B68     		ldr	r3, [r7, #4]
 4078 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4079 000e 012B     		cmp	r3, #1
 4080 0010 01D1     		bne	.L219
 4081              		.loc 1 2365 3 is_stmt 0 discriminator 1
 4082 0012 0223     		movs	r3, #2
 4083 0014 10E0     		b	.L220
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 114


 4084              	.L219:
 4085              		.loc 1 2365 3 discriminator 2
 4086 0016 7B68     		ldr	r3, [r7, #4]
 4087 0018 0122     		movs	r2, #1
 4088 001a 83F85020 		strb	r2, [r3, #80]
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4089              		.loc 1 2368 3 is_stmt 1 discriminator 2
 4090 001e 7B68     		ldr	r3, [r7, #4]
 4091 0020 1B68     		ldr	r3, [r3]
 4092 0022 5A68     		ldr	r2, [r3, #4]
 4093 0024 7B68     		ldr	r3, [r7, #4]
 4094 0026 1B68     		ldr	r3, [r3]
 4095 0028 22F00302 		bic	r2, r2, #3
 4096 002c 5A60     		str	r2, [r3, #4]
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4097              		.loc 1 2371 3 discriminator 2
 4098 002e 7B68     		ldr	r3, [r7, #4]
 4099 0030 0022     		movs	r2, #0
 4100 0032 83F85020 		strb	r2, [r3, #80]
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 4101              		.loc 1 2373 10 discriminator 2
 4102 0036 0023     		movs	r3, #0
 4103              	.L220:
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4104              		.loc 1 2374 1
 4105 0038 1846     		mov	r0, r3
 4106 003a 0C37     		adds	r7, r7, #12
 4107              	.LCFI82:
 4108              		.cfi_def_cfa_offset 4
 4109 003c BD46     		mov	sp, r7
 4110              	.LCFI83:
 4111              		.cfi_def_cfa_register 13
 4112              		@ sp needed
 4113 003e 80BC     		pop	{r7}
 4114              	.LCFI84:
 4115              		.cfi_restore 7
 4116              		.cfi_def_cfa_offset 0
 4117 0040 7047     		bx	lr
 4118              		.cfi_endproc
 4119              	.LFE80:
 4121              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 4122              		.align	1
 4123              		.global	HAL_SPI_DMAResume
 4124              		.syntax unified
 4125              		.thumb
 4126              		.thumb_func
 4128              	HAL_SPI_DMAResume:
 4129              	.LFB81:
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 115


2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4130              		.loc 1 2383 1
 4131              		.cfi_startproc
 4132              		@ args = 0, pretend = 0, frame = 8
 4133              		@ frame_needed = 1, uses_anonymous_args = 0
 4134              		@ link register save eliminated.
 4135 0000 80B4     		push	{r7}
 4136              	.LCFI85:
 4137              		.cfi_def_cfa_offset 4
 4138              		.cfi_offset 7, -4
 4139 0002 83B0     		sub	sp, sp, #12
 4140              	.LCFI86:
 4141              		.cfi_def_cfa_offset 16
 4142 0004 00AF     		add	r7, sp, #0
 4143              	.LCFI87:
 4144              		.cfi_def_cfa_register 7
 4145 0006 7860     		str	r0, [r7, #4]
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4146              		.loc 1 2385 3
 4147 0008 7B68     		ldr	r3, [r7, #4]
 4148 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4149 000e 012B     		cmp	r3, #1
 4150 0010 01D1     		bne	.L222
 4151              		.loc 1 2385 3 is_stmt 0 discriminator 1
 4152 0012 0223     		movs	r3, #2
 4153 0014 10E0     		b	.L223
 4154              	.L222:
 4155              		.loc 1 2385 3 discriminator 2
 4156 0016 7B68     		ldr	r3, [r7, #4]
 4157 0018 0122     		movs	r2, #1
 4158 001a 83F85020 		strb	r2, [r3, #80]
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4159              		.loc 1 2388 3 is_stmt 1 discriminator 2
 4160 001e 7B68     		ldr	r3, [r7, #4]
 4161 0020 1B68     		ldr	r3, [r3]
 4162 0022 5A68     		ldr	r2, [r3, #4]
 4163 0024 7B68     		ldr	r3, [r7, #4]
 4164 0026 1B68     		ldr	r3, [r3]
 4165 0028 42F00302 		orr	r2, r2, #3
 4166 002c 5A60     		str	r2, [r3, #4]
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4167              		.loc 1 2391 3 discriminator 2
 4168 002e 7B68     		ldr	r3, [r7, #4]
 4169 0030 0022     		movs	r2, #0
 4170 0032 83F85020 		strb	r2, [r3, #80]
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 4171              		.loc 1 2393 10 discriminator 2
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 116


 4172 0036 0023     		movs	r3, #0
 4173              	.L223:
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4174              		.loc 1 2394 1
 4175 0038 1846     		mov	r0, r3
 4176 003a 0C37     		adds	r7, r7, #12
 4177              	.LCFI88:
 4178              		.cfi_def_cfa_offset 4
 4179 003c BD46     		mov	sp, r7
 4180              	.LCFI89:
 4181              		.cfi_def_cfa_register 13
 4182              		@ sp needed
 4183 003e 80BC     		pop	{r7}
 4184              	.LCFI90:
 4185              		.cfi_restore 7
 4186              		.cfi_def_cfa_offset 0
 4187 0040 7047     		bx	lr
 4188              		.cfi_endproc
 4189              	.LFE81:
 4191              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4192              		.align	1
 4193              		.global	HAL_SPI_DMAStop
 4194              		.syntax unified
 4195              		.thumb
 4196              		.thumb_func
 4198              	HAL_SPI_DMAStop:
 4199              	.LFB82:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4200              		.loc 1 2403 1
 4201              		.cfi_startproc
 4202              		@ args = 0, pretend = 0, frame = 16
 4203              		@ frame_needed = 1, uses_anonymous_args = 0
 4204 0000 80B5     		push	{r7, lr}
 4205              	.LCFI91:
 4206              		.cfi_def_cfa_offset 8
 4207              		.cfi_offset 7, -8
 4208              		.cfi_offset 14, -4
 4209 0002 84B0     		sub	sp, sp, #16
 4210              	.LCFI92:
 4211              		.cfi_def_cfa_offset 24
 4212 0004 00AF     		add	r7, sp, #0
 4213              	.LCFI93:
 4214              		.cfi_def_cfa_register 7
 4215 0006 7860     		str	r0, [r7, #4]
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4216              		.loc 1 2404 21
 4217 0008 0023     		movs	r3, #0
 4218 000a FB73     		strb	r3, [r7, #15]
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 117


2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      */
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4219              		.loc 1 2412 11
 4220 000c 7B68     		ldr	r3, [r7, #4]
 4221 000e 9B6C     		ldr	r3, [r3, #72]
 4222              		.loc 1 2412 6
 4223 0010 002B     		cmp	r3, #0
 4224 0012 0FD0     		beq	.L225
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
 4225              		.loc 1 2414 19
 4226 0014 7B68     		ldr	r3, [r7, #4]
 4227 0016 9B6C     		ldr	r3, [r3, #72]
 4228 0018 1846     		mov	r0, r3
 4229 001a FFF7FEFF 		bl	HAL_DMA_Abort
 4230 001e 0346     		mov	r3, r0
 4231              		.loc 1 2414 8
 4232 0020 002B     		cmp	r3, #0
 4233 0022 07D0     		beq	.L225
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4234              		.loc 1 2416 7
 4235 0024 7B68     		ldr	r3, [r7, #4]
 4236 0026 5B6D     		ldr	r3, [r3, #84]
 4237 0028 43F01002 		orr	r2, r3, #16
 4238 002c 7B68     		ldr	r3, [r7, #4]
 4239 002e 5A65     		str	r2, [r3, #84]
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4240              		.loc 1 2417 17
 4241 0030 0123     		movs	r3, #1
 4242 0032 FB73     		strb	r3, [r7, #15]
 4243              	.L225:
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4244              		.loc 1 2421 11
 4245 0034 7B68     		ldr	r3, [r7, #4]
 4246 0036 DB6C     		ldr	r3, [r3, #76]
 4247              		.loc 1 2421 6
 4248 0038 002B     		cmp	r3, #0
 4249 003a 0FD0     		beq	.L226
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
 4250              		.loc 1 2423 19
 4251 003c 7B68     		ldr	r3, [r7, #4]
 4252 003e DB6C     		ldr	r3, [r3, #76]
 4253 0040 1846     		mov	r0, r3
 4254 0042 FFF7FEFF 		bl	HAL_DMA_Abort
 4255 0046 0346     		mov	r3, r0
 4256              		.loc 1 2423 8
 4257 0048 002B     		cmp	r3, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 118


 4258 004a 07D0     		beq	.L226
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4259              		.loc 1 2425 7
 4260 004c 7B68     		ldr	r3, [r7, #4]
 4261 004e 5B6D     		ldr	r3, [r3, #84]
 4262 0050 43F01002 		orr	r2, r3, #16
 4263 0054 7B68     		ldr	r3, [r7, #4]
 4264 0056 5A65     		str	r2, [r3, #84]
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4265              		.loc 1 2426 17
 4266 0058 0123     		movs	r3, #1
 4267 005a FB73     		strb	r3, [r7, #15]
 4268              	.L226:
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4269              		.loc 1 2431 3
 4270 005c 7B68     		ldr	r3, [r7, #4]
 4271 005e 1B68     		ldr	r3, [r3]
 4272 0060 5A68     		ldr	r2, [r3, #4]
 4273 0062 7B68     		ldr	r3, [r7, #4]
 4274 0064 1B68     		ldr	r3, [r3]
 4275 0066 22F00302 		bic	r2, r2, #3
 4276 006a 5A60     		str	r2, [r3, #4]
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4277              		.loc 1 2432 15
 4278 006c 7B68     		ldr	r3, [r7, #4]
 4279 006e 0122     		movs	r2, #1
 4280 0070 83F85120 		strb	r2, [r3, #81]
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 4281              		.loc 1 2433 10
 4282 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4283              		.loc 1 2434 1
 4284 0076 1846     		mov	r0, r3
 4285 0078 1037     		adds	r7, r7, #16
 4286              	.LCFI94:
 4287              		.cfi_def_cfa_offset 8
 4288 007a BD46     		mov	sp, r7
 4289              	.LCFI95:
 4290              		.cfi_def_cfa_register 13
 4291              		@ sp needed
 4292 007c 80BD     		pop	{r7, pc}
 4293              		.cfi_endproc
 4294              	.LFE82:
 4296              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4297              		.align	1
 4298              		.global	HAL_SPI_IRQHandler
 4299              		.syntax unified
 4300              		.thumb
 4301              		.thumb_func
 4303              	HAL_SPI_IRQHandler:
 4304              	.LFB83:
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 119


2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4305              		.loc 1 2443 1
 4306              		.cfi_startproc
 4307              		@ args = 0, pretend = 0, frame = 32
 4308              		@ frame_needed = 1, uses_anonymous_args = 0
 4309 0000 80B5     		push	{r7, lr}
 4310              	.LCFI96:
 4311              		.cfi_def_cfa_offset 8
 4312              		.cfi_offset 7, -8
 4313              		.cfi_offset 14, -4
 4314 0002 88B0     		sub	sp, sp, #32
 4315              	.LCFI97:
 4316              		.cfi_def_cfa_offset 40
 4317 0004 00AF     		add	r7, sp, #0
 4318              	.LCFI98:
 4319              		.cfi_def_cfa_register 7
 4320 0006 7860     		str	r0, [r7, #4]
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4321              		.loc 1 2444 27
 4322 0008 7B68     		ldr	r3, [r7, #4]
 4323 000a 1B68     		ldr	r3, [r3]
 4324              		.loc 1 2444 12
 4325 000c 5B68     		ldr	r3, [r3, #4]
 4326 000e FB61     		str	r3, [r7, #28]
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4327              		.loc 1 2445 27
 4328 0010 7B68     		ldr	r3, [r7, #4]
 4329 0012 1B68     		ldr	r3, [r3]
 4330              		.loc 1 2445 12
 4331 0014 9B68     		ldr	r3, [r3, #8]
 4332 0016 BB61     		str	r3, [r7, #24]
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 4333              		.loc 1 2448 8
 4334 0018 BB69     		ldr	r3, [r7, #24]
 4335 001a 9B09     		lsrs	r3, r3, #6
 4336 001c 03F00103 		and	r3, r3, #1
 4337              		.loc 1 2448 6
 4338 0020 002B     		cmp	r3, #0
 4339 0022 0FD1     		bne	.L229
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4340              		.loc 1 2449 8 discriminator 1
 4341 0024 BB69     		ldr	r3, [r7, #24]
 4342 0026 03F00103 		and	r3, r3, #1
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4343              		.loc 1 2448 55 discriminator 1
 4344 002a 002B     		cmp	r3, #0
 4345 002c 0AD0     		beq	.L229
 4346              		.loc 1 2449 60
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 120


 4347 002e FB69     		ldr	r3, [r7, #28]
 4348 0030 9B09     		lsrs	r3, r3, #6
 4349 0032 03F00103 		and	r3, r3, #1
 4350              		.loc 1 2449 56
 4351 0036 002B     		cmp	r3, #0
 4352 0038 04D0     		beq	.L229
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR(hspi);
 4353              		.loc 1 2451 9
 4354 003a 7B68     		ldr	r3, [r7, #4]
 4355 003c 1B6C     		ldr	r3, [r3, #64]
 4356              		.loc 1 2451 5
 4357 003e 7868     		ldr	r0, [r7, #4]
 4358 0040 9847     		blx	r3
 4359              	.LVL0:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4360              		.loc 1 2452 5
 4361 0042 BEE0     		b	.L228
 4362              	.L229:
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
 4363              		.loc 1 2456 8
 4364 0044 BB69     		ldr	r3, [r7, #24]
 4365 0046 5B08     		lsrs	r3, r3, #1
 4366 0048 03F00103 		and	r3, r3, #1
 4367              		.loc 1 2456 6
 4368 004c 002B     		cmp	r3, #0
 4369 004e 0AD0     		beq	.L231
 4370              		.loc 1 2456 59 discriminator 1
 4371 0050 FB69     		ldr	r3, [r7, #28]
 4372 0052 DB09     		lsrs	r3, r3, #7
 4373 0054 03F00103 		and	r3, r3, #1
 4374              		.loc 1 2456 55 discriminator 1
 4375 0058 002B     		cmp	r3, #0
 4376 005a 04D0     		beq	.L231
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR(hspi);
 4377              		.loc 1 2458 9
 4378 005c 7B68     		ldr	r3, [r7, #4]
 4379 005e 5B6C     		ldr	r3, [r3, #68]
 4380              		.loc 1 2458 5
 4381 0060 7868     		ldr	r0, [r7, #4]
 4382 0062 9847     		blx	r3
 4383              	.LVL1:
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4384              		.loc 1 2459 5
 4385 0064 ADE0     		b	.L228
 4386              	.L231:
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
 4387              		.loc 1 2463 9
 4388 0066 BB69     		ldr	r3, [r7, #24]
 4389 0068 5B09     		lsrs	r3, r3, #5
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 121


 4390 006a 03F00103 		and	r3, r3, #1
 4391              		.loc 1 2463 6
 4392 006e 002B     		cmp	r3, #0
 4393 0070 06D1     		bne	.L232
 4394              		.loc 1 2463 61 discriminator 1
 4395 0072 BB69     		ldr	r3, [r7, #24]
 4396 0074 9B09     		lsrs	r3, r3, #6
 4397 0076 03F00103 		and	r3, r3, #1
 4398              		.loc 1 2463 57 discriminator 1
 4399 007a 002B     		cmp	r3, #0
 4400 007c 00F0A180 		beq	.L228
 4401              	.L232:
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4402              		.loc 1 2464 11
 4403 0080 FB69     		ldr	r3, [r7, #28]
 4404 0082 5B09     		lsrs	r3, r3, #5
 4405 0084 03F00103 		and	r3, r3, #1
 4406              		.loc 1 2464 7
 4407 0088 002B     		cmp	r3, #0
 4408 008a 00F09A80 		beq	.L228
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 4409              		.loc 1 2467 9
 4410 008e BB69     		ldr	r3, [r7, #24]
 4411 0090 9B09     		lsrs	r3, r3, #6
 4412 0092 03F00103 		and	r3, r3, #1
 4413              		.loc 1 2467 8
 4414 0096 002B     		cmp	r3, #0
 4415 0098 23D0     		beq	.L233
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 4416              		.loc 1 2469 15
 4417 009a 7B68     		ldr	r3, [r7, #4]
 4418 009c 93F85130 		ldrb	r3, [r3, #81]
 4419 00a0 DBB2     		uxtb	r3, r3
 4420              		.loc 1 2469 10
 4421 00a2 032B     		cmp	r3, #3
 4422 00a4 11D0     		beq	.L234
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 4423              		.loc 1 2471 9
 4424 00a6 7B68     		ldr	r3, [r7, #4]
 4425 00a8 5B6D     		ldr	r3, [r3, #84]
 4426 00aa 43F00402 		orr	r2, r3, #4
 4427 00ae 7B68     		ldr	r3, [r7, #4]
 4428 00b0 5A65     		str	r2, [r3, #84]
 4429              	.LBB6:
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4430              		.loc 1 2472 9
 4431 00b2 0023     		movs	r3, #0
 4432 00b4 7B61     		str	r3, [r7, #20]
 4433 00b6 7B68     		ldr	r3, [r7, #4]
 4434 00b8 1B68     		ldr	r3, [r3]
 4435 00ba DB68     		ldr	r3, [r3, #12]
 4436 00bc 7B61     		str	r3, [r7, #20]
 4437 00be 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 122


 4438 00c0 1B68     		ldr	r3, [r3]
 4439 00c2 9B68     		ldr	r3, [r3, #8]
 4440 00c4 7B61     		str	r3, [r7, #20]
 4441 00c6 7B69     		ldr	r3, [r7, #20]
 4442              	.LBE6:
 4443 00c8 0BE0     		b	.L233
 4444              	.L234:
 4445              	.LBB7:
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4446              		.loc 1 2476 9
 4447 00ca 0023     		movs	r3, #0
 4448 00cc 3B61     		str	r3, [r7, #16]
 4449 00ce 7B68     		ldr	r3, [r7, #4]
 4450 00d0 1B68     		ldr	r3, [r3]
 4451 00d2 DB68     		ldr	r3, [r3, #12]
 4452 00d4 3B61     		str	r3, [r7, #16]
 4453 00d6 7B68     		ldr	r3, [r7, #4]
 4454 00d8 1B68     		ldr	r3, [r3]
 4455 00da 9B68     		ldr	r3, [r3, #8]
 4456 00dc 3B61     		str	r3, [r7, #16]
 4457 00de 3B69     		ldr	r3, [r7, #16]
 4458              	.LBE7:
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
 4459              		.loc 1 2477 9
 4460 00e0 6FE0     		b	.L228
 4461              	.L233:
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 4462              		.loc 1 2482 9
 4463 00e2 BB69     		ldr	r3, [r7, #24]
 4464 00e4 5B09     		lsrs	r3, r3, #5
 4465 00e6 03F00103 		and	r3, r3, #1
 4466              		.loc 1 2482 8
 4467 00ea 002B     		cmp	r3, #0
 4468 00ec 14D0     		beq	.L235
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 4469              		.loc 1 2484 7
 4470 00ee 7B68     		ldr	r3, [r7, #4]
 4471 00f0 5B6D     		ldr	r3, [r3, #84]
 4472 00f2 43F00102 		orr	r2, r3, #1
 4473 00f6 7B68     		ldr	r3, [r7, #4]
 4474 00f8 5A65     		str	r2, [r3, #84]
 4475              	.LBB8:
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4476              		.loc 1 2485 7
 4477 00fa 0023     		movs	r3, #0
 4478 00fc FB60     		str	r3, [r7, #12]
 4479 00fe 7B68     		ldr	r3, [r7, #4]
 4480 0100 1B68     		ldr	r3, [r3]
 4481 0102 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 123


 4482 0104 FB60     		str	r3, [r7, #12]
 4483 0106 7B68     		ldr	r3, [r7, #4]
 4484 0108 1B68     		ldr	r3, [r3]
 4485 010a 1A68     		ldr	r2, [r3]
 4486 010c 7B68     		ldr	r3, [r7, #4]
 4487 010e 1B68     		ldr	r3, [r3]
 4488 0110 22F04002 		bic	r2, r2, #64
 4489 0114 1A60     		str	r2, [r3]
 4490 0116 FB68     		ldr	r3, [r7, #12]
 4491              	.L235:
 4492              	.LBE8:
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4493              		.loc 1 2490 13
 4494 0118 7B68     		ldr	r3, [r7, #4]
 4495 011a 5B6D     		ldr	r3, [r3, #84]
 4496              		.loc 1 2490 8
 4497 011c 002B     		cmp	r3, #0
 4498 011e 4FD0     		beq	.L241
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable all interrupts */
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 4499              		.loc 1 2493 7
 4500 0120 7B68     		ldr	r3, [r7, #4]
 4501 0122 1B68     		ldr	r3, [r3]
 4502 0124 5A68     		ldr	r2, [r3, #4]
 4503 0126 7B68     		ldr	r3, [r7, #4]
 4504 0128 1B68     		ldr	r3, [r3]
 4505 012a 22F0E002 		bic	r2, r2, #224
 4506 012e 5A60     		str	r2, [r3, #4]
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 4507              		.loc 1 2495 19
 4508 0130 7B68     		ldr	r3, [r7, #4]
 4509 0132 0122     		movs	r2, #1
 4510 0134 83F85120 		strb	r2, [r3, #81]
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
 4511              		.loc 1 2497 12
 4512 0138 FB69     		ldr	r3, [r7, #28]
 4513 013a 03F00203 		and	r3, r3, #2
 4514              		.loc 1 2497 10
 4515 013e 002B     		cmp	r3, #0
 4516 0140 04D1     		bne	.L237
 4517              		.loc 1 2497 59 discriminator 1
 4518 0142 FB69     		ldr	r3, [r7, #28]
 4519 0144 03F00103 		and	r3, r3, #1
 4520              		.loc 1 2497 55 discriminator 1
 4521 0148 002B     		cmp	r3, #0
 4522 014a 34D0     		beq	.L238
 4523              	.L237:
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 4524              		.loc 1 2499 9
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 124


 4525 014c 7B68     		ldr	r3, [r7, #4]
 4526 014e 1B68     		ldr	r3, [r3]
 4527 0150 5A68     		ldr	r2, [r3, #4]
 4528 0152 7B68     		ldr	r3, [r7, #4]
 4529 0154 1B68     		ldr	r3, [r3]
 4530 0156 22F00302 		bic	r2, r2, #3
 4531 015a 5A60     		str	r2, [r3, #4]
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 4532              		.loc 1 2502 17
 4533 015c 7B68     		ldr	r3, [r7, #4]
 4534 015e DB6C     		ldr	r3, [r3, #76]
 4535              		.loc 1 2502 12
 4536 0160 002B     		cmp	r3, #0
 4537 0162 11D0     		beq	.L239
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 4538              		.loc 1 2506 15
 4539 0164 7B68     		ldr	r3, [r7, #4]
 4540 0166 DB6C     		ldr	r3, [r3, #76]
 4541              		.loc 1 2506 43
 4542 0168 174A     		ldr	r2, .L243
 4543 016a 5A63     		str	r2, [r3, #52]
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4544              		.loc 1 2507 25
 4545 016c 7B68     		ldr	r3, [r7, #4]
 4546 016e DB6C     		ldr	r3, [r3, #76]
 4547 0170 1846     		mov	r0, r3
 4548 0172 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4549 0176 0346     		mov	r3, r0
 4550              		.loc 1 2507 14
 4551 0178 002B     		cmp	r3, #0
 4552 017a 05D0     		beq	.L239
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4553              		.loc 1 2509 13
 4554 017c 7B68     		ldr	r3, [r7, #4]
 4555 017e 5B6D     		ldr	r3, [r3, #84]
 4556 0180 43F04002 		orr	r2, r3, #64
 4557 0184 7B68     		ldr	r3, [r7, #4]
 4558 0186 5A65     		str	r2, [r3, #84]
 4559              	.L239:
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 4560              		.loc 1 2513 17
 4561 0188 7B68     		ldr	r3, [r7, #4]
 4562 018a 9B6C     		ldr	r3, [r3, #72]
 4563              		.loc 1 2513 12
 4564 018c 002B     		cmp	r3, #0
 4565 018e 16D0     		beq	.L242
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 125


2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 4566              		.loc 1 2517 15
 4567 0190 7B68     		ldr	r3, [r7, #4]
 4568 0192 9B6C     		ldr	r3, [r3, #72]
 4569              		.loc 1 2517 43
 4570 0194 0C4A     		ldr	r2, .L243
 4571 0196 5A63     		str	r2, [r3, #52]
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4572              		.loc 1 2518 25
 4573 0198 7B68     		ldr	r3, [r7, #4]
 4574 019a 9B6C     		ldr	r3, [r3, #72]
 4575 019c 1846     		mov	r0, r3
 4576 019e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4577 01a2 0346     		mov	r3, r0
 4578              		.loc 1 2518 14
 4579 01a4 002B     		cmp	r3, #0
 4580 01a6 0AD0     		beq	.L242
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4581              		.loc 1 2520 13
 4582 01a8 7B68     		ldr	r3, [r7, #4]
 4583 01aa 5B6D     		ldr	r3, [r3, #84]
 4584 01ac 43F04002 		orr	r2, r3, #64
 4585 01b0 7B68     		ldr	r3, [r7, #4]
 4586 01b2 5A65     		str	r2, [r3, #84]
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4587              		.loc 1 2513 12
 4588 01b4 03E0     		b	.L242
 4589              	.L238:
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user error callback */
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 4590              		.loc 1 2530 9
 4591 01b6 7868     		ldr	r0, [r7, #4]
 4592 01b8 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4593              		.loc 1 2534 5
 4594 01bc 00E0     		b	.L241
 4595              	.L242:
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4596              		.loc 1 2513 12
 4597 01be 00BF     		nop
 4598              	.L241:
 4599              		.loc 1 2534 5
 4600 01c0 00BF     		nop
 4601              	.L228:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 126


2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4602              		.loc 1 2536 1
 4603 01c2 2037     		adds	r7, r7, #32
 4604              	.LCFI99:
 4605              		.cfi_def_cfa_offset 8
 4606 01c4 BD46     		mov	sp, r7
 4607              	.LCFI100:
 4608              		.cfi_def_cfa_register 13
 4609              		@ sp needed
 4610 01c6 80BD     		pop	{r7, pc}
 4611              	.L244:
 4612              		.align	2
 4613              	.L243:
 4614 01c8 00000000 		.word	SPI_DMAAbortOnError
 4615              		.cfi_endproc
 4616              	.LFE83:
 4618              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4619              		.align	1
 4620              		.weak	HAL_SPI_TxCpltCallback
 4621              		.syntax unified
 4622              		.thumb
 4623              		.thumb_func
 4625              	HAL_SPI_TxCpltCallback:
 4626              	.LFB84:
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4627              		.loc 1 2545 1
 4628              		.cfi_startproc
 4629              		@ args = 0, pretend = 0, frame = 8
 4630              		@ frame_needed = 1, uses_anonymous_args = 0
 4631              		@ link register save eliminated.
 4632 0000 80B4     		push	{r7}
 4633              	.LCFI101:
 4634              		.cfi_def_cfa_offset 4
 4635              		.cfi_offset 7, -4
 4636 0002 83B0     		sub	sp, sp, #12
 4637              	.LCFI102:
 4638              		.cfi_def_cfa_offset 16
 4639 0004 00AF     		add	r7, sp, #0
 4640              	.LCFI103:
 4641              		.cfi_def_cfa_register 7
 4642 0006 7860     		str	r0, [r7, #4]
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 127


 4643              		.loc 1 2552 1
 4644 0008 00BF     		nop
 4645 000a 0C37     		adds	r7, r7, #12
 4646              	.LCFI104:
 4647              		.cfi_def_cfa_offset 4
 4648 000c BD46     		mov	sp, r7
 4649              	.LCFI105:
 4650              		.cfi_def_cfa_register 13
 4651              		@ sp needed
 4652 000e 80BC     		pop	{r7}
 4653              	.LCFI106:
 4654              		.cfi_restore 7
 4655              		.cfi_def_cfa_offset 0
 4656 0010 7047     		bx	lr
 4657              		.cfi_endproc
 4658              	.LFE84:
 4660              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4661              		.align	1
 4662              		.weak	HAL_SPI_RxCpltCallback
 4663              		.syntax unified
 4664              		.thumb
 4665              		.thumb_func
 4667              	HAL_SPI_RxCpltCallback:
 4668              	.LFB85:
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4669              		.loc 1 2561 1
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 8
 4672              		@ frame_needed = 1, uses_anonymous_args = 0
 4673              		@ link register save eliminated.
 4674 0000 80B4     		push	{r7}
 4675              	.LCFI107:
 4676              		.cfi_def_cfa_offset 4
 4677              		.cfi_offset 7, -4
 4678 0002 83B0     		sub	sp, sp, #12
 4679              	.LCFI108:
 4680              		.cfi_def_cfa_offset 16
 4681 0004 00AF     		add	r7, sp, #0
 4682              	.LCFI109:
 4683              		.cfi_def_cfa_register 7
 4684 0006 7860     		str	r0, [r7, #4]
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4685              		.loc 1 2568 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 128


 4686 0008 00BF     		nop
 4687 000a 0C37     		adds	r7, r7, #12
 4688              	.LCFI110:
 4689              		.cfi_def_cfa_offset 4
 4690 000c BD46     		mov	sp, r7
 4691              	.LCFI111:
 4692              		.cfi_def_cfa_register 13
 4693              		@ sp needed
 4694 000e 80BC     		pop	{r7}
 4695              	.LCFI112:
 4696              		.cfi_restore 7
 4697              		.cfi_def_cfa_offset 0
 4698 0010 7047     		bx	lr
 4699              		.cfi_endproc
 4700              	.LFE85:
 4702              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4703              		.align	1
 4704              		.weak	HAL_SPI_TxRxCpltCallback
 4705              		.syntax unified
 4706              		.thumb
 4707              		.thumb_func
 4709              	HAL_SPI_TxRxCpltCallback:
 4710              	.LFB86:
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4711              		.loc 1 2577 1
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 8
 4714              		@ frame_needed = 1, uses_anonymous_args = 0
 4715              		@ link register save eliminated.
 4716 0000 80B4     		push	{r7}
 4717              	.LCFI113:
 4718              		.cfi_def_cfa_offset 4
 4719              		.cfi_offset 7, -4
 4720 0002 83B0     		sub	sp, sp, #12
 4721              	.LCFI114:
 4722              		.cfi_def_cfa_offset 16
 4723 0004 00AF     		add	r7, sp, #0
 4724              	.LCFI115:
 4725              		.cfi_def_cfa_register 7
 4726 0006 7860     		str	r0, [r7, #4]
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4727              		.loc 1 2584 1
 4728 0008 00BF     		nop
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 129


 4729 000a 0C37     		adds	r7, r7, #12
 4730              	.LCFI116:
 4731              		.cfi_def_cfa_offset 4
 4732 000c BD46     		mov	sp, r7
 4733              	.LCFI117:
 4734              		.cfi_def_cfa_register 13
 4735              		@ sp needed
 4736 000e 80BC     		pop	{r7}
 4737              	.LCFI118:
 4738              		.cfi_restore 7
 4739              		.cfi_def_cfa_offset 0
 4740 0010 7047     		bx	lr
 4741              		.cfi_endproc
 4742              	.LFE86:
 4744              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4745              		.align	1
 4746              		.weak	HAL_SPI_TxHalfCpltCallback
 4747              		.syntax unified
 4748              		.thumb
 4749              		.thumb_func
 4751              	HAL_SPI_TxHalfCpltCallback:
 4752              	.LFB87:
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4753              		.loc 1 2593 1
 4754              		.cfi_startproc
 4755              		@ args = 0, pretend = 0, frame = 8
 4756              		@ frame_needed = 1, uses_anonymous_args = 0
 4757              		@ link register save eliminated.
 4758 0000 80B4     		push	{r7}
 4759              	.LCFI119:
 4760              		.cfi_def_cfa_offset 4
 4761              		.cfi_offset 7, -4
 4762 0002 83B0     		sub	sp, sp, #12
 4763              	.LCFI120:
 4764              		.cfi_def_cfa_offset 16
 4765 0004 00AF     		add	r7, sp, #0
 4766              	.LCFI121:
 4767              		.cfi_def_cfa_register 7
 4768 0006 7860     		str	r0, [r7, #4]
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4769              		.loc 1 2600 1
 4770 0008 00BF     		nop
 4771 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 130


 4772              	.LCFI122:
 4773              		.cfi_def_cfa_offset 4
 4774 000c BD46     		mov	sp, r7
 4775              	.LCFI123:
 4776              		.cfi_def_cfa_register 13
 4777              		@ sp needed
 4778 000e 80BC     		pop	{r7}
 4779              	.LCFI124:
 4780              		.cfi_restore 7
 4781              		.cfi_def_cfa_offset 0
 4782 0010 7047     		bx	lr
 4783              		.cfi_endproc
 4784              	.LFE87:
 4786              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4787              		.align	1
 4788              		.weak	HAL_SPI_RxHalfCpltCallback
 4789              		.syntax unified
 4790              		.thumb
 4791              		.thumb_func
 4793              	HAL_SPI_RxHalfCpltCallback:
 4794              	.LFB88:
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4795              		.loc 1 2609 1
 4796              		.cfi_startproc
 4797              		@ args = 0, pretend = 0, frame = 8
 4798              		@ frame_needed = 1, uses_anonymous_args = 0
 4799              		@ link register save eliminated.
 4800 0000 80B4     		push	{r7}
 4801              	.LCFI125:
 4802              		.cfi_def_cfa_offset 4
 4803              		.cfi_offset 7, -4
 4804 0002 83B0     		sub	sp, sp, #12
 4805              	.LCFI126:
 4806              		.cfi_def_cfa_offset 16
 4807 0004 00AF     		add	r7, sp, #0
 4808              	.LCFI127:
 4809              		.cfi_def_cfa_register 7
 4810 0006 7860     		str	r0, [r7, #4]
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4811              		.loc 1 2616 1
 4812 0008 00BF     		nop
 4813 000a 0C37     		adds	r7, r7, #12
 4814              	.LCFI128:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 131


 4815              		.cfi_def_cfa_offset 4
 4816 000c BD46     		mov	sp, r7
 4817              	.LCFI129:
 4818              		.cfi_def_cfa_register 13
 4819              		@ sp needed
 4820 000e 80BC     		pop	{r7}
 4821              	.LCFI130:
 4822              		.cfi_restore 7
 4823              		.cfi_def_cfa_offset 0
 4824 0010 7047     		bx	lr
 4825              		.cfi_endproc
 4826              	.LFE88:
 4828              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4829              		.align	1
 4830              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4831              		.syntax unified
 4832              		.thumb
 4833              		.thumb_func
 4835              	HAL_SPI_TxRxHalfCpltCallback:
 4836              	.LFB89:
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4837              		.loc 1 2625 1
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 8
 4840              		@ frame_needed = 1, uses_anonymous_args = 0
 4841              		@ link register save eliminated.
 4842 0000 80B4     		push	{r7}
 4843              	.LCFI131:
 4844              		.cfi_def_cfa_offset 4
 4845              		.cfi_offset 7, -4
 4846 0002 83B0     		sub	sp, sp, #12
 4847              	.LCFI132:
 4848              		.cfi_def_cfa_offset 16
 4849 0004 00AF     		add	r7, sp, #0
 4850              	.LCFI133:
 4851              		.cfi_def_cfa_register 7
 4852 0006 7860     		str	r0, [r7, #4]
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4853              		.loc 1 2632 1
 4854 0008 00BF     		nop
 4855 000a 0C37     		adds	r7, r7, #12
 4856              	.LCFI134:
 4857              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 132


 4858 000c BD46     		mov	sp, r7
 4859              	.LCFI135:
 4860              		.cfi_def_cfa_register 13
 4861              		@ sp needed
 4862 000e 80BC     		pop	{r7}
 4863              	.LCFI136:
 4864              		.cfi_restore 7
 4865              		.cfi_def_cfa_offset 0
 4866 0010 7047     		bx	lr
 4867              		.cfi_endproc
 4868              	.LFE89:
 4870              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4871              		.align	1
 4872              		.weak	HAL_SPI_ErrorCallback
 4873              		.syntax unified
 4874              		.thumb
 4875              		.thumb_func
 4877              	HAL_SPI_ErrorCallback:
 4878              	.LFB90:
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI error callback.
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4879              		.loc 1 2641 1
 4880              		.cfi_startproc
 4881              		@ args = 0, pretend = 0, frame = 8
 4882              		@ frame_needed = 1, uses_anonymous_args = 0
 4883              		@ link register save eliminated.
 4884 0000 80B4     		push	{r7}
 4885              	.LCFI137:
 4886              		.cfi_def_cfa_offset 4
 4887              		.cfi_offset 7, -4
 4888 0002 83B0     		sub	sp, sp, #12
 4889              	.LCFI138:
 4890              		.cfi_def_cfa_offset 16
 4891 0004 00AF     		add	r7, sp, #0
 4892              	.LCFI139:
 4893              		.cfi_def_cfa_register 7
 4894 0006 7860     		str	r0, [r7, #4]
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4895              		.loc 1 2651 1
 4896 0008 00BF     		nop
 4897 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 133


 4898              	.LCFI140:
 4899              		.cfi_def_cfa_offset 4
 4900 000c BD46     		mov	sp, r7
 4901              	.LCFI141:
 4902              		.cfi_def_cfa_register 13
 4903              		@ sp needed
 4904 000e 80BC     		pop	{r7}
 4905              	.LCFI142:
 4906              		.cfi_restore 7
 4907              		.cfi_def_cfa_offset 0
 4908 0010 7047     		bx	lr
 4909              		.cfi_endproc
 4910              	.LFE90:
 4912              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4913              		.align	1
 4914              		.weak	HAL_SPI_AbortCpltCallback
 4915              		.syntax unified
 4916              		.thumb
 4917              		.thumb_func
 4919              	HAL_SPI_AbortCpltCallback:
 4920              	.LFB91:
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4921              		.loc 1 2659 1
 4922              		.cfi_startproc
 4923              		@ args = 0, pretend = 0, frame = 8
 4924              		@ frame_needed = 1, uses_anonymous_args = 0
 4925              		@ link register save eliminated.
 4926 0000 80B4     		push	{r7}
 4927              	.LCFI143:
 4928              		.cfi_def_cfa_offset 4
 4929              		.cfi_offset 7, -4
 4930 0002 83B0     		sub	sp, sp, #12
 4931              	.LCFI144:
 4932              		.cfi_def_cfa_offset 16
 4933 0004 00AF     		add	r7, sp, #0
 4934              	.LCFI145:
 4935              		.cfi_def_cfa_register 7
 4936 0006 7860     		str	r0, [r7, #4]
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4937              		.loc 1 2666 1
 4938 0008 00BF     		nop
 4939 000a 0C37     		adds	r7, r7, #12
 4940              	.LCFI146:
 4941              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 134


 4942 000c BD46     		mov	sp, r7
 4943              	.LCFI147:
 4944              		.cfi_def_cfa_register 13
 4945              		@ sp needed
 4946 000e 80BC     		pop	{r7}
 4947              	.LCFI148:
 4948              		.cfi_restore 7
 4949              		.cfi_def_cfa_offset 0
 4950 0010 7047     		bx	lr
 4951              		.cfi_endproc
 4952              	.LFE91:
 4954              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4955              		.align	1
 4956              		.global	HAL_SPI_GetState
 4957              		.syntax unified
 4958              		.thumb
 4959              		.thumb_func
 4961              	HAL_SPI_GetState:
 4962              	.LFB92:
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI control functions
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI state
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4963              		.loc 1 2694 1
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 8
 4966              		@ frame_needed = 1, uses_anonymous_args = 0
 4967              		@ link register save eliminated.
 4968 0000 80B4     		push	{r7}
 4969              	.LCFI149:
 4970              		.cfi_def_cfa_offset 4
 4971              		.cfi_offset 7, -4
 4972 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 135


 4973              	.LCFI150:
 4974              		.cfi_def_cfa_offset 16
 4975 0004 00AF     		add	r7, sp, #0
 4976              	.LCFI151:
 4977              		.cfi_def_cfa_register 7
 4978 0006 7860     		str	r0, [r7, #4]
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->State;
 4979              		.loc 1 2696 14
 4980 0008 7B68     		ldr	r3, [r7, #4]
 4981 000a 93F85130 		ldrb	r3, [r3, #81]
 4982 000e DBB2     		uxtb	r3, r3
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4983              		.loc 1 2697 1
 4984 0010 1846     		mov	r0, r3
 4985 0012 0C37     		adds	r7, r7, #12
 4986              	.LCFI152:
 4987              		.cfi_def_cfa_offset 4
 4988 0014 BD46     		mov	sp, r7
 4989              	.LCFI153:
 4990              		.cfi_def_cfa_register 13
 4991              		@ sp needed
 4992 0016 80BC     		pop	{r7}
 4993              	.LCFI154:
 4994              		.cfi_restore 7
 4995              		.cfi_def_cfa_offset 0
 4996 0018 7047     		bx	lr
 4997              		.cfi_endproc
 4998              	.LFE92:
 5000              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5001              		.align	1
 5002              		.global	HAL_SPI_GetError
 5003              		.syntax unified
 5004              		.thumb
 5005              		.thumb_func
 5007              	HAL_SPI_GetError:
 5008              	.LFB93:
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5009              		.loc 1 2706 1
 5010              		.cfi_startproc
 5011              		@ args = 0, pretend = 0, frame = 8
 5012              		@ frame_needed = 1, uses_anonymous_args = 0
 5013              		@ link register save eliminated.
 5014 0000 80B4     		push	{r7}
 5015              	.LCFI155:
 5016              		.cfi_def_cfa_offset 4
 5017              		.cfi_offset 7, -4
 5018 0002 83B0     		sub	sp, sp, #12
 5019              	.LCFI156:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 136


 5020              		.cfi_def_cfa_offset 16
 5021 0004 00AF     		add	r7, sp, #0
 5022              	.LCFI157:
 5023              		.cfi_def_cfa_register 7
 5024 0006 7860     		str	r0, [r7, #4]
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->ErrorCode;
 5025              		.loc 1 2708 14
 5026 0008 7B68     		ldr	r3, [r7, #4]
 5027 000a 5B6D     		ldr	r3, [r3, #84]
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5028              		.loc 1 2709 1
 5029 000c 1846     		mov	r0, r3
 5030 000e 0C37     		adds	r7, r7, #12
 5031              	.LCFI158:
 5032              		.cfi_def_cfa_offset 4
 5033 0010 BD46     		mov	sp, r7
 5034              	.LCFI159:
 5035              		.cfi_def_cfa_register 13
 5036              		@ sp needed
 5037 0012 80BC     		pop	{r7}
 5038              	.LCFI160:
 5039              		.cfi_restore 7
 5040              		.cfi_def_cfa_offset 0
 5041 0014 7047     		bx	lr
 5042              		.cfi_endproc
 5043              	.LFE93:
 5045              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5046              		.align	1
 5047              		.syntax unified
 5048              		.thumb
 5049              		.thumb_func
 5051              	SPI_DMATransmitCplt:
 5052              	.LFB94:
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   Private functions
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5053              		.loc 1 2731 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 137


 5054              		.cfi_startproc
 5055              		@ args = 0, pretend = 0, frame = 24
 5056              		@ frame_needed = 1, uses_anonymous_args = 0
 5057 0000 80B5     		push	{r7, lr}
 5058              	.LCFI161:
 5059              		.cfi_def_cfa_offset 8
 5060              		.cfi_offset 7, -8
 5061              		.cfi_offset 14, -4
 5062 0002 86B0     		sub	sp, sp, #24
 5063              	.LCFI162:
 5064              		.cfi_def_cfa_offset 32
 5065 0004 00AF     		add	r7, sp, #0
 5066              	.LCFI163:
 5067              		.cfi_def_cfa_register 7
 5068 0006 7860     		str	r0, [r7, #4]
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5069              		.loc 1 2732 22
 5070 0008 7B68     		ldr	r3, [r7, #4]
 5071 000a 5B6A     		ldr	r3, [r3, #36]
 5072 000c 7B61     		str	r3, [r7, #20]
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5073              		.loc 1 2736 15
 5074 000e FFF7FEFF 		bl	HAL_GetTick
 5075 0012 3861     		str	r0, [r7, #16]
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5076              		.loc 1 2739 12
 5077 0014 7B68     		ldr	r3, [r7, #4]
 5078 0016 1B68     		ldr	r3, [r3]
 5079              		.loc 1 2739 22
 5080 0018 1B68     		ldr	r3, [r3]
 5081              		.loc 1 2739 28
 5082 001a 03F02003 		and	r3, r3, #32
 5083              		.loc 1 2739 6
 5084 001e 202B     		cmp	r3, #32
 5085 0020 3BD0     		beq	.L258
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5086              		.loc 1 2742 5
 5087 0022 7B69     		ldr	r3, [r7, #20]
 5088 0024 1B68     		ldr	r3, [r3]
 5089 0026 5A68     		ldr	r2, [r3, #4]
 5090 0028 7B69     		ldr	r3, [r7, #20]
 5091 002a 1B68     		ldr	r3, [r3]
 5092 002c 22F02002 		bic	r2, r2, #32
 5093 0030 5A60     		str	r2, [r3, #4]
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5094              		.loc 1 2745 5
 5095 0032 7B69     		ldr	r3, [r7, #20]
 5096 0034 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 138


 5097 0036 5A68     		ldr	r2, [r3, #4]
 5098 0038 7B69     		ldr	r3, [r7, #20]
 5099 003a 1B68     		ldr	r3, [r3]
 5100 003c 22F00202 		bic	r2, r2, #2
 5101 0040 5A60     		str	r2, [r3, #4]
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5102              		.loc 1 2748 9
 5103 0042 3A69     		ldr	r2, [r7, #16]
 5104 0044 6421     		movs	r1, #100
 5105 0046 7869     		ldr	r0, [r7, #20]
 5106 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5107 004c 0346     		mov	r3, r0
 5108              		.loc 1 2748 8
 5109 004e 002B     		cmp	r3, #0
 5110 0050 05D0     		beq	.L259
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5111              		.loc 1 2750 7
 5112 0052 7B69     		ldr	r3, [r7, #20]
 5113 0054 5B6D     		ldr	r3, [r3, #84]
 5114 0056 43F02002 		orr	r2, r3, #32
 5115 005a 7B69     		ldr	r3, [r7, #20]
 5116 005c 5A65     		str	r2, [r3, #84]
 5117              	.L259:
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 5118              		.loc 1 2754 19
 5119 005e 7B69     		ldr	r3, [r7, #20]
 5120 0060 9B68     		ldr	r3, [r3, #8]
 5121              		.loc 1 2754 8
 5122 0062 002B     		cmp	r3, #0
 5123 0064 0AD1     		bne	.L260
 5124              	.LBB9:
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5125              		.loc 1 2756 7
 5126 0066 0023     		movs	r3, #0
 5127 0068 FB60     		str	r3, [r7, #12]
 5128 006a 7B69     		ldr	r3, [r7, #20]
 5129 006c 1B68     		ldr	r3, [r3]
 5130 006e DB68     		ldr	r3, [r3, #12]
 5131 0070 FB60     		str	r3, [r7, #12]
 5132 0072 7B69     		ldr	r3, [r7, #20]
 5133 0074 1B68     		ldr	r3, [r3]
 5134 0076 9B68     		ldr	r3, [r3, #8]
 5135 0078 FB60     		str	r3, [r7, #12]
 5136 007a FB68     		ldr	r3, [r7, #12]
 5137              	.L260:
 5138              	.LBE9:
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5139              		.loc 1 2759 23
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 139


 5140 007c 7B69     		ldr	r3, [r7, #20]
 5141 007e 0022     		movs	r2, #0
 5142 0080 DA86     		strh	r2, [r3, #54]	@ movhi
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5143              		.loc 1 2760 17
 5144 0082 7B69     		ldr	r3, [r7, #20]
 5145 0084 0122     		movs	r2, #1
 5146 0086 83F85120 		strb	r2, [r3, #81]
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5147              		.loc 1 2762 13
 5148 008a 7B69     		ldr	r3, [r7, #20]
 5149 008c 5B6D     		ldr	r3, [r3, #84]
 5150              		.loc 1 2762 8
 5151 008e 002B     		cmp	r3, #0
 5152 0090 03D0     		beq	.L258
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5153              		.loc 1 2768 7
 5154 0092 7869     		ldr	r0, [r7, #20]
 5155 0094 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5156              		.loc 1 2770 7
 5157 0098 02E0     		b	.L257
 5158              	.L258:
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx complete callback */
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
 5159              		.loc 1 2777 3
 5160 009a 7869     		ldr	r0, [r7, #20]
 5161 009c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5162              	.L257:
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5163              		.loc 1 2779 1
 5164 00a0 1837     		adds	r7, r7, #24
 5165              	.LCFI164:
 5166              		.cfi_def_cfa_offset 8
 5167 00a2 BD46     		mov	sp, r7
 5168              	.LCFI165:
 5169              		.cfi_def_cfa_register 13
 5170              		@ sp needed
 5171 00a4 80BD     		pop	{r7, pc}
 5172              		.cfi_endproc
 5173              	.LFE94:
 5175              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5176              		.align	1
 5177              		.syntax unified
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 140


 5178              		.thumb
 5179              		.thumb_func
 5181              	SPI_DMAReceiveCplt:
 5182              	.LFB95:
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5183              		.loc 1 2788 1
 5184              		.cfi_startproc
 5185              		@ args = 0, pretend = 0, frame = 16
 5186              		@ frame_needed = 1, uses_anonymous_args = 0
 5187 0000 80B5     		push	{r7, lr}
 5188              	.LCFI166:
 5189              		.cfi_def_cfa_offset 8
 5190              		.cfi_offset 7, -8
 5191              		.cfi_offset 14, -4
 5192 0002 84B0     		sub	sp, sp, #16
 5193              	.LCFI167:
 5194              		.cfi_def_cfa_offset 24
 5195 0004 00AF     		add	r7, sp, #0
 5196              	.LCFI168:
 5197              		.cfi_def_cfa_register 7
 5198 0006 7860     		str	r0, [r7, #4]
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5199              		.loc 1 2789 22
 5200 0008 7B68     		ldr	r3, [r7, #4]
 5201 000a 5B6A     		ldr	r3, [r3, #36]
 5202 000c FB60     		str	r3, [r7, #12]
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5203              		.loc 1 2796 15
 5204 000e FFF7FEFF 		bl	HAL_GetTick
 5205 0012 B860     		str	r0, [r7, #8]
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5206              		.loc 1 2799 12
 5207 0014 7B68     		ldr	r3, [r7, #4]
 5208 0016 1B68     		ldr	r3, [r3]
 5209              		.loc 1 2799 22
 5210 0018 1B68     		ldr	r3, [r3]
 5211              		.loc 1 2799 28
 5212 001a 03F02003 		and	r3, r3, #32
 5213              		.loc 1 2799 6
 5214 001e 202B     		cmp	r3, #32
 5215 0020 3BD0     		beq	.L263
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 141


2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5216              		.loc 1 2802 5
 5217 0022 FB68     		ldr	r3, [r7, #12]
 5218 0024 1B68     		ldr	r3, [r3]
 5219 0026 5A68     		ldr	r2, [r3, #4]
 5220 0028 FB68     		ldr	r3, [r7, #12]
 5221 002a 1B68     		ldr	r3, [r3]
 5222 002c 22F02002 		bic	r2, r2, #32
 5223 0030 5A60     		str	r2, [r3, #4]
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag */
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Error on the CRC reception */
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC */
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if we are in Master RX 2 line mode */
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 5224              		.loc 1 2822 20
 5225 0032 FB68     		ldr	r3, [r7, #12]
 5226 0034 9B68     		ldr	r3, [r3, #8]
 5227              		.loc 1 2822 8
 5228 0036 002B     		cmp	r3, #0
 5229 0038 0DD1     		bne	.L264
 5230              		.loc 1 2822 70 discriminator 1
 5231 003a FB68     		ldr	r3, [r7, #12]
 5232 003c 5B68     		ldr	r3, [r3, #4]
 5233              		.loc 1 2822 56 discriminator 1
 5234 003e B3F5827F 		cmp	r3, #260
 5235 0042 08D1     		bne	.L264
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines)
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5236              		.loc 1 2825 7
 5237 0044 FB68     		ldr	r3, [r7, #12]
 5238 0046 1B68     		ldr	r3, [r3]
 5239 0048 5A68     		ldr	r2, [r3, #4]
 5240 004a FB68     		ldr	r3, [r7, #12]
 5241 004c 1B68     		ldr	r3, [r3]
 5242 004e 22F00302 		bic	r2, r2, #3
 5243 0052 5A60     		str	r2, [r3, #4]
 5244 0054 07E0     		b	.L265
 5245              	.L264:
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 142


2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Normal case */
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5246              		.loc 1 2830 7
 5247 0056 FB68     		ldr	r3, [r7, #12]
 5248 0058 1B68     		ldr	r3, [r3]
 5249 005a 5A68     		ldr	r2, [r3, #4]
 5250 005c FB68     		ldr	r3, [r7, #12]
 5251 005e 1B68     		ldr	r3, [r3]
 5252 0060 22F00102 		bic	r2, r2, #1
 5253 0064 5A60     		str	r2, [r3, #4]
 5254              	.L265:
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5255              		.loc 1 2834 9
 5256 0066 BA68     		ldr	r2, [r7, #8]
 5257 0068 6421     		movs	r1, #100
 5258 006a F868     		ldr	r0, [r7, #12]
 5259 006c FFF7FEFF 		bl	SPI_EndRxTransaction
 5260 0070 0346     		mov	r3, r0
 5261              		.loc 1 2834 8
 5262 0072 002B     		cmp	r3, #0
 5263 0074 02D0     		beq	.L266
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 5264              		.loc 1 2836 23
 5265 0076 FB68     		ldr	r3, [r7, #12]
 5266 0078 2022     		movs	r2, #32
 5267 007a 5A65     		str	r2, [r3, #84]
 5268              	.L266:
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5269              		.loc 1 2839 23
 5270 007c FB68     		ldr	r3, [r7, #12]
 5271 007e 0022     		movs	r2, #0
 5272 0080 DA87     		strh	r2, [r3, #62]	@ movhi
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5273              		.loc 1 2840 17
 5274 0082 FB68     		ldr	r3, [r7, #12]
 5275 0084 0122     		movs	r2, #1
 5276 0086 83F85120 		strb	r2, [r3, #81]
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 143


2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5277              		.loc 1 2861 13
 5278 008a FB68     		ldr	r3, [r7, #12]
 5279 008c 5B6D     		ldr	r3, [r3, #84]
 5280              		.loc 1 2861 8
 5281 008e 002B     		cmp	r3, #0
 5282 0090 03D0     		beq	.L263
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5283              		.loc 1 2867 7
 5284 0092 F868     		ldr	r0, [r7, #12]
 5285 0094 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5286              		.loc 1 2869 7
 5287 0098 02E0     		b	.L262
 5288              	.L263:
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx complete callback */
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
 5289              		.loc 1 2876 3
 5290 009a F868     		ldr	r0, [r7, #12]
 5291 009c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5292              	.L262:
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5293              		.loc 1 2878 1
 5294 00a0 1037     		adds	r7, r7, #16
 5295              	.LCFI169:
 5296              		.cfi_def_cfa_offset 8
 5297 00a2 BD46     		mov	sp, r7
 5298              	.LCFI170:
 5299              		.cfi_def_cfa_register 13
 5300              		@ sp needed
 5301 00a4 80BD     		pop	{r7, pc}
 5302              		.cfi_endproc
 5303              	.LFE95:
 5305              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5306              		.align	1
 5307              		.syntax unified
 5308              		.thumb
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 144


 5309              		.thumb_func
 5311              	SPI_DMATransmitReceiveCplt:
 5312              	.LFB96:
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5313              		.loc 1 2887 1
 5314              		.cfi_startproc
 5315              		@ args = 0, pretend = 0, frame = 16
 5316              		@ frame_needed = 1, uses_anonymous_args = 0
 5317 0000 80B5     		push	{r7, lr}
 5318              	.LCFI171:
 5319              		.cfi_def_cfa_offset 8
 5320              		.cfi_offset 7, -8
 5321              		.cfi_offset 14, -4
 5322 0002 84B0     		sub	sp, sp, #16
 5323              	.LCFI172:
 5324              		.cfi_def_cfa_offset 24
 5325 0004 00AF     		add	r7, sp, #0
 5326              	.LCFI173:
 5327              		.cfi_def_cfa_register 7
 5328 0006 7860     		str	r0, [r7, #4]
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5329              		.loc 1 2888 22
 5330 0008 7B68     		ldr	r3, [r7, #4]
 5331 000a 5B6A     		ldr	r3, [r3, #36]
 5332 000c FB60     		str	r3, [r7, #12]
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5333              		.loc 1 2895 15
 5334 000e FFF7FEFF 		bl	HAL_GetTick
 5335 0012 B860     		str	r0, [r7, #8]
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5336              		.loc 1 2898 12
 5337 0014 7B68     		ldr	r3, [r7, #4]
 5338 0016 1B68     		ldr	r3, [r3]
 5339              		.loc 1 2898 22
 5340 0018 1B68     		ldr	r3, [r3]
 5341              		.loc 1 2898 28
 5342 001a 03F02003 		and	r3, r3, #32
 5343              		.loc 1 2898 6
 5344 001e 202B     		cmp	r3, #32
 5345 0020 2FD0     		beq	.L269
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 145


2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5346              		.loc 1 2901 5
 5347 0022 FB68     		ldr	r3, [r7, #12]
 5348 0024 1B68     		ldr	r3, [r3]
 5349 0026 5A68     		ldr	r2, [r3, #4]
 5350 0028 FB68     		ldr	r3, [r7, #12]
 5351 002a 1B68     		ldr	r3, [r3]
 5352 002c 22F02002 		bic	r2, r2, #32
 5353 0030 5A60     		str	r2, [r3, #4]
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait the CRC data */
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5354              		.loc 1 2920 9
 5355 0032 BA68     		ldr	r2, [r7, #8]
 5356 0034 6421     		movs	r1, #100
 5357 0036 F868     		ldr	r0, [r7, #12]
 5358 0038 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5359 003c 0346     		mov	r3, r0
 5360              		.loc 1 2920 8
 5361 003e 002B     		cmp	r3, #0
 5362 0040 05D0     		beq	.L270
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5363              		.loc 1 2922 7
 5364 0042 FB68     		ldr	r3, [r7, #12]
 5365 0044 5B6D     		ldr	r3, [r3, #84]
 5366 0046 43F02002 		orr	r2, r3, #32
 5367 004a FB68     		ldr	r3, [r7, #12]
 5368 004c 5A65     		str	r2, [r3, #84]
 5369              	.L270:
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5370              		.loc 1 2926 5
 5371 004e FB68     		ldr	r3, [r7, #12]
 5372 0050 1B68     		ldr	r3, [r3]
 5373 0052 5A68     		ldr	r2, [r3, #4]
 5374 0054 FB68     		ldr	r3, [r7, #12]
 5375 0056 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 146


 5376 0058 22F00302 		bic	r2, r2, #3
 5377 005c 5A60     		str	r2, [r3, #4]
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5378              		.loc 1 2928 23
 5379 005e FB68     		ldr	r3, [r7, #12]
 5380 0060 0022     		movs	r2, #0
 5381 0062 DA86     		strh	r2, [r3, #54]	@ movhi
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5382              		.loc 1 2929 23
 5383 0064 FB68     		ldr	r3, [r7, #12]
 5384 0066 0022     		movs	r2, #0
 5385 0068 DA87     		strh	r2, [r3, #62]	@ movhi
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5386              		.loc 1 2930 17
 5387 006a FB68     		ldr	r3, [r7, #12]
 5388 006c 0122     		movs	r2, #1
 5389 006e 83F85120 		strb	r2, [r3, #81]
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5390              		.loc 1 2951 13
 5391 0072 FB68     		ldr	r3, [r7, #12]
 5392 0074 5B6D     		ldr	r3, [r3, #84]
 5393              		.loc 1 2951 8
 5394 0076 002B     		cmp	r3, #0
 5395 0078 03D0     		beq	.L269
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5396              		.loc 1 2957 7
 5397 007a F868     		ldr	r0, [r7, #12]
 5398 007c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5399              		.loc 1 2959 7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 147


 5400 0080 02E0     		b	.L268
 5401              	.L269:
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
 5402              		.loc 1 2966 3
 5403 0082 F868     		ldr	r0, [r7, #12]
 5404 0084 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5405              	.L268:
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5406              		.loc 1 2968 1
 5407 0088 1037     		adds	r7, r7, #16
 5408              	.LCFI174:
 5409              		.cfi_def_cfa_offset 8
 5410 008a BD46     		mov	sp, r7
 5411              	.LCFI175:
 5412              		.cfi_def_cfa_register 13
 5413              		@ sp needed
 5414 008c 80BD     		pop	{r7, pc}
 5415              		.cfi_endproc
 5416              	.LFE96:
 5418              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 5419              		.align	1
 5420              		.syntax unified
 5421              		.thumb
 5422              		.thumb_func
 5424              	SPI_DMAHalfTransmitCplt:
 5425              	.LFB97:
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5426              		.loc 1 2977 1
 5427              		.cfi_startproc
 5428              		@ args = 0, pretend = 0, frame = 16
 5429              		@ frame_needed = 1, uses_anonymous_args = 0
 5430 0000 80B5     		push	{r7, lr}
 5431              	.LCFI176:
 5432              		.cfi_def_cfa_offset 8
 5433              		.cfi_offset 7, -8
 5434              		.cfi_offset 14, -4
 5435 0002 84B0     		sub	sp, sp, #16
 5436              	.LCFI177:
 5437              		.cfi_def_cfa_offset 24
 5438 0004 00AF     		add	r7, sp, #0
 5439              	.LCFI178:
 5440              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 148


 5441 0006 7860     		str	r0, [r7, #4]
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5442              		.loc 1 2978 22
 5443 0008 7B68     		ldr	r3, [r7, #4]
 5444 000a 5B6A     		ldr	r3, [r3, #36]
 5445 000c FB60     		str	r3, [r7, #12]
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 5446              		.loc 1 2984 3
 5447 000e F868     		ldr	r0, [r7, #12]
 5448 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5449              		.loc 1 2986 1
 5450 0014 00BF     		nop
 5451 0016 1037     		adds	r7, r7, #16
 5452              	.LCFI179:
 5453              		.cfi_def_cfa_offset 8
 5454 0018 BD46     		mov	sp, r7
 5455              	.LCFI180:
 5456              		.cfi_def_cfa_register 13
 5457              		@ sp needed
 5458 001a 80BD     		pop	{r7, pc}
 5459              		.cfi_endproc
 5460              	.LFE97:
 5462              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 5463              		.align	1
 5464              		.syntax unified
 5465              		.thumb
 5466              		.thumb_func
 5468              	SPI_DMAHalfReceiveCplt:
 5469              	.LFB98:
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5470              		.loc 1 2995 1
 5471              		.cfi_startproc
 5472              		@ args = 0, pretend = 0, frame = 16
 5473              		@ frame_needed = 1, uses_anonymous_args = 0
 5474 0000 80B5     		push	{r7, lr}
 5475              	.LCFI181:
 5476              		.cfi_def_cfa_offset 8
 5477              		.cfi_offset 7, -8
 5478              		.cfi_offset 14, -4
 5479 0002 84B0     		sub	sp, sp, #16
 5480              	.LCFI182:
 5481              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 149


 5482 0004 00AF     		add	r7, sp, #0
 5483              	.LCFI183:
 5484              		.cfi_def_cfa_register 7
 5485 0006 7860     		str	r0, [r7, #4]
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5486              		.loc 1 2996 22
 5487 0008 7B68     		ldr	r3, [r7, #4]
 5488 000a 5B6A     		ldr	r3, [r3, #36]
 5489 000c FB60     		str	r3, [r7, #12]
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 5490              		.loc 1 3002 3
 5491 000e F868     		ldr	r0, [r7, #12]
 5492 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5493              		.loc 1 3004 1
 5494 0014 00BF     		nop
 5495 0016 1037     		adds	r7, r7, #16
 5496              	.LCFI184:
 5497              		.cfi_def_cfa_offset 8
 5498 0018 BD46     		mov	sp, r7
 5499              	.LCFI185:
 5500              		.cfi_def_cfa_register 13
 5501              		@ sp needed
 5502 001a 80BD     		pop	{r7, pc}
 5503              		.cfi_endproc
 5504              	.LFE98:
 5506              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 5507              		.align	1
 5508              		.syntax unified
 5509              		.thumb
 5510              		.thumb_func
 5512              	SPI_DMAHalfTransmitReceiveCplt:
 5513              	.LFB99:
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5514              		.loc 1 3013 1
 5515              		.cfi_startproc
 5516              		@ args = 0, pretend = 0, frame = 16
 5517              		@ frame_needed = 1, uses_anonymous_args = 0
 5518 0000 80B5     		push	{r7, lr}
 5519              	.LCFI186:
 5520              		.cfi_def_cfa_offset 8
 5521              		.cfi_offset 7, -8
 5522              		.cfi_offset 14, -4
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 150


 5523 0002 84B0     		sub	sp, sp, #16
 5524              	.LCFI187:
 5525              		.cfi_def_cfa_offset 24
 5526 0004 00AF     		add	r7, sp, #0
 5527              	.LCFI188:
 5528              		.cfi_def_cfa_register 7
 5529 0006 7860     		str	r0, [r7, #4]
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5530              		.loc 1 3014 22
 5531 0008 7B68     		ldr	r3, [r7, #4]
 5532 000a 5B6A     		ldr	r3, [r3, #36]
 5533 000c FB60     		str	r3, [r7, #12]
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 5534              		.loc 1 3020 3
 5535 000e F868     		ldr	r0, [r7, #12]
 5536 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5537              		.loc 1 3022 1
 5538 0014 00BF     		nop
 5539 0016 1037     		adds	r7, r7, #16
 5540              	.LCFI189:
 5541              		.cfi_def_cfa_offset 8
 5542 0018 BD46     		mov	sp, r7
 5543              	.LCFI190:
 5544              		.cfi_def_cfa_register 13
 5545              		@ sp needed
 5546 001a 80BD     		pop	{r7, pc}
 5547              		.cfi_endproc
 5548              	.LFE99:
 5550              		.section	.text.SPI_DMAError,"ax",%progbits
 5551              		.align	1
 5552              		.syntax unified
 5553              		.thumb
 5554              		.thumb_func
 5556              	SPI_DMAError:
 5557              	.LFB100:
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5558              		.loc 1 3031 1
 5559              		.cfi_startproc
 5560              		@ args = 0, pretend = 0, frame = 16
 5561              		@ frame_needed = 1, uses_anonymous_args = 0
 5562 0000 80B5     		push	{r7, lr}
 5563              	.LCFI191:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 151


 5564              		.cfi_def_cfa_offset 8
 5565              		.cfi_offset 7, -8
 5566              		.cfi_offset 14, -4
 5567 0002 84B0     		sub	sp, sp, #16
 5568              	.LCFI192:
 5569              		.cfi_def_cfa_offset 24
 5570 0004 00AF     		add	r7, sp, #0
 5571              	.LCFI193:
 5572              		.cfi_def_cfa_register 7
 5573 0006 7860     		str	r0, [r7, #4]
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5574              		.loc 1 3032 22
 5575 0008 7B68     		ldr	r3, [r7, #4]
 5576 000a 5B6A     		ldr	r3, [r3, #36]
 5577 000c FB60     		str	r3, [r7, #12]
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5578              		.loc 1 3035 3
 5579 000e FB68     		ldr	r3, [r7, #12]
 5580 0010 1B68     		ldr	r3, [r3]
 5581 0012 5A68     		ldr	r2, [r3, #4]
 5582 0014 FB68     		ldr	r3, [r7, #12]
 5583 0016 1B68     		ldr	r3, [r3]
 5584 0018 22F00302 		bic	r2, r2, #3
 5585 001c 5A60     		str	r2, [r3, #4]
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5586              		.loc 1 3037 3
 5587 001e FB68     		ldr	r3, [r7, #12]
 5588 0020 5B6D     		ldr	r3, [r3, #84]
 5589 0022 43F01002 		orr	r2, r3, #16
 5590 0026 FB68     		ldr	r3, [r7, #12]
 5591 0028 5A65     		str	r2, [r3, #84]
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5592              		.loc 1 3038 15
 5593 002a FB68     		ldr	r3, [r7, #12]
 5594 002c 0122     		movs	r2, #1
 5595 002e 83F85120 		strb	r2, [r3, #81]
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5596              		.loc 1 3043 3
 5597 0032 F868     		ldr	r0, [r7, #12]
 5598 0034 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5599              		.loc 1 3045 1
 5600 0038 00BF     		nop
 5601 003a 1037     		adds	r7, r7, #16
 5602              	.LCFI194:
 5603              		.cfi_def_cfa_offset 8
 5604 003c BD46     		mov	sp, r7
 5605              	.LCFI195:
 5606              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 152


 5607              		@ sp needed
 5608 003e 80BD     		pop	{r7, pc}
 5609              		.cfi_endproc
 5610              	.LFE100:
 5612              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5613              		.align	1
 5614              		.syntax unified
 5615              		.thumb
 5616              		.thumb_func
 5618              	SPI_DMAAbortOnError:
 5619              	.LFB101:
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5620              		.loc 1 3054 1
 5621              		.cfi_startproc
 5622              		@ args = 0, pretend = 0, frame = 16
 5623              		@ frame_needed = 1, uses_anonymous_args = 0
 5624 0000 80B5     		push	{r7, lr}
 5625              	.LCFI196:
 5626              		.cfi_def_cfa_offset 8
 5627              		.cfi_offset 7, -8
 5628              		.cfi_offset 14, -4
 5629 0002 84B0     		sub	sp, sp, #16
 5630              	.LCFI197:
 5631              		.cfi_def_cfa_offset 24
 5632 0004 00AF     		add	r7, sp, #0
 5633              	.LCFI198:
 5634              		.cfi_def_cfa_register 7
 5635 0006 7860     		str	r0, [r7, #4]
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5636              		.loc 1 3055 22
 5637 0008 7B68     		ldr	r3, [r7, #4]
 5638 000a 5B6A     		ldr	r3, [r3, #36]
 5639 000c FB60     		str	r3, [r7, #12]
3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5640              		.loc 1 3056 21
 5641 000e FB68     		ldr	r3, [r7, #12]
 5642 0010 0022     		movs	r2, #0
 5643 0012 DA87     		strh	r2, [r3, #62]	@ movhi
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5644              		.loc 1 3057 21
 5645 0014 FB68     		ldr	r3, [r7, #12]
 5646 0016 0022     		movs	r2, #0
 5647 0018 DA86     		strh	r2, [r3, #54]	@ movhi
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 153


 5648              		.loc 1 3063 3
 5649 001a F868     		ldr	r0, [r7, #12]
 5650 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5651              		.loc 1 3065 1
 5652 0020 00BF     		nop
 5653 0022 1037     		adds	r7, r7, #16
 5654              	.LCFI199:
 5655              		.cfi_def_cfa_offset 8
 5656 0024 BD46     		mov	sp, r7
 5657              	.LCFI200:
 5658              		.cfi_def_cfa_register 13
 5659              		@ sp needed
 5660 0026 80BD     		pop	{r7, pc}
 5661              		.cfi_endproc
 5662              	.LFE101:
 5664              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5665              		.align	1
 5666              		.syntax unified
 5667              		.thumb
 5668              		.thumb_func
 5670              	SPI_DMATxAbortCallback:
 5671              	.LFB102:
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5672              		.loc 1 3076 1
 5673              		.cfi_startproc
 5674              		@ args = 0, pretend = 0, frame = 24
 5675              		@ frame_needed = 1, uses_anonymous_args = 0
 5676 0000 80B5     		push	{r7, lr}
 5677              	.LCFI201:
 5678              		.cfi_def_cfa_offset 8
 5679              		.cfi_offset 7, -8
 5680              		.cfi_offset 14, -4
 5681 0002 86B0     		sub	sp, sp, #24
 5682              	.LCFI202:
 5683              		.cfi_def_cfa_offset 32
 5684 0004 00AF     		add	r7, sp, #0
 5685              	.LCFI203:
 5686              		.cfi_def_cfa_register 7
 5687 0006 7860     		str	r0, [r7, #4]
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5688              		.loc 1 3077 22
 5689 0008 7B68     		ldr	r3, [r7, #4]
 5690 000a 5B6A     		ldr	r3, [r3, #36]
 5691 000c 7B61     		str	r3, [r7, #20]
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 154


3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 5692              		.loc 1 3080 7
 5693 000e 7B69     		ldr	r3, [r7, #20]
 5694 0010 9B6C     		ldr	r3, [r3, #72]
 5695              		.loc 1 3080 35
 5696 0012 0022     		movs	r2, #0
 5697 0014 5A63     		str	r2, [r3, #52]
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5698              		.loc 1 3081 56
 5699 0016 294B     		ldr	r3, .L285
 5700 0018 1B68     		ldr	r3, [r3]
 5701 001a 294A     		ldr	r2, .L285+4
 5702 001c A2FB0323 		umull	r2, r3, r2, r3
 5703 0020 5B0A     		lsrs	r3, r3, #9
 5704              		.loc 1 3081 31
 5705 0022 6422     		movs	r2, #100
 5706 0024 02FB03F3 		mul	r3, r2, r3
 5707              		.loc 1 3081 9
 5708 0028 3B61     		str	r3, [r7, #16]
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Tx DMA Request */
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5709              		.loc 1 3084 3
 5710 002a 7B69     		ldr	r3, [r7, #20]
 5711 002c 1B68     		ldr	r3, [r3]
 5712 002e 5A68     		ldr	r2, [r3, #4]
 5713 0030 7B69     		ldr	r3, [r7, #20]
 5714 0032 1B68     		ldr	r3, [r3]
 5715 0034 22F00202 		bic	r2, r2, #2
 5716 0038 5A60     		str	r2, [r3, #4]
 5717              	.L280:
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 5718              		.loc 1 3089 15
 5719 003a 3B69     		ldr	r3, [r7, #16]
 5720              		.loc 1 3089 8
 5721 003c 002B     		cmp	r3, #0
 5722 003e 06D1     		bne	.L278
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5723              		.loc 1 3091 7
 5724 0040 7B69     		ldr	r3, [r7, #20]
 5725 0042 5B6D     		ldr	r3, [r3, #84]
 5726 0044 43F04002 		orr	r2, r3, #64
 5727 0048 7B69     		ldr	r3, [r7, #20]
 5728 004a 5A65     		str	r2, [r3, #84]
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 5729              		.loc 1 3092 7
 5730 004c 09E0     		b	.L279
 5731              	.L278:
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 5732              		.loc 1 3094 10
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 155


 5733 004e 3B69     		ldr	r3, [r7, #16]
 5734 0050 013B     		subs	r3, r3, #1
 5735 0052 3B61     		str	r3, [r7, #16]
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5736              		.loc 1 3095 17
 5737 0054 7B69     		ldr	r3, [r7, #20]
 5738 0056 1B68     		ldr	r3, [r3]
 5739              		.loc 1 3095 27
 5740 0058 9B68     		ldr	r3, [r3, #8]
 5741              		.loc 1 3095 32
 5742 005a 03F00203 		and	r3, r3, #2
 5743              		.loc 1 3095 3
 5744 005e 002B     		cmp	r3, #0
 5745 0060 EBD0     		beq	.L280
 5746              	.L279:
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 5747              		.loc 1 3098 11
 5748 0062 7B69     		ldr	r3, [r7, #20]
 5749 0064 DB6C     		ldr	r3, [r3, #76]
 5750              		.loc 1 3098 6
 5751 0066 002B     		cmp	r3, #0
 5752 0068 04D0     		beq	.L281
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 5753              		.loc 1 3100 13
 5754 006a 7B69     		ldr	r3, [r7, #20]
 5755 006c DB6C     		ldr	r3, [r3, #76]
 5756              		.loc 1 3100 21
 5757 006e 5B6B     		ldr	r3, [r3, #52]
 5758              		.loc 1 3100 8
 5759 0070 002B     		cmp	r3, #0
 5760 0072 1FD1     		bne	.L284
 5761              	.L281:
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5762              		.loc 1 3107 21
 5763 0074 7B69     		ldr	r3, [r7, #20]
 5764 0076 0022     		movs	r2, #0
 5765 0078 DA87     		strh	r2, [r3, #62]	@ movhi
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5766              		.loc 1 3108 21
 5767 007a 7B69     		ldr	r3, [r7, #20]
 5768 007c 0022     		movs	r2, #0
 5769 007e DA86     		strh	r2, [r3, #54]	@ movhi
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5770              		.loc 1 3111 11
 5771 0080 7B69     		ldr	r3, [r7, #20]
 5772 0082 5B6D     		ldr	r3, [r3, #84]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 156


 5773              		.loc 1 3111 6
 5774 0084 402B     		cmp	r3, #64
 5775 0086 02D0     		beq	.L283
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5776              		.loc 1 3114 21
 5777 0088 7B69     		ldr	r3, [r7, #20]
 5778 008a 0022     		movs	r2, #0
 5779 008c 5A65     		str	r2, [r3, #84]
 5780              	.L283:
 5781              	.LBB10:
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5782              		.loc 1 3118 3
 5783 008e 0023     		movs	r3, #0
 5784 0090 FB60     		str	r3, [r7, #12]
 5785 0092 7B69     		ldr	r3, [r7, #20]
 5786 0094 1B68     		ldr	r3, [r3]
 5787 0096 DB68     		ldr	r3, [r3, #12]
 5788 0098 FB60     		str	r3, [r7, #12]
 5789 009a 7B69     		ldr	r3, [r7, #20]
 5790 009c 1B68     		ldr	r3, [r3]
 5791 009e 9B68     		ldr	r3, [r3, #8]
 5792 00a0 FB60     		str	r3, [r7, #12]
 5793 00a2 FB68     		ldr	r3, [r7, #12]
 5794              	.LBE10:
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5795              		.loc 1 3121 16
 5796 00a4 7B69     		ldr	r3, [r7, #20]
 5797 00a6 0122     		movs	r2, #1
 5798 00a8 83F85120 		strb	r2, [r3, #81]
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5799              		.loc 1 3127 3
 5800 00ac 7869     		ldr	r0, [r7, #20]
 5801 00ae FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5802 00b2 00E0     		b	.L277
 5803              	.L284:
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5804              		.loc 1 3102 7
 5805 00b4 00BF     		nop
 5806              	.L277:
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5807              		.loc 1 3129 1
 5808 00b6 1837     		adds	r7, r7, #24
 5809              	.LCFI204:
 5810              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 157


 5811 00b8 BD46     		mov	sp, r7
 5812              	.LCFI205:
 5813              		.cfi_def_cfa_register 13
 5814              		@ sp needed
 5815 00ba 80BD     		pop	{r7, pc}
 5816              	.L286:
 5817              		.align	2
 5818              	.L285:
 5819 00bc 00000000 		.word	SystemCoreClock
 5820 00c0 F1197605 		.word	91625969
 5821              		.cfi_endproc
 5822              	.LFE102:
 5824              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5825              		.align	1
 5826              		.syntax unified
 5827              		.thumb
 5828              		.thumb_func
 5830              	SPI_DMARxAbortCallback:
 5831              	.LFB103:
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5832              		.loc 1 3140 1
 5833              		.cfi_startproc
 5834              		@ args = 0, pretend = 0, frame = 16
 5835              		@ frame_needed = 1, uses_anonymous_args = 0
 5836 0000 80B5     		push	{r7, lr}
 5837              	.LCFI206:
 5838              		.cfi_def_cfa_offset 8
 5839              		.cfi_offset 7, -8
 5840              		.cfi_offset 14, -4
 5841 0002 84B0     		sub	sp, sp, #16
 5842              	.LCFI207:
 5843              		.cfi_def_cfa_offset 24
 5844 0004 00AF     		add	r7, sp, #0
 5845              	.LCFI208:
 5846              		.cfi_def_cfa_register 7
 5847 0006 7860     		str	r0, [r7, #4]
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5848              		.loc 1 3141 22
 5849 0008 7B68     		ldr	r3, [r7, #4]
 5850 000a 5B6A     		ldr	r3, [r3, #36]
 5851 000c FB60     		str	r3, [r7, #12]
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5852              		.loc 1 3144 3
 5853 000e FB68     		ldr	r3, [r7, #12]
 5854 0010 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 158


 5855 0012 1A68     		ldr	r2, [r3]
 5856 0014 FB68     		ldr	r3, [r7, #12]
 5857 0016 1B68     		ldr	r3, [r3]
 5858 0018 22F04002 		bic	r2, r2, #64
 5859 001c 1A60     		str	r2, [r3]
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 5860              		.loc 1 3146 7
 5861 001e FB68     		ldr	r3, [r7, #12]
 5862 0020 DB6C     		ldr	r3, [r3, #76]
 5863              		.loc 1 3146 35
 5864 0022 0022     		movs	r2, #0
 5865 0024 5A63     		str	r2, [r3, #52]
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5866              		.loc 1 3149 3
 5867 0026 FB68     		ldr	r3, [r7, #12]
 5868 0028 1B68     		ldr	r3, [r3]
 5869 002a 5A68     		ldr	r2, [r3, #4]
 5870 002c FB68     		ldr	r3, [r7, #12]
 5871 002e 1B68     		ldr	r3, [r3]
 5872 0030 22F00102 		bic	r2, r2, #1
 5873 0034 5A60     		str	r2, [r3, #4]
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 5874              		.loc 1 3152 7
 5875 0036 FFF7FEFF 		bl	HAL_GetTick
 5876 003a 0346     		mov	r3, r0
 5877 003c 1A46     		mov	r2, r3
 5878 003e 6421     		movs	r1, #100
 5879 0040 F868     		ldr	r0, [r7, #12]
 5880 0042 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5881 0046 0346     		mov	r3, r0
 5882              		.loc 1 3152 6
 5883 0048 002B     		cmp	r3, #0
 5884 004a 05D0     		beq	.L288
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5885              		.loc 1 3154 5
 5886 004c FB68     		ldr	r3, [r7, #12]
 5887 004e 5B6D     		ldr	r3, [r3, #84]
 5888 0050 43F04002 		orr	r2, r3, #64
 5889 0054 FB68     		ldr	r3, [r7, #12]
 5890 0056 5A65     		str	r2, [r3, #84]
 5891              	.L288:
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 5892              		.loc 1 3158 11
 5893 0058 FB68     		ldr	r3, [r7, #12]
 5894 005a 9B6C     		ldr	r3, [r3, #72]
 5895              		.loc 1 3158 6
 5896 005c 002B     		cmp	r3, #0
 5897 005e 04D0     		beq	.L289
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 159


3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 5898              		.loc 1 3160 13
 5899 0060 FB68     		ldr	r3, [r7, #12]
 5900 0062 9B6C     		ldr	r3, [r3, #72]
 5901              		.loc 1 3160 21
 5902 0064 5B6B     		ldr	r3, [r3, #52]
 5903              		.loc 1 3160 8
 5904 0066 002B     		cmp	r3, #0
 5905 0068 1FD1     		bne	.L292
 5906              	.L289:
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5907              		.loc 1 3167 21
 5908 006a FB68     		ldr	r3, [r7, #12]
 5909 006c 0022     		movs	r2, #0
 5910 006e DA87     		strh	r2, [r3, #62]	@ movhi
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5911              		.loc 1 3168 21
 5912 0070 FB68     		ldr	r3, [r7, #12]
 5913 0072 0022     		movs	r2, #0
 5914 0074 DA86     		strh	r2, [r3, #54]	@ movhi
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5915              		.loc 1 3171 11
 5916 0076 FB68     		ldr	r3, [r7, #12]
 5917 0078 5B6D     		ldr	r3, [r3, #84]
 5918              		.loc 1 3171 6
 5919 007a 402B     		cmp	r3, #64
 5920 007c 02D0     		beq	.L291
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5921              		.loc 1 3174 21
 5922 007e FB68     		ldr	r3, [r7, #12]
 5923 0080 0022     		movs	r2, #0
 5924 0082 5A65     		str	r2, [r3, #84]
 5925              	.L291:
 5926              	.LBB11:
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5927              		.loc 1 3178 3
 5928 0084 0023     		movs	r3, #0
 5929 0086 BB60     		str	r3, [r7, #8]
 5930 0088 FB68     		ldr	r3, [r7, #12]
 5931 008a 1B68     		ldr	r3, [r3]
 5932 008c DB68     		ldr	r3, [r3, #12]
 5933 008e BB60     		str	r3, [r7, #8]
 5934 0090 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 160


 5935 0092 1B68     		ldr	r3, [r3]
 5936 0094 9B68     		ldr	r3, [r3, #8]
 5937 0096 BB60     		str	r3, [r7, #8]
 5938 0098 BB68     		ldr	r3, [r7, #8]
 5939              	.LBE11:
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5940              		.loc 1 3181 16
 5941 009a FB68     		ldr	r3, [r7, #12]
 5942 009c 0122     		movs	r2, #1
 5943 009e 83F85120 		strb	r2, [r3, #81]
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5944              		.loc 1 3187 3
 5945 00a2 F868     		ldr	r0, [r7, #12]
 5946 00a4 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5947 00a8 00E0     		b	.L287
 5948              	.L292:
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5949              		.loc 1 3162 7
 5950 00aa 00BF     		nop
 5951              	.L287:
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5952              		.loc 1 3189 1
 5953 00ac 1037     		adds	r7, r7, #16
 5954              	.LCFI209:
 5955              		.cfi_def_cfa_offset 8
 5956 00ae BD46     		mov	sp, r7
 5957              	.LCFI210:
 5958              		.cfi_def_cfa_register 13
 5959              		@ sp needed
 5960 00b0 80BD     		pop	{r7, pc}
 5961              		.cfi_endproc
 5962              	.LFE103:
 5964              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5965              		.align	1
 5966              		.syntax unified
 5967              		.thumb
 5968              		.thumb_func
 5970              	SPI_2linesRxISR_8BIT:
 5971              	.LFB104:
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5972              		.loc 1 3198 1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 161


 5973              		.cfi_startproc
 5974              		@ args = 0, pretend = 0, frame = 8
 5975              		@ frame_needed = 1, uses_anonymous_args = 0
 5976 0000 80B5     		push	{r7, lr}
 5977              	.LCFI211:
 5978              		.cfi_def_cfa_offset 8
 5979              		.cfi_offset 7, -8
 5980              		.cfi_offset 14, -4
 5981 0002 82B0     		sub	sp, sp, #8
 5982              	.LCFI212:
 5983              		.cfi_def_cfa_offset 16
 5984 0004 00AF     		add	r7, sp, #0
 5985              	.LCFI213:
 5986              		.cfi_def_cfa_register 7
 5987 0006 7860     		str	r0, [r7, #4]
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
 5988              		.loc 1 3200 46
 5989 0008 7B68     		ldr	r3, [r7, #4]
 5990 000a 1B68     		ldr	r3, [r3]
 5991              		.loc 1 3200 41
 5992 000c 03F10C02 		add	r2, r3, #12
 5993              		.loc 1 3200 8
 5994 0010 7B68     		ldr	r3, [r7, #4]
 5995 0012 9B6B     		ldr	r3, [r3, #56]
 5996              		.loc 1 3200 23
 5997 0014 1278     		ldrb	r2, [r2]
 5998 0016 D2B2     		uxtb	r2, r2
 5999              		.loc 1 3200 21
 6000 0018 1A70     		strb	r2, [r3]
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 6001              		.loc 1 3201 7
 6002 001a 7B68     		ldr	r3, [r7, #4]
 6003 001c 9B6B     		ldr	r3, [r3, #56]
 6004              		.loc 1 3201 19
 6005 001e 5A1C     		adds	r2, r3, #1
 6006 0020 7B68     		ldr	r3, [r7, #4]
 6007 0022 9A63     		str	r2, [r3, #56]
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6008              		.loc 1 3202 7
 6009 0024 7B68     		ldr	r3, [r7, #4]
 6010 0026 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6011 0028 9BB2     		uxth	r3, r3
 6012              		.loc 1 3202 20
 6013 002a 013B     		subs	r3, r3, #1
 6014 002c 9AB2     		uxth	r2, r3
 6015 002e 7B68     		ldr	r3, [r7, #4]
 6016 0030 DA87     		strh	r2, [r3, #62]	@ movhi
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check end of the reception */
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6017              		.loc 1 3205 11
 6018 0032 7B68     		ldr	r3, [r7, #4]
 6019 0034 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6020 0036 9BB2     		uxth	r3, r3
 6021              		.loc 1 3205 6
 6022 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 162


 6023 003a 0FD1     		bne	.L295
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 6024              		.loc 1 3216 5
 6025 003c 7B68     		ldr	r3, [r7, #4]
 6026 003e 1B68     		ldr	r3, [r3]
 6027 0040 5A68     		ldr	r2, [r3, #4]
 6028 0042 7B68     		ldr	r3, [r7, #4]
 6029 0044 1B68     		ldr	r3, [r3]
 6030 0046 22F06002 		bic	r2, r2, #96
 6031 004a 5A60     		str	r2, [r3, #4]
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6032              		.loc 1 3218 13
 6033 004c 7B68     		ldr	r3, [r7, #4]
 6034 004e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6035 0050 9BB2     		uxth	r3, r3
 6036              		.loc 1 3218 8
 6037 0052 002B     		cmp	r3, #0
 6038 0054 02D1     		bne	.L295
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6039              		.loc 1 3220 7
 6040 0056 7868     		ldr	r0, [r7, #4]
 6041 0058 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6042              	.L295:
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6043              		.loc 1 3223 1
 6044 005c 00BF     		nop
 6045 005e 0837     		adds	r7, r7, #8
 6046              	.LCFI214:
 6047              		.cfi_def_cfa_offset 8
 6048 0060 BD46     		mov	sp, r7
 6049              	.LCFI215:
 6050              		.cfi_def_cfa_register 13
 6051              		@ sp needed
 6052 0062 80BD     		pop	{r7, pc}
 6053              		.cfi_endproc
 6054              	.LFE104:
 6056              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 6057              		.align	1
 6058              		.syntax unified
 6059              		.thumb
 6060              		.thumb_func
 6062              	SPI_2linesTxISR_8BIT:
 6063              	.LFB105:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 163


3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  *ptmpreg8;
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg8);
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6064              		.loc 1 3261 1
 6065              		.cfi_startproc
 6066              		@ args = 0, pretend = 0, frame = 8
 6067              		@ frame_needed = 1, uses_anonymous_args = 0
 6068 0000 80B5     		push	{r7, lr}
 6069              	.LCFI216:
 6070              		.cfi_def_cfa_offset 8
 6071              		.cfi_offset 7, -8
 6072              		.cfi_offset 14, -4
 6073 0002 82B0     		sub	sp, sp, #8
 6074              	.LCFI217:
 6075              		.cfi_def_cfa_offset 16
 6076 0004 00AF     		add	r7, sp, #0
 6077              	.LCFI218:
 6078              		.cfi_def_cfa_register 7
 6079 0006 7860     		str	r0, [r7, #4]
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 6080              		.loc 1 3262 48
 6081 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 164


 6082 000a 1A6B     		ldr	r2, [r3, #48]
 6083              		.loc 1 3262 25
 6084 000c 7B68     		ldr	r3, [r7, #4]
 6085 000e 1B68     		ldr	r3, [r3]
 6086              		.loc 1 3262 20
 6087 0010 0C33     		adds	r3, r3, #12
 6088              		.loc 1 3262 43
 6089 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6090              		.loc 1 3262 40
 6091 0014 1A70     		strb	r2, [r3]
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 6092              		.loc 1 3263 7
 6093 0016 7B68     		ldr	r3, [r7, #4]
 6094 0018 1B6B     		ldr	r3, [r3, #48]
 6095              		.loc 1 3263 19
 6096 001a 5A1C     		adds	r2, r3, #1
 6097 001c 7B68     		ldr	r3, [r7, #4]
 6098 001e 1A63     		str	r2, [r3, #48]
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6099              		.loc 1 3264 7
 6100 0020 7B68     		ldr	r3, [r7, #4]
 6101 0022 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6102 0024 9BB2     		uxth	r3, r3
 6103              		.loc 1 3264 20
 6104 0026 013B     		subs	r3, r3, #1
 6105 0028 9AB2     		uxth	r2, r3
 6106 002a 7B68     		ldr	r3, [r7, #4]
 6107 002c DA86     		strh	r2, [r3, #54]	@ movhi
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transmission */
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6108              		.loc 1 3267 11
 6109 002e 7B68     		ldr	r3, [r7, #4]
 6110 0030 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6111 0032 9BB2     		uxth	r3, r3
 6112              		.loc 1 3267 6
 6113 0034 002B     		cmp	r3, #0
 6114 0036 0FD1     		bne	.L298
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6115              		.loc 1 3281 5
 6116 0038 7B68     		ldr	r3, [r7, #4]
 6117 003a 1B68     		ldr	r3, [r3]
 6118 003c 5A68     		ldr	r2, [r3, #4]
 6119 003e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 165


 6120 0040 1B68     		ldr	r3, [r3]
 6121 0042 22F08002 		bic	r2, r2, #128
 6122 0046 5A60     		str	r2, [r3, #4]
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6123              		.loc 1 3283 13
 6124 0048 7B68     		ldr	r3, [r7, #4]
 6125 004a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6126 004c 9BB2     		uxth	r3, r3
 6127              		.loc 1 3283 8
 6128 004e 002B     		cmp	r3, #0
 6129 0050 02D1     		bne	.L298
3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6130              		.loc 1 3285 7
 6131 0052 7868     		ldr	r0, [r7, #4]
 6132 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6133              	.L298:
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6134              		.loc 1 3288 1
 6135 0058 00BF     		nop
 6136 005a 0837     		adds	r7, r7, #8
 6137              	.LCFI219:
 6138              		.cfi_def_cfa_offset 8
 6139 005c BD46     		mov	sp, r7
 6140              	.LCFI220:
 6141              		.cfi_def_cfa_register 13
 6142              		@ sp needed
 6143 005e 80BD     		pop	{r7, pc}
 6144              		.cfi_endproc
 6145              	.LFE105:
 6147              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 6148              		.align	1
 6149              		.syntax unified
 6150              		.thumb
 6151              		.thumb_func
 6153              	SPI_2linesRxISR_16BIT:
 6154              	.LFB106:
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6155              		.loc 1 3297 1
 6156              		.cfi_startproc
 6157              		@ args = 0, pretend = 0, frame = 8
 6158              		@ frame_needed = 1, uses_anonymous_args = 0
 6159 0000 80B5     		push	{r7, lr}
 6160              	.LCFI221:
 6161              		.cfi_def_cfa_offset 8
 6162              		.cfi_offset 7, -8
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 166


 6163              		.cfi_offset 14, -4
 6164 0002 82B0     		sub	sp, sp, #8
 6165              	.LCFI222:
 6166              		.cfi_def_cfa_offset 16
 6167 0004 00AF     		add	r7, sp, #0
 6168              	.LCFI223:
 6169              		.cfi_def_cfa_register 7
 6170 0006 7860     		str	r0, [r7, #4]
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6171              		.loc 1 3299 52
 6172 0008 7B68     		ldr	r3, [r7, #4]
 6173 000a 1B68     		ldr	r3, [r3]
 6174              		.loc 1 3299 62
 6175 000c DA68     		ldr	r2, [r3, #12]
 6176              		.loc 1 3299 21
 6177 000e 7B68     		ldr	r3, [r7, #4]
 6178 0010 9B6B     		ldr	r3, [r3, #56]
 6179              		.loc 1 3299 37
 6180 0012 92B2     		uxth	r2, r2
 6181              		.loc 1 3299 35
 6182 0014 1A80     		strh	r2, [r3]	@ movhi
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6183              		.loc 1 3300 20
 6184 0016 7B68     		ldr	r3, [r7, #4]
 6185 0018 9B6B     		ldr	r3, [r3, #56]
 6186 001a 9A1C     		adds	r2, r3, #2
 6187 001c 7B68     		ldr	r3, [r7, #4]
 6188 001e 9A63     		str	r2, [r3, #56]
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6189              		.loc 1 3301 7
 6190 0020 7B68     		ldr	r3, [r7, #4]
 6191 0022 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6192 0024 9BB2     		uxth	r3, r3
 6193              		.loc 1 3301 20
 6194 0026 013B     		subs	r3, r3, #1
 6195 0028 9AB2     		uxth	r2, r3
 6196 002a 7B68     		ldr	r3, [r7, #4]
 6197 002c DA87     		strh	r2, [r3, #62]	@ movhi
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6198              		.loc 1 3303 11
 6199 002e 7B68     		ldr	r3, [r7, #4]
 6200 0030 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6201 0032 9BB2     		uxth	r3, r3
 6202              		.loc 1 3303 6
 6203 0034 002B     		cmp	r3, #0
 6204 0036 0FD1     		bne	.L301
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 167


3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
 6205              		.loc 1 3314 5
 6206 0038 7B68     		ldr	r3, [r7, #4]
 6207 003a 1B68     		ldr	r3, [r3]
 6208 003c 5A68     		ldr	r2, [r3, #4]
 6209 003e 7B68     		ldr	r3, [r7, #4]
 6210 0040 1B68     		ldr	r3, [r3]
 6211 0042 22F04002 		bic	r2, r2, #64
 6212 0046 5A60     		str	r2, [r3, #4]
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6213              		.loc 1 3316 13
 6214 0048 7B68     		ldr	r3, [r7, #4]
 6215 004a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6216 004c 9BB2     		uxth	r3, r3
 6217              		.loc 1 3316 8
 6218 004e 002B     		cmp	r3, #0
 6219 0050 02D1     		bne	.L301
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6220              		.loc 1 3318 7
 6221 0052 7868     		ldr	r0, [r7, #4]
 6222 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6223              	.L301:
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6224              		.loc 1 3321 1
 6225 0058 00BF     		nop
 6226 005a 0837     		adds	r7, r7, #8
 6227              	.LCFI224:
 6228              		.cfi_def_cfa_offset 8
 6229 005c BD46     		mov	sp, r7
 6230              	.LCFI225:
 6231              		.cfi_def_cfa_register 13
 6232              		@ sp needed
 6233 005e 80BD     		pop	{r7, pc}
 6234              		.cfi_endproc
 6235              	.LFE106:
 6237              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 6238              		.align	1
 6239              		.syntax unified
 6240              		.thumb
 6241              		.thumb_func
 6243              	SPI_2linesTxISR_16BIT:
 6244              	.LFB107:
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 168


3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6245              		.loc 1 3353 1
 6246              		.cfi_startproc
 6247              		@ args = 0, pretend = 0, frame = 8
 6248              		@ frame_needed = 1, uses_anonymous_args = 0
 6249 0000 80B5     		push	{r7, lr}
 6250              	.LCFI226:
 6251              		.cfi_def_cfa_offset 8
 6252              		.cfi_offset 7, -8
 6253              		.cfi_offset 14, -4
 6254 0002 82B0     		sub	sp, sp, #8
 6255              	.LCFI227:
 6256              		.cfi_def_cfa_offset 16
 6257 0004 00AF     		add	r7, sp, #0
 6258              	.LCFI228:
 6259              		.cfi_def_cfa_register 7
 6260 0006 7860     		str	r0, [r7, #4]
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6261              		.loc 1 3355 42
 6262 0008 7B68     		ldr	r3, [r7, #4]
 6263 000a 1B6B     		ldr	r3, [r3, #48]
 6264              		.loc 1 3355 24
 6265 000c 1A88     		ldrh	r2, [r3]
 6266              		.loc 1 3355 7
 6267 000e 7B68     		ldr	r3, [r7, #4]
 6268 0010 1B68     		ldr	r3, [r3]
 6269              		.loc 1 3355 22
 6270 0012 DA60     		str	r2, [r3, #12]
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6271              		.loc 1 3356 20
 6272 0014 7B68     		ldr	r3, [r7, #4]
 6273 0016 1B6B     		ldr	r3, [r3, #48]
 6274 0018 9A1C     		adds	r2, r3, #2
 6275 001a 7B68     		ldr	r3, [r7, #4]
 6276 001c 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 169


3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6277              		.loc 1 3357 7
 6278 001e 7B68     		ldr	r3, [r7, #4]
 6279 0020 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6280 0022 9BB2     		uxth	r3, r3
 6281              		.loc 1 3357 20
 6282 0024 013B     		subs	r3, r3, #1
 6283 0026 9AB2     		uxth	r2, r3
 6284 0028 7B68     		ldr	r3, [r7, #4]
 6285 002a DA86     		strh	r2, [r3, #54]	@ movhi
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6286              		.loc 1 3360 11
 6287 002c 7B68     		ldr	r3, [r7, #4]
 6288 002e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6289 0030 9BB2     		uxth	r3, r3
 6290              		.loc 1 3360 6
 6291 0032 002B     		cmp	r3, #0
 6292 0034 0FD1     		bne	.L304
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6293              		.loc 1 3374 5
 6294 0036 7B68     		ldr	r3, [r7, #4]
 6295 0038 1B68     		ldr	r3, [r3]
 6296 003a 5A68     		ldr	r2, [r3, #4]
 6297 003c 7B68     		ldr	r3, [r7, #4]
 6298 003e 1B68     		ldr	r3, [r3]
 6299 0040 22F08002 		bic	r2, r2, #128
 6300 0044 5A60     		str	r2, [r3, #4]
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6301              		.loc 1 3376 13
 6302 0046 7B68     		ldr	r3, [r7, #4]
 6303 0048 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6304 004a 9BB2     		uxth	r3, r3
 6305              		.loc 1 3376 8
 6306 004c 002B     		cmp	r3, #0
 6307 004e 02D1     		bne	.L304
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6308              		.loc 1 3378 7
 6309 0050 7868     		ldr	r0, [r7, #4]
 6310 0052 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6311              	.L304:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 170


3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6312              		.loc 1 3381 1
 6313 0056 00BF     		nop
 6314 0058 0837     		adds	r7, r7, #8
 6315              	.LCFI229:
 6316              		.cfi_def_cfa_offset 8
 6317 005a BD46     		mov	sp, r7
 6318              	.LCFI230:
 6319              		.cfi_def_cfa_register 13
 6320              		@ sp needed
 6321 005c 80BD     		pop	{r7, pc}
 6322              		.cfi_endproc
 6323              	.LFE107:
 6325              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 6326              		.align	1
 6327              		.syntax unified
 6328              		.thumb
 6329              		.thumb_func
 6331              	SPI_RxISR_8BIT:
 6332              	.LFB108:
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  *ptmpreg8;
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg8);
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6333              		.loc 1 3413 1
 6334              		.cfi_startproc
 6335              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 171


 6336              		@ frame_needed = 1, uses_anonymous_args = 0
 6337 0000 80B5     		push	{r7, lr}
 6338              	.LCFI231:
 6339              		.cfi_def_cfa_offset 8
 6340              		.cfi_offset 7, -8
 6341              		.cfi_offset 14, -4
 6342 0002 82B0     		sub	sp, sp, #8
 6343              	.LCFI232:
 6344              		.cfi_def_cfa_offset 16
 6345 0004 00AF     		add	r7, sp, #0
 6346              	.LCFI233:
 6347              		.cfi_def_cfa_register 7
 6348 0006 7860     		str	r0, [r7, #4]
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 6349              		.loc 1 3414 46
 6350 0008 7B68     		ldr	r3, [r7, #4]
 6351 000a 1B68     		ldr	r3, [r3]
 6352              		.loc 1 3414 41
 6353 000c 03F10C02 		add	r2, r3, #12
 6354              		.loc 1 3414 8
 6355 0010 7B68     		ldr	r3, [r7, #4]
 6356 0012 9B6B     		ldr	r3, [r3, #56]
 6357              		.loc 1 3414 24
 6358 0014 1278     		ldrb	r2, [r2]
 6359 0016 D2B2     		uxtb	r2, r2
 6360              		.loc 1 3414 21
 6361 0018 1A70     		strb	r2, [r3]
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 6362              		.loc 1 3415 7
 6363 001a 7B68     		ldr	r3, [r7, #4]
 6364 001c 9B6B     		ldr	r3, [r3, #56]
 6365              		.loc 1 3415 19
 6366 001e 5A1C     		adds	r2, r3, #1
 6367 0020 7B68     		ldr	r3, [r7, #4]
 6368 0022 9A63     		str	r2, [r3, #56]
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6369              		.loc 1 3416 7
 6370 0024 7B68     		ldr	r3, [r7, #4]
 6371 0026 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6372 0028 9BB2     		uxth	r3, r3
 6373              		.loc 1 3416 20
 6374 002a 013B     		subs	r3, r3, #1
 6375 002c 9AB2     		uxth	r2, r3
 6376 002e 7B68     		ldr	r3, [r7, #4]
 6377 0030 DA87     		strh	r2, [r3, #62]	@ movhi
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reset by hardware */
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 172


3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6378              		.loc 1 3433 11
 6379 0032 7B68     		ldr	r3, [r7, #4]
 6380 0034 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6381 0036 9BB2     		uxth	r3, r3
 6382              		.loc 1 3433 6
 6383 0038 002B     		cmp	r3, #0
 6384 003a 02D1     		bne	.L307
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6385              		.loc 1 3442 5
 6386 003c 7868     		ldr	r0, [r7, #4]
 6387 003e FFF7FEFF 		bl	SPI_CloseRx_ISR
 6388              	.L307:
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6389              		.loc 1 3444 1
 6390 0042 00BF     		nop
 6391 0044 0837     		adds	r7, r7, #8
 6392              	.LCFI234:
 6393              		.cfi_def_cfa_offset 8
 6394 0046 BD46     		mov	sp, r7
 6395              	.LCFI235:
 6396              		.cfi_def_cfa_register 13
 6397              		@ sp needed
 6398 0048 80BD     		pop	{r7, pc}
 6399              		.cfi_endproc
 6400              	.LFE108:
 6402              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 6403              		.align	1
 6404              		.syntax unified
 6405              		.thumb
 6406              		.thumb_func
 6408              	SPI_RxISR_16BIT:
 6409              	.LFB109:
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 173


3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6410              		.loc 1 3476 1
 6411              		.cfi_startproc
 6412              		@ args = 0, pretend = 0, frame = 8
 6413              		@ frame_needed = 1, uses_anonymous_args = 0
 6414 0000 80B5     		push	{r7, lr}
 6415              	.LCFI236:
 6416              		.cfi_def_cfa_offset 8
 6417              		.cfi_offset 7, -8
 6418              		.cfi_offset 14, -4
 6419 0002 82B0     		sub	sp, sp, #8
 6420              	.LCFI237:
 6421              		.cfi_def_cfa_offset 16
 6422 0004 00AF     		add	r7, sp, #0
 6423              	.LCFI238:
 6424              		.cfi_def_cfa_register 7
 6425 0006 7860     		str	r0, [r7, #4]
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6426              		.loc 1 3477 52
 6427 0008 7B68     		ldr	r3, [r7, #4]
 6428 000a 1B68     		ldr	r3, [r3]
 6429              		.loc 1 3477 62
 6430 000c DA68     		ldr	r2, [r3, #12]
 6431              		.loc 1 3477 21
 6432 000e 7B68     		ldr	r3, [r7, #4]
 6433 0010 9B6B     		ldr	r3, [r3, #56]
 6434              		.loc 1 3477 37
 6435 0012 92B2     		uxth	r2, r2
 6436              		.loc 1 3477 35
 6437 0014 1A80     		strh	r2, [r3]	@ movhi
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6438              		.loc 1 3478 20
 6439 0016 7B68     		ldr	r3, [r7, #4]
 6440 0018 9B6B     		ldr	r3, [r3, #56]
 6441 001a 9A1C     		adds	r2, r3, #2
 6442 001c 7B68     		ldr	r3, [r7, #4]
 6443 001e 9A63     		str	r2, [r3, #56]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 174


3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6444              		.loc 1 3479 7
 6445 0020 7B68     		ldr	r3, [r7, #4]
 6446 0022 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6447 0024 9BB2     		uxth	r3, r3
 6448              		.loc 1 3479 20
 6449 0026 013B     		subs	r3, r3, #1
 6450 0028 9AB2     		uxth	r2, r3
 6451 002a 7B68     		ldr	r3, [r7, #4]
 6452 002c DA87     		strh	r2, [r3, #62]	@ movhi
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reset by hardware */
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6453              		.loc 1 3496 11
 6454 002e 7B68     		ldr	r3, [r7, #4]
 6455 0030 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6456 0032 9BB2     		uxth	r3, r3
 6457              		.loc 1 3496 6
 6458 0034 002B     		cmp	r3, #0
 6459 0036 02D1     		bne	.L310
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6460              		.loc 1 3505 5
 6461 0038 7868     		ldr	r0, [r7, #4]
 6462 003a FFF7FEFF 		bl	SPI_CloseRx_ISR
 6463              	.L310:
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6464              		.loc 1 3507 1
 6465 003e 00BF     		nop
 6466 0040 0837     		adds	r7, r7, #8
 6467              	.LCFI239:
 6468              		.cfi_def_cfa_offset 8
 6469 0042 BD46     		mov	sp, r7
 6470              	.LCFI240:
 6471              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 175


 6472              		@ sp needed
 6473 0044 80BD     		pop	{r7, pc}
 6474              		.cfi_endproc
 6475              	.LFE109:
 6477              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 6478              		.align	1
 6479              		.syntax unified
 6480              		.thumb
 6481              		.thumb_func
 6483              	SPI_TxISR_8BIT:
 6484              	.LFB110:
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6485              		.loc 1 3516 1
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 8
 6488              		@ frame_needed = 1, uses_anonymous_args = 0
 6489 0000 80B5     		push	{r7, lr}
 6490              	.LCFI241:
 6491              		.cfi_def_cfa_offset 8
 6492              		.cfi_offset 7, -8
 6493              		.cfi_offset 14, -4
 6494 0002 82B0     		sub	sp, sp, #8
 6495              	.LCFI242:
 6496              		.cfi_def_cfa_offset 16
 6497 0004 00AF     		add	r7, sp, #0
 6498              	.LCFI243:
 6499              		.cfi_def_cfa_register 7
 6500 0006 7860     		str	r0, [r7, #4]
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 6501              		.loc 1 3517 48
 6502 0008 7B68     		ldr	r3, [r7, #4]
 6503 000a 1A6B     		ldr	r2, [r3, #48]
 6504              		.loc 1 3517 25
 6505 000c 7B68     		ldr	r3, [r7, #4]
 6506 000e 1B68     		ldr	r3, [r3]
 6507              		.loc 1 3517 20
 6508 0010 0C33     		adds	r3, r3, #12
 6509              		.loc 1 3517 43
 6510 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6511              		.loc 1 3517 40
 6512 0014 1A70     		strb	r2, [r3]
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 6513              		.loc 1 3518 7
 6514 0016 7B68     		ldr	r3, [r7, #4]
 6515 0018 1B6B     		ldr	r3, [r3, #48]
 6516              		.loc 1 3518 19
 6517 001a 5A1C     		adds	r2, r3, #1
 6518 001c 7B68     		ldr	r3, [r7, #4]
 6519 001e 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 176


3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6520              		.loc 1 3519 7
 6521 0020 7B68     		ldr	r3, [r7, #4]
 6522 0022 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6523 0024 9BB2     		uxth	r3, r3
 6524              		.loc 1 3519 20
 6525 0026 013B     		subs	r3, r3, #1
 6526 0028 9AB2     		uxth	r2, r3
 6527 002a 7B68     		ldr	r3, [r7, #4]
 6528 002c DA86     		strh	r2, [r3, #54]	@ movhi
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6529              		.loc 1 3521 11
 6530 002e 7B68     		ldr	r3, [r7, #4]
 6531 0030 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6532 0032 9BB2     		uxth	r3, r3
 6533              		.loc 1 3521 6
 6534 0034 002B     		cmp	r3, #0
 6535 0036 02D1     		bne	.L313
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6536              		.loc 1 3530 5
 6537 0038 7868     		ldr	r0, [r7, #4]
 6538 003a FFF7FEFF 		bl	SPI_CloseTx_ISR
 6539              	.L313:
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6540              		.loc 1 3532 1
 6541 003e 00BF     		nop
 6542 0040 0837     		adds	r7, r7, #8
 6543              	.LCFI244:
 6544              		.cfi_def_cfa_offset 8
 6545 0042 BD46     		mov	sp, r7
 6546              	.LCFI245:
 6547              		.cfi_def_cfa_register 13
 6548              		@ sp needed
 6549 0044 80BD     		pop	{r7, pc}
 6550              		.cfi_endproc
 6551              	.LFE110:
 6553              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 6554              		.align	1
 6555              		.syntax unified
 6556              		.thumb
 6557              		.thumb_func
 6559              	SPI_TxISR_16BIT:
 6560              	.LFB111:
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 177


3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6561              		.loc 1 3541 1
 6562              		.cfi_startproc
 6563              		@ args = 0, pretend = 0, frame = 8
 6564              		@ frame_needed = 1, uses_anonymous_args = 0
 6565 0000 80B5     		push	{r7, lr}
 6566              	.LCFI246:
 6567              		.cfi_def_cfa_offset 8
 6568              		.cfi_offset 7, -8
 6569              		.cfi_offset 14, -4
 6570 0002 82B0     		sub	sp, sp, #8
 6571              	.LCFI247:
 6572              		.cfi_def_cfa_offset 16
 6573 0004 00AF     		add	r7, sp, #0
 6574              	.LCFI248:
 6575              		.cfi_def_cfa_register 7
 6576 0006 7860     		str	r0, [r7, #4]
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 6577              		.loc 1 3543 42
 6578 0008 7B68     		ldr	r3, [r7, #4]
 6579 000a 1B6B     		ldr	r3, [r3, #48]
 6580              		.loc 1 3543 24
 6581 000c 1A88     		ldrh	r2, [r3]
 6582              		.loc 1 3543 7
 6583 000e 7B68     		ldr	r3, [r7, #4]
 6584 0010 1B68     		ldr	r3, [r3]
 6585              		.loc 1 3543 22
 6586 0012 DA60     		str	r2, [r3, #12]
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6587              		.loc 1 3544 20
 6588 0014 7B68     		ldr	r3, [r7, #4]
 6589 0016 1B6B     		ldr	r3, [r3, #48]
 6590 0018 9A1C     		adds	r2, r3, #2
 6591 001a 7B68     		ldr	r3, [r7, #4]
 6592 001c 1A63     		str	r2, [r3, #48]
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6593              		.loc 1 3545 7
 6594 001e 7B68     		ldr	r3, [r7, #4]
 6595 0020 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6596 0022 9BB2     		uxth	r3, r3
 6597              		.loc 1 3545 20
 6598 0024 013B     		subs	r3, r3, #1
 6599 0026 9AB2     		uxth	r2, r3
 6600 0028 7B68     		ldr	r3, [r7, #4]
 6601 002a DA86     		strh	r2, [r3, #54]	@ movhi
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6602              		.loc 1 3547 11
 6603 002c 7B68     		ldr	r3, [r7, #4]
 6604 002e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6605 0030 9BB2     		uxth	r3, r3
 6606              		.loc 1 3547 6
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 178


 6607 0032 002B     		cmp	r3, #0
 6608 0034 02D1     		bne	.L316
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6609              		.loc 1 3556 5
 6610 0036 7868     		ldr	r0, [r7, #4]
 6611 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6612              	.L316:
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6613              		.loc 1 3558 1
 6614 003c 00BF     		nop
 6615 003e 0837     		adds	r7, r7, #8
 6616              	.LCFI249:
 6617              		.cfi_def_cfa_offset 8
 6618 0040 BD46     		mov	sp, r7
 6619              	.LCFI250:
 6620              		.cfi_def_cfa_register 13
 6621              		@ sp needed
 6622 0042 80BD     		pop	{r7, pc}
 6623              		.cfi_endproc
 6624              	.LFE111:
 6626              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 6627              		.align	1
 6628              		.syntax unified
 6629              		.thumb
 6630              		.thumb_func
 6632              	SPI_WaitFlagStateUntilTimeout:
 6633              	.LFB112:
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  State flag state to check
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6634              		.loc 1 3572 1
 6635              		.cfi_startproc
 6636              		@ args = 4, pretend = 0, frame = 32
 6637              		@ frame_needed = 1, uses_anonymous_args = 0
 6638 0000 80B5     		push	{r7, lr}
 6639              	.LCFI251:
 6640              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 179


 6641              		.cfi_offset 7, -8
 6642              		.cfi_offset 14, -4
 6643 0002 88B0     		sub	sp, sp, #32
 6644              	.LCFI252:
 6645              		.cfi_def_cfa_offset 40
 6646 0004 00AF     		add	r7, sp, #0
 6647              	.LCFI253:
 6648              		.cfi_def_cfa_register 7
 6649 0006 F860     		str	r0, [r7, #12]
 6650 0008 B960     		str	r1, [r7, #8]
 6651 000a 3B60     		str	r3, [r7]
 6652 000c 1346     		mov	r3, r2
 6653 000e FB71     		strb	r3, [r7, #7]
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_timeout;
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_tickstart;
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Adjust Timeout value  in case of end of transfer */
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 6654              		.loc 1 3578 30
 6655 0010 FFF7FEFF 		bl	HAL_GetTick
 6656 0014 0246     		mov	r2, r0
 6657              		.loc 1 3578 44
 6658 0016 BB6A     		ldr	r3, [r7, #40]
 6659 0018 9B1A     		subs	r3, r3, r2
 6660              		.loc 1 3578 17
 6661 001a 3A68     		ldr	r2, [r7]
 6662 001c 1344     		add	r3, r3, r2
 6663 001e FB61     		str	r3, [r7, #28]
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
 6664              		.loc 1 3579 19
 6665 0020 FFF7FEFF 		bl	HAL_GetTick
 6666 0024 B861     		str	r0, [r7, #24]
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 6667              		.loc 1 3582 43
 6668 0026 394B     		ldr	r3, .L327
 6669 0028 1B68     		ldr	r3, [r3]
 6670 002a 5B01     		lsls	r3, r3, #5
 6671              		.loc 1 3582 50
 6672 002c 1B0D     		lsrs	r3, r3, #20
 6673              		.loc 1 3582 23
 6674 002e FA69     		ldr	r2, [r7, #28]
 6675 0030 02FB03F3 		mul	r3, r2, r3
 6676              		.loc 1 3582 9
 6677 0034 7B61     		str	r3, [r7, #20]
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 6678              		.loc 1 3584 9
 6679 0036 54E0     		b	.L318
 6680              	.L326:
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6681              		.loc 1 3586 8
 6682 0038 3B68     		ldr	r3, [r7]
 6683 003a B3F1FF3F 		cmp	r3, #-1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 180


 6684 003e 50D0     		beq	.L318
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 6685              		.loc 1 3588 13
 6686 0040 FFF7FEFF 		bl	HAL_GetTick
 6687 0044 0246     		mov	r2, r0
 6688              		.loc 1 3588 27
 6689 0046 BB69     		ldr	r3, [r7, #24]
 6690 0048 D31A     		subs	r3, r2, r3
 6691              		.loc 1 3588 10
 6692 004a FA69     		ldr	r2, [r7, #28]
 6693 004c 9A42     		cmp	r2, r3
 6694 004e 02D9     		bls	.L319
 6695              		.loc 1 3588 60 discriminator 1
 6696 0050 FB69     		ldr	r3, [r7, #28]
 6697 0052 002B     		cmp	r3, #0
 6698 0054 3DD1     		bne	.L320
 6699              	.L319:
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            and slave for their respective CRC calculation */
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6700              		.loc 1 3595 9
 6701 0056 FB68     		ldr	r3, [r7, #12]
 6702 0058 1B68     		ldr	r3, [r3]
 6703 005a 5A68     		ldr	r2, [r3, #4]
 6704 005c FB68     		ldr	r3, [r7, #12]
 6705 005e 1B68     		ldr	r3, [r3]
 6706 0060 22F0E002 		bic	r2, r2, #224
 6707 0064 5A60     		str	r2, [r3, #4]
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6708              		.loc 1 3597 24
 6709 0066 FB68     		ldr	r3, [r7, #12]
 6710 0068 5B68     		ldr	r3, [r3, #4]
 6711              		.loc 1 3597 12
 6712 006a B3F5827F 		cmp	r3, #260
 6713 006e 11D1     		bne	.L321
 6714              		.loc 1 3597 65 discriminator 1
 6715 0070 FB68     		ldr	r3, [r7, #12]
 6716 0072 9B68     		ldr	r3, [r3, #8]
 6717              		.loc 1 3597 50 discriminator 1
 6718 0074 B3F5004F 		cmp	r3, #32768
 6719 0078 04D0     		beq	.L322
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6720              		.loc 1 3598 68
 6721 007a FB68     		ldr	r3, [r7, #12]
 6722 007c 9B68     		ldr	r3, [r3, #8]
 6723              		.loc 1 3598 54
 6724 007e B3F5806F 		cmp	r3, #1024
 6725 0082 07D1     		bne	.L321
 6726              	.L322:
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Disable SPI peripheral */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 181


3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6727              		.loc 1 3601 11
 6728 0084 FB68     		ldr	r3, [r7, #12]
 6729 0086 1B68     		ldr	r3, [r3]
 6730 0088 1A68     		ldr	r2, [r3]
 6731 008a FB68     		ldr	r3, [r7, #12]
 6732 008c 1B68     		ldr	r3, [r3]
 6733 008e 22F04002 		bic	r2, r2, #64
 6734 0092 1A60     		str	r2, [r3]
 6735              	.L321:
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6736              		.loc 1 3605 23
 6737 0094 FB68     		ldr	r3, [r7, #12]
 6738 0096 9B6A     		ldr	r3, [r3, #40]
 6739              		.loc 1 3605 12
 6740 0098 B3F5005F 		cmp	r3, #8192
 6741 009c 0FD1     		bne	.L323
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 6742              		.loc 1 3607 11
 6743 009e FB68     		ldr	r3, [r7, #12]
 6744 00a0 1B68     		ldr	r3, [r3]
 6745 00a2 1A68     		ldr	r2, [r3]
 6746 00a4 FB68     		ldr	r3, [r7, #12]
 6747 00a6 1B68     		ldr	r3, [r3]
 6748 00a8 22F40052 		bic	r2, r2, #8192
 6749 00ac 1A60     		str	r2, [r3]
 6750 00ae FB68     		ldr	r3, [r7, #12]
 6751 00b0 1B68     		ldr	r3, [r3]
 6752 00b2 1A68     		ldr	r2, [r3]
 6753 00b4 FB68     		ldr	r3, [r7, #12]
 6754 00b6 1B68     		ldr	r3, [r3]
 6755 00b8 42F40052 		orr	r2, r2, #8192
 6756 00bc 1A60     		str	r2, [r3]
 6757              	.L323:
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6758              		.loc 1 3610 21
 6759 00be FB68     		ldr	r3, [r7, #12]
 6760 00c0 0122     		movs	r2, #1
 6761 00c2 83F85120 		strb	r2, [r3, #81]
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Process Unlocked */
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6762              		.loc 1 3613 9
 6763 00c6 FB68     		ldr	r3, [r7, #12]
 6764 00c8 0022     		movs	r2, #0
 6765 00ca 83F85020 		strb	r2, [r3, #80]
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
 6766              		.loc 1 3615 16
 6767 00ce 0323     		movs	r3, #3
 6768 00d0 17E0     		b	.L324
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 182


 6769              	.L320:
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop proced
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 6770              		.loc 1 3618 17
 6771 00d2 7B69     		ldr	r3, [r7, #20]
 6772              		.loc 1 3618 10
 6773 00d4 002B     		cmp	r3, #0
 6774 00d6 01D1     		bne	.L325
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         tmp_timeout = 0U;
 6775              		.loc 1 3620 21
 6776 00d8 0023     		movs	r3, #0
 6777 00da FB61     		str	r3, [r7, #28]
 6778              	.L325:
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 6779              		.loc 1 3622 12
 6780 00dc 7B69     		ldr	r3, [r7, #20]
 6781 00de 013B     		subs	r3, r3, #1
 6782 00e0 7B61     		str	r3, [r7, #20]
 6783              	.L318:
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6784              		.loc 1 3584 11
 6785 00e2 FB68     		ldr	r3, [r7, #12]
 6786 00e4 1B68     		ldr	r3, [r3]
 6787 00e6 9A68     		ldr	r2, [r3, #8]
 6788 00e8 BB68     		ldr	r3, [r7, #8]
 6789 00ea 1340     		ands	r3, r3, r2
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6790              		.loc 1 3584 48
 6791 00ec BA68     		ldr	r2, [r7, #8]
 6792 00ee 9A42     		cmp	r2, r3
 6793 00f0 0CBF     		ite	eq
 6794 00f2 0123     		moveq	r3, #1
 6795 00f4 0023     		movne	r3, #0
 6796 00f6 DBB2     		uxtb	r3, r3
 6797 00f8 1A46     		mov	r2, r3
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6798              		.loc 1 3584 57
 6799 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6800              		.loc 1 3584 9
 6801 00fc 9A42     		cmp	r2, r3
 6802 00fe 9BD1     		bne	.L326
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6803              		.loc 1 3626 10
 6804 0100 0023     		movs	r3, #0
 6805              	.L324:
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6806              		.loc 1 3627 1
 6807 0102 1846     		mov	r0, r3
 6808 0104 2037     		adds	r7, r7, #32
 6809              	.LCFI254:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 183


 6810              		.cfi_def_cfa_offset 8
 6811 0106 BD46     		mov	sp, r7
 6812              	.LCFI255:
 6813              		.cfi_def_cfa_register 13
 6814              		@ sp needed
 6815 0108 80BD     		pop	{r7, pc}
 6816              	.L328:
 6817 010a 00BF     		.align	2
 6818              	.L327:
 6819 010c 00000000 		.word	SystemCoreClock
 6820              		.cfi_endproc
 6821              	.LFE112:
 6823              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 6824              		.align	1
 6825              		.syntax unified
 6826              		.thumb
 6827              		.thumb_func
 6829              	SPI_EndRxTransaction:
 6830              	.LFB113:
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6831              		.loc 1 3638 1
 6832              		.cfi_startproc
 6833              		@ args = 0, pretend = 0, frame = 16
 6834              		@ frame_needed = 1, uses_anonymous_args = 0
 6835 0000 80B5     		push	{r7, lr}
 6836              	.LCFI256:
 6837              		.cfi_def_cfa_offset 8
 6838              		.cfi_offset 7, -8
 6839              		.cfi_offset 14, -4
 6840 0002 86B0     		sub	sp, sp, #24
 6841              	.LCFI257:
 6842              		.cfi_def_cfa_offset 32
 6843 0004 02AF     		add	r7, sp, #8
 6844              	.LCFI258:
 6845              		.cfi_def_cfa 7, 24
 6846 0006 F860     		str	r0, [r7, #12]
 6847 0008 B960     		str	r1, [r7, #8]
 6848 000a 7A60     		str	r2, [r7, #4]
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6849              		.loc 1 3639 18
 6850 000c FB68     		ldr	r3, [r7, #12]
 6851 000e 5B68     		ldr	r3, [r3, #4]
 6852              		.loc 1 3639 6
 6853 0010 B3F5827F 		cmp	r3, #260
 6854 0014 11D1     		bne	.L330
 6855              		.loc 1 3639 59 discriminator 1
 6856 0016 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 184


 6857 0018 9B68     		ldr	r3, [r3, #8]
 6858              		.loc 1 3639 44 discriminator 1
 6859 001a B3F5004F 		cmp	r3, #32768
 6860 001e 04D0     		beq	.L331
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 6861              		.loc 1 3640 62
 6862 0020 FB68     		ldr	r3, [r7, #12]
 6863 0022 9B68     		ldr	r3, [r3, #8]
 6864              		.loc 1 3640 48
 6865 0024 B3F5806F 		cmp	r3, #1024
 6866 0028 07D1     		bne	.L330
 6867              	.L331:
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI peripheral */
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 6868              		.loc 1 3643 5
 6869 002a FB68     		ldr	r3, [r7, #12]
 6870 002c 1B68     		ldr	r3, [r3]
 6871 002e 1A68     		ldr	r2, [r3]
 6872 0030 FB68     		ldr	r3, [r7, #12]
 6873 0032 1B68     		ldr	r3, [r3]
 6874 0034 22F04002 		bic	r2, r2, #64
 6875 0038 1A60     		str	r2, [r3]
 6876              	.L330:
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)
 6877              		.loc 1 3646 18
 6878 003a FB68     		ldr	r3, [r7, #12]
 6879 003c 5B68     		ldr	r3, [r3, #4]
 6880              		.loc 1 3646 6
 6881 003e B3F5827F 		cmp	r3, #260
 6882 0042 17D1     		bne	.L332
 6883              		.loc 1 3646 58 discriminator 1
 6884 0044 FB68     		ldr	r3, [r7, #12]
 6885 0046 9B68     		ldr	r3, [r3, #8]
 6886              		.loc 1 3646 44 discriminator 1
 6887 0048 B3F5806F 		cmp	r3, #1024
 6888 004c 12D1     		bne	.L332
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the RXNE reset */
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 6889              		.loc 1 3649 9
 6890 004e 7B68     		ldr	r3, [r7, #4]
 6891 0050 0093     		str	r3, [sp]
 6892 0052 BB68     		ldr	r3, [r7, #8]
 6893 0054 0022     		movs	r2, #0
 6894 0056 0121     		movs	r1, #1
 6895 0058 F868     		ldr	r0, [r7, #12]
 6896 005a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6897 005e 0346     		mov	r3, r0
 6898              		.loc 1 3649 8
 6899 0060 002B     		cmp	r3, #0
 6900 0062 1AD0     		beq	.L335
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6901              		.loc 1 3651 7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 185


 6902 0064 FB68     		ldr	r3, [r7, #12]
 6903 0066 5B6D     		ldr	r3, [r3, #84]
 6904 0068 43F02002 		orr	r2, r3, #32
 6905 006c FB68     		ldr	r3, [r7, #12]
 6906 006e 5A65     		str	r2, [r3, #84]
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 6907              		.loc 1 3652 14
 6908 0070 0323     		movs	r3, #3
 6909 0072 13E0     		b	.L334
 6910              	.L332:
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Control the BSY flag */
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6911              		.loc 1 3658 9
 6912 0074 7B68     		ldr	r3, [r7, #4]
 6913 0076 0093     		str	r3, [sp]
 6914 0078 BB68     		ldr	r3, [r7, #8]
 6915 007a 0022     		movs	r2, #0
 6916 007c 8021     		movs	r1, #128
 6917 007e F868     		ldr	r0, [r7, #12]
 6918 0080 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6919 0084 0346     		mov	r3, r0
 6920              		.loc 1 3658 8
 6921 0086 002B     		cmp	r3, #0
 6922 0088 07D0     		beq	.L335
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6923              		.loc 1 3660 7
 6924 008a FB68     		ldr	r3, [r7, #12]
 6925 008c 5B6D     		ldr	r3, [r3, #84]
 6926 008e 43F02002 		orr	r2, r3, #32
 6927 0092 FB68     		ldr	r3, [r7, #12]
 6928 0094 5A65     		str	r2, [r3, #84]
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 6929              		.loc 1 3661 14
 6930 0096 0323     		movs	r3, #3
 6931 0098 00E0     		b	.L334
 6932              	.L335:
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6933              		.loc 1 3664 10
 6934 009a 0023     		movs	r3, #0
 6935              	.L334:
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6936              		.loc 1 3665 1
 6937 009c 1846     		mov	r0, r3
 6938 009e 1037     		adds	r7, r7, #16
 6939              	.LCFI259:
 6940              		.cfi_def_cfa_offset 8
 6941 00a0 BD46     		mov	sp, r7
 6942              	.LCFI260:
 6943              		.cfi_def_cfa_register 13
 6944              		@ sp needed
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 186


 6945 00a2 80BD     		pop	{r7, pc}
 6946              		.cfi_endproc
 6947              	.LFE113:
 6949              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 6950              		.align	1
 6951              		.syntax unified
 6952              		.thumb
 6953              		.thumb_func
 6955              	SPI_EndRxTxTransaction:
 6956              	.LFB114:
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6957              		.loc 1 3675 1
 6958              		.cfi_startproc
 6959              		@ args = 0, pretend = 0, frame = 16
 6960              		@ frame_needed = 1, uses_anonymous_args = 0
 6961 0000 80B5     		push	{r7, lr}
 6962              	.LCFI261:
 6963              		.cfi_def_cfa_offset 8
 6964              		.cfi_offset 7, -8
 6965              		.cfi_offset 14, -4
 6966 0002 86B0     		sub	sp, sp, #24
 6967              	.LCFI262:
 6968              		.cfi_def_cfa_offset 32
 6969 0004 02AF     		add	r7, sp, #8
 6970              	.LCFI263:
 6971              		.cfi_def_cfa 7, 24
 6972 0006 F860     		str	r0, [r7, #12]
 6973 0008 B960     		str	r1, [r7, #8]
 6974 000a 7A60     		str	r2, [r7, #4]
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6975              		.loc 1 3677 7
 6976 000c 7B68     		ldr	r3, [r7, #4]
 6977 000e 0093     		str	r3, [sp]
 6978 0010 BB68     		ldr	r3, [r7, #8]
 6979 0012 0022     		movs	r2, #0
 6980 0014 8021     		movs	r1, #128
 6981 0016 F868     		ldr	r0, [r7, #12]
 6982 0018 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6983 001c 0346     		mov	r3, r0
 6984              		.loc 1 3677 6
 6985 001e 002B     		cmp	r3, #0
 6986 0020 07D0     		beq	.L337
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6987              		.loc 1 3679 5
 6988 0022 FB68     		ldr	r3, [r7, #12]
 6989 0024 5B6D     		ldr	r3, [r3, #84]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 187


 6990 0026 43F02002 		orr	r2, r3, #32
 6991 002a FB68     		ldr	r3, [r7, #12]
 6992 002c 5A65     		str	r2, [r3, #84]
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 6993              		.loc 1 3680 12
 6994 002e 0323     		movs	r3, #3
 6995 0030 00E0     		b	.L338
 6996              	.L337:
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6997              		.loc 1 3682 10
 6998 0032 0023     		movs	r3, #0
 6999              	.L338:
3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7000              		.loc 1 3683 1
 7001 0034 1846     		mov	r0, r3
 7002 0036 1037     		adds	r7, r7, #16
 7003              	.LCFI264:
 7004              		.cfi_def_cfa_offset 8
 7005 0038 BD46     		mov	sp, r7
 7006              	.LCFI265:
 7007              		.cfi_def_cfa_register 13
 7008              		@ sp needed
 7009 003a 80BD     		pop	{r7, pc}
 7010              		.cfi_endproc
 7011              	.LFE114:
 7013              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 7014              		.align	1
 7015              		.syntax unified
 7016              		.thumb
 7017              		.thumb_func
 7019              	SPI_CloseRxTx_ISR:
 7020              	.LFB115:
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7021              		.loc 1 3692 1
 7022              		.cfi_startproc
 7023              		@ args = 0, pretend = 0, frame = 24
 7024              		@ frame_needed = 1, uses_anonymous_args = 0
 7025 0000 80B5     		push	{r7, lr}
 7026              	.LCFI266:
 7027              		.cfi_def_cfa_offset 8
 7028              		.cfi_offset 7, -8
 7029              		.cfi_offset 14, -4
 7030 0002 86B0     		sub	sp, sp, #24
 7031              	.LCFI267:
 7032              		.cfi_def_cfa_offset 32
 7033 0004 00AF     		add	r7, sp, #0
 7034              	.LCFI268:
 7035              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 188


 7036 0006 7860     		str	r0, [r7, #4]
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7037              		.loc 1 3694 70
 7038 0008 354B     		ldr	r3, .L349
 7039 000a 1B68     		ldr	r3, [r3]
 7040 000c 354A     		ldr	r2, .L349+4
 7041 000e A2FB0323 		umull	r2, r3, r2, r3
 7042 0012 5B0A     		lsrs	r3, r3, #9
 7043              		.loc 1 3694 45
 7044 0014 6422     		movs	r2, #100
 7045 0016 02FB03F3 		mul	r3, r2, r3
 7046              		.loc 1 3694 17
 7047 001a 3B61     		str	r3, [r7, #16]
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management */
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7048              		.loc 1 3697 15
 7049 001c FFF7FEFF 		bl	HAL_GetTick
 7050 0020 7861     		str	r0, [r7, #20]
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable ERR interrupt */
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 7051              		.loc 1 3700 3
 7052 0022 7B68     		ldr	r3, [r7, #4]
 7053 0024 1B68     		ldr	r3, [r3]
 7054 0026 5A68     		ldr	r2, [r3, #4]
 7055 0028 7B68     		ldr	r3, [r7, #4]
 7056 002a 1B68     		ldr	r3, [r3]
 7057 002c 22F02002 		bic	r2, r2, #32
 7058 0030 5A60     		str	r2, [r3, #4]
 7059              	.L342:
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7060              		.loc 1 3705 15
 7061 0032 3B69     		ldr	r3, [r7, #16]
 7062              		.loc 1 3705 8
 7063 0034 002B     		cmp	r3, #0
 7064 0036 06D1     		bne	.L340
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7065              		.loc 1 3707 7
 7066 0038 7B68     		ldr	r3, [r7, #4]
 7067 003a 5B6D     		ldr	r3, [r3, #84]
 7068 003c 43F02002 		orr	r2, r3, #32
 7069 0040 7B68     		ldr	r3, [r7, #4]
 7070 0042 5A65     		str	r2, [r3, #84]
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7071              		.loc 1 3708 7
 7072 0044 09E0     		b	.L341
 7073              	.L340:
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7074              		.loc 1 3710 10
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 189


 7075 0046 3B69     		ldr	r3, [r7, #16]
 7076 0048 013B     		subs	r3, r3, #1
 7077 004a 3B61     		str	r3, [r7, #16]
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7078              		.loc 1 3711 17
 7079 004c 7B68     		ldr	r3, [r7, #4]
 7080 004e 1B68     		ldr	r3, [r3]
 7081              		.loc 1 3711 27
 7082 0050 9B68     		ldr	r3, [r3, #8]
 7083              		.loc 1 3711 32
 7084 0052 03F00203 		and	r3, r3, #2
 7085              		.loc 1 3711 3
 7086 0056 002B     		cmp	r3, #0
 7087 0058 EBD0     		beq	.L342
 7088              	.L341:
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7089              		.loc 1 3714 7
 7090 005a 7A69     		ldr	r2, [r7, #20]
 7091 005c 6421     		movs	r1, #100
 7092 005e 7868     		ldr	r0, [r7, #4]
 7093 0060 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7094 0064 0346     		mov	r3, r0
 7095              		.loc 1 3714 6
 7096 0066 002B     		cmp	r3, #0
 7097 0068 05D0     		beq	.L343
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7098              		.loc 1 3716 5
 7099 006a 7B68     		ldr	r3, [r7, #4]
 7100 006c 5B6D     		ldr	r3, [r3, #84]
 7101 006e 43F02002 		orr	r2, r3, #32
 7102 0072 7B68     		ldr	r3, [r7, #4]
 7103 0074 5A65     		str	r2, [r3, #84]
 7104              	.L343:
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7105              		.loc 1 3720 17
 7106 0076 7B68     		ldr	r3, [r7, #4]
 7107 0078 9B68     		ldr	r3, [r3, #8]
 7108              		.loc 1 3720 6
 7109 007a 002B     		cmp	r3, #0
 7110 007c 0AD1     		bne	.L344
 7111              	.LBB12:
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7112              		.loc 1 3722 5
 7113 007e 0023     		movs	r3, #0
 7114 0080 FB60     		str	r3, [r7, #12]
 7115 0082 7B68     		ldr	r3, [r7, #4]
 7116 0084 1B68     		ldr	r3, [r3]
 7117 0086 DB68     		ldr	r3, [r3, #12]
 7118 0088 FB60     		str	r3, [r7, #12]
 7119 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 190


 7120 008c 1B68     		ldr	r3, [r3]
 7121 008e 9B68     		ldr	r3, [r3, #8]
 7122 0090 FB60     		str	r3, [r7, #12]
 7123 0092 FB68     		ldr	r3, [r7, #12]
 7124              	.L344:
 7125              	.LBE12:
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7126              		.loc 1 3753 13
 7127 0094 7B68     		ldr	r3, [r7, #4]
 7128 0096 5B6D     		ldr	r3, [r3, #84]
 7129              		.loc 1 3753 8
 7130 0098 002B     		cmp	r3, #0
 7131 009a 15D1     		bne	.L345
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 7132              		.loc 1 3755 15
 7133 009c 7B68     		ldr	r3, [r7, #4]
 7134 009e 93F85130 		ldrb	r3, [r3, #81]
 7135 00a2 DBB2     		uxtb	r3, r3
 7136              		.loc 1 3755 10
 7137 00a4 042B     		cmp	r3, #4
 7138 00a6 07D1     		bne	.L346
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 7139              		.loc 1 3757 21
 7140 00a8 7B68     		ldr	r3, [r7, #4]
 7141 00aa 0122     		movs	r2, #1
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 191


 7142 00ac 83F85120 		strb	r2, [r3, #81]
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
3759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 7143              		.loc 1 3762 9
 7144 00b0 7868     		ldr	r0, [r7, #4]
 7145 00b2 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7146              		.loc 1 3789 1
 7147 00b6 0EE0     		b	.L348
 7148              	.L346:
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 7149              		.loc 1 3767 21
 7150 00b8 7B68     		ldr	r3, [r7, #4]
 7151 00ba 0122     		movs	r2, #1
 7152 00bc 83F85120 		strb	r2, [r3, #81]
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7153              		.loc 1 3772 9
 7154 00c0 7868     		ldr	r0, [r7, #4]
 7155 00c2 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 7156              		.loc 1 3789 1
 7157 00c6 06E0     		b	.L348
 7158              	.L345:
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
 7159              		.loc 1 3778 19
 7160 00c8 7B68     		ldr	r3, [r7, #4]
 7161 00ca 0122     		movs	r2, #1
 7162 00cc 83F85120 		strb	r2, [r3, #81]
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 192


 7163              		.loc 1 3783 7
 7164 00d0 7868     		ldr	r0, [r7, #4]
 7165 00d2 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7166              	.L348:
 7167              		.loc 1 3789 1
 7168 00d6 00BF     		nop
 7169 00d8 1837     		adds	r7, r7, #24
 7170              	.LCFI269:
 7171              		.cfi_def_cfa_offset 8
 7172 00da BD46     		mov	sp, r7
 7173              	.LCFI270:
 7174              		.cfi_def_cfa_register 13
 7175              		@ sp needed
 7176 00dc 80BD     		pop	{r7, pc}
 7177              	.L350:
 7178 00de 00BF     		.align	2
 7179              	.L349:
 7180 00e0 00000000 		.word	SystemCoreClock
 7181 00e4 F1197605 		.word	91625969
 7182              		.cfi_endproc
 7183              	.LFE115:
 7185              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 7186              		.align	1
 7187              		.syntax unified
 7188              		.thumb
 7189              		.thumb_func
 7191              	SPI_CloseRx_ISR:
 7192              	.LFB116:
3790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7193              		.loc 1 3798 1
 7194              		.cfi_startproc
 7195              		@ args = 0, pretend = 0, frame = 16
 7196              		@ frame_needed = 1, uses_anonymous_args = 0
 7197 0000 80B5     		push	{r7, lr}
 7198              	.LCFI271:
 7199              		.cfi_def_cfa_offset 8
 7200              		.cfi_offset 7, -8
 7201              		.cfi_offset 14, -4
 7202 0002 84B0     		sub	sp, sp, #16
 7203              	.LCFI272:
 7204              		.cfi_def_cfa_offset 24
 7205 0004 00AF     		add	r7, sp, #0
 7206              	.LCFI273:
 7207              		.cfi_def_cfa_register 7
 7208 0006 7860     		str	r0, [r7, #4]
3799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 7209              		.loc 1 3800 3
 7210 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 193


 7211 000a 1B68     		ldr	r3, [r3]
 7212 000c 5A68     		ldr	r2, [r3, #4]
 7213 000e 7B68     		ldr	r3, [r7, #4]
 7214 0010 1B68     		ldr	r3, [r3]
 7215 0012 22F06002 		bic	r2, r2, #96
 7216 0016 5A60     		str	r2, [r3, #4]
3801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7217              		.loc 1 3803 7
 7218 0018 FFF7FEFF 		bl	HAL_GetTick
 7219 001c 0346     		mov	r3, r0
 7220 001e 1A46     		mov	r2, r3
 7221 0020 6421     		movs	r1, #100
 7222 0022 7868     		ldr	r0, [r7, #4]
 7223 0024 FFF7FEFF 		bl	SPI_EndRxTransaction
 7224 0028 0346     		mov	r3, r0
 7225              		.loc 1 3803 6
 7226 002a 002B     		cmp	r3, #0
 7227 002c 05D0     		beq	.L352
3804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7228              		.loc 1 3805 5
 7229 002e 7B68     		ldr	r3, [r7, #4]
 7230 0030 5B6D     		ldr	r3, [r3, #84]
 7231 0032 43F02002 		orr	r2, r3, #32
 7232 0036 7B68     		ldr	r3, [r7, #4]
 7233 0038 5A65     		str	r2, [r3, #84]
 7234              	.L352:
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7235              		.loc 1 3809 17
 7236 003a 7B68     		ldr	r3, [r7, #4]
 7237 003c 9B68     		ldr	r3, [r3, #8]
 7238              		.loc 1 3809 6
 7239 003e 002B     		cmp	r3, #0
 7240 0040 0AD1     		bne	.L353
 7241              	.LBB13:
3810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7242              		.loc 1 3811 5
 7243 0042 0023     		movs	r3, #0
 7244 0044 FB60     		str	r3, [r7, #12]
 7245 0046 7B68     		ldr	r3, [r7, #4]
 7246 0048 1B68     		ldr	r3, [r3]
 7247 004a DB68     		ldr	r3, [r3, #12]
 7248 004c FB60     		str	r3, [r7, #12]
 7249 004e 7B68     		ldr	r3, [r7, #4]
 7250 0050 1B68     		ldr	r3, [r3]
 7251 0052 9B68     		ldr	r3, [r3, #8]
 7252 0054 FB60     		str	r3, [r7, #12]
 7253 0056 FB68     		ldr	r3, [r7, #12]
 7254              	.L353:
 7255              	.LBE13:
3812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 194


3813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7256              		.loc 1 3813 15
 7257 0058 7B68     		ldr	r3, [r7, #4]
 7258 005a 0122     		movs	r2, #1
 7259 005c 83F85120 		strb	r2, [r3, #81]
3814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7260              		.loc 1 3842 13
 7261 0060 7B68     		ldr	r3, [r7, #4]
 7262 0062 5B6D     		ldr	r3, [r3, #84]
 7263              		.loc 1 3842 8
 7264 0064 002B     		cmp	r3, #0
 7265 0066 03D1     		bne	.L354
3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user Rx complete callback */
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 7266              		.loc 1 3848 7
 7267 0068 7868     		ldr	r0, [r7, #4]
 7268 006a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 195


3857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7269              		.loc 1 3863 1
 7270 006e 02E0     		b	.L356
 7271              	.L354:
3857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7272              		.loc 1 3857 7
 7273 0070 7868     		ldr	r0, [r7, #4]
 7274 0072 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7275              	.L356:
 7276              		.loc 1 3863 1
 7277 0076 00BF     		nop
 7278 0078 1037     		adds	r7, r7, #16
 7279              	.LCFI274:
 7280              		.cfi_def_cfa_offset 8
 7281 007a BD46     		mov	sp, r7
 7282              	.LCFI275:
 7283              		.cfi_def_cfa_register 13
 7284              		@ sp needed
 7285 007c 80BD     		pop	{r7, pc}
 7286              		.cfi_endproc
 7287              	.LFE116:
 7289              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 7290              		.align	1
 7291              		.syntax unified
 7292              		.thumb
 7293              		.thumb_func
 7295              	SPI_CloseTx_ISR:
 7296              	.LFB117:
3864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7297              		.loc 1 3872 1
 7298              		.cfi_startproc
 7299              		@ args = 0, pretend = 0, frame = 24
 7300              		@ frame_needed = 1, uses_anonymous_args = 0
 7301 0000 80B5     		push	{r7, lr}
 7302              	.LCFI276:
 7303              		.cfi_def_cfa_offset 8
 7304              		.cfi_offset 7, -8
 7305              		.cfi_offset 14, -4
 7306 0002 86B0     		sub	sp, sp, #24
 7307              	.LCFI277:
 7308              		.cfi_def_cfa_offset 32
 7309 0004 00AF     		add	r7, sp, #0
 7310              	.LCFI278:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 196


 7311              		.cfi_def_cfa_register 7
 7312 0006 7860     		str	r0, [r7, #4]
3873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7313              		.loc 1 3874 70
 7314 0008 2C4B     		ldr	r3, .L366
 7315 000a 1B68     		ldr	r3, [r3]
 7316 000c 2C4A     		ldr	r2, .L366+4
 7317 000e A2FB0323 		umull	r2, r3, r2, r3
 7318 0012 5B0A     		lsrs	r3, r3, #9
 7319              		.loc 1 3874 45
 7320 0014 6422     		movs	r2, #100
 7321 0016 02FB03F3 		mul	r3, r2, r3
 7322              		.loc 1 3874 17
 7323 001a 3B61     		str	r3, [r7, #16]
3875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7324              		.loc 1 3877 15
 7325 001c FFF7FEFF 		bl	HAL_GetTick
 7326 0020 7861     		str	r0, [r7, #20]
 7327              	.L360:
3878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7328              		.loc 1 3882 15
 7329 0022 3B69     		ldr	r3, [r7, #16]
 7330              		.loc 1 3882 8
 7331 0024 002B     		cmp	r3, #0
 7332 0026 06D1     		bne	.L358
3883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7333              		.loc 1 3884 7
 7334 0028 7B68     		ldr	r3, [r7, #4]
 7335 002a 5B6D     		ldr	r3, [r3, #84]
 7336 002c 43F02002 		orr	r2, r3, #32
 7337 0030 7B68     		ldr	r3, [r7, #4]
 7338 0032 5A65     		str	r2, [r3, #84]
3885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7339              		.loc 1 3885 7
 7340 0034 09E0     		b	.L359
 7341              	.L358:
3886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7342              		.loc 1 3887 10
 7343 0036 3B69     		ldr	r3, [r7, #16]
 7344 0038 013B     		subs	r3, r3, #1
 7345 003a 3B61     		str	r3, [r7, #16]
3888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7346              		.loc 1 3888 17
 7347 003c 7B68     		ldr	r3, [r7, #4]
 7348 003e 1B68     		ldr	r3, [r3]
 7349              		.loc 1 3888 27
 7350 0040 9B68     		ldr	r3, [r3, #8]
 7351              		.loc 1 3888 32
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 197


 7352 0042 03F00203 		and	r3, r3, #2
 7353              		.loc 1 3888 3
 7354 0046 002B     		cmp	r3, #0
 7355 0048 EBD0     		beq	.L360
 7356              	.L359:
3889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 7357              		.loc 1 3891 3
 7358 004a 7B68     		ldr	r3, [r7, #4]
 7359 004c 1B68     		ldr	r3, [r3]
 7360 004e 5A68     		ldr	r2, [r3, #4]
 7361 0050 7B68     		ldr	r3, [r7, #4]
 7362 0052 1B68     		ldr	r3, [r3]
 7363 0054 22F0A002 		bic	r2, r2, #160
 7364 0058 5A60     		str	r2, [r3, #4]
3892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7365              		.loc 1 3894 7
 7366 005a 7A69     		ldr	r2, [r7, #20]
 7367 005c 6421     		movs	r1, #100
 7368 005e 7868     		ldr	r0, [r7, #4]
 7369 0060 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7370 0064 0346     		mov	r3, r0
 7371              		.loc 1 3894 6
 7372 0066 002B     		cmp	r3, #0
 7373 0068 05D0     		beq	.L361
3895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7374              		.loc 1 3896 5
 7375 006a 7B68     		ldr	r3, [r7, #4]
 7376 006c 5B6D     		ldr	r3, [r3, #84]
 7377 006e 43F02002 		orr	r2, r3, #32
 7378 0072 7B68     		ldr	r3, [r7, #4]
 7379 0074 5A65     		str	r2, [r3, #84]
 7380              	.L361:
3897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7381              		.loc 1 3900 17
 7382 0076 7B68     		ldr	r3, [r7, #4]
 7383 0078 9B68     		ldr	r3, [r3, #8]
 7384              		.loc 1 3900 6
 7385 007a 002B     		cmp	r3, #0
 7386 007c 0AD1     		bne	.L362
 7387              	.LBB14:
3901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7388              		.loc 1 3902 5
 7389 007e 0023     		movs	r3, #0
 7390 0080 FB60     		str	r3, [r7, #12]
 7391 0082 7B68     		ldr	r3, [r7, #4]
 7392 0084 1B68     		ldr	r3, [r3]
 7393 0086 DB68     		ldr	r3, [r3, #12]
 7394 0088 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 198


 7395 008a 7B68     		ldr	r3, [r7, #4]
 7396 008c 1B68     		ldr	r3, [r3]
 7397 008e 9B68     		ldr	r3, [r3, #8]
 7398 0090 FB60     		str	r3, [r7, #12]
 7399 0092 FB68     		ldr	r3, [r7, #12]
 7400              	.L362:
 7401              	.LBE14:
3903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7402              		.loc 1 3905 15
 7403 0094 7B68     		ldr	r3, [r7, #4]
 7404 0096 0122     		movs	r2, #1
 7405 0098 83F85120 		strb	r2, [r3, #81]
3906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 7406              		.loc 1 3906 11
 7407 009c 7B68     		ldr	r3, [r7, #4]
 7408 009e 5B6D     		ldr	r3, [r3, #84]
 7409              		.loc 1 3906 6
 7410 00a0 002B     		cmp	r3, #0
 7411 00a2 03D0     		beq	.L363
3907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user error callback */
3909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 7412              		.loc 1 3912 5
 7413 00a4 7868     		ldr	r0, [r7, #4]
 7414 00a6 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user Rx complete callback */
3918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7415              		.loc 1 3924 1
 7416 00aa 02E0     		b	.L365
 7417              	.L363:
3921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7418              		.loc 1 3921 5
 7419 00ac 7868     		ldr	r0, [r7, #4]
 7420 00ae FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 7421              	.L365:
 7422              		.loc 1 3924 1
 7423 00b2 00BF     		nop
 7424 00b4 1837     		adds	r7, r7, #24
 7425              	.LCFI279:
 7426              		.cfi_def_cfa_offset 8
 7427 00b6 BD46     		mov	sp, r7
 7428              	.LCFI280:
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 199


 7429              		.cfi_def_cfa_register 13
 7430              		@ sp needed
 7431 00b8 80BD     		pop	{r7, pc}
 7432              	.L367:
 7433 00ba 00BF     		.align	2
 7434              	.L366:
 7435 00bc 00000000 		.word	SystemCoreClock
 7436 00c0 F1197605 		.word	91625969
 7437              		.cfi_endproc
 7438              	.LFE117:
 7440              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 7441              		.align	1
 7442              		.syntax unified
 7443              		.thumb
 7444              		.thumb_func
 7446              	SPI_AbortRx_ISR:
 7447              	.LFB118:
3925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7448              		.loc 1 3933 1
 7449              		.cfi_startproc
 7450              		@ args = 0, pretend = 0, frame = 16
 7451              		@ frame_needed = 1, uses_anonymous_args = 0
 7452              		@ link register save eliminated.
 7453 0000 80B4     		push	{r7}
 7454              	.LCFI281:
 7455              		.cfi_def_cfa_offset 4
 7456              		.cfi_offset 7, -4
 7457 0002 85B0     		sub	sp, sp, #20
 7458              	.LCFI282:
 7459              		.cfi_def_cfa_offset 24
 7460 0004 00AF     		add	r7, sp, #0
 7461              	.LCFI283:
 7462              		.cfi_def_cfa_register 7
 7463 0006 7860     		str	r0, [r7, #4]
3934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
 7464              		.loc 1 3934 17
 7465 0008 0023     		movs	r3, #0
 7466 000a FB60     		str	r3, [r7, #12]
3935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7467              		.loc 1 3935 70
 7468 000c 1D4B     		ldr	r3, .L372
 7469 000e 1B68     		ldr	r3, [r3]
 7470 0010 1D4A     		ldr	r2, .L372+4
 7471 0012 A2FB0323 		umull	r2, r3, r2, r3
 7472 0016 5B0A     		lsrs	r3, r3, #9
 7473              		.loc 1 3935 45
 7474 0018 6422     		movs	r2, #100
 7475 001a 02FB03F3 		mul	r3, r2, r3
 7476              		.loc 1 3935 17
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 200


 7477 001e BB60     		str	r3, [r7, #8]
 7478              	.L371:
3936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7479              		.loc 1 3940 15
 7480 0020 BB68     		ldr	r3, [r7, #8]
 7481              		.loc 1 3940 8
 7482 0022 002B     		cmp	r3, #0
 7483 0024 06D1     		bne	.L369
3941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 7484              		.loc 1 3942 7
 7485 0026 7B68     		ldr	r3, [r7, #4]
 7486 0028 5B6D     		ldr	r3, [r3, #84]
 7487 002a 43F04002 		orr	r2, r3, #64
 7488 002e 7B68     		ldr	r3, [r7, #4]
 7489 0030 5A65     		str	r2, [r3, #84]
3943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7490              		.loc 1 3943 7
 7491 0032 09E0     		b	.L370
 7492              	.L369:
3944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7493              		.loc 1 3945 10
 7494 0034 BB68     		ldr	r3, [r7, #8]
 7495 0036 013B     		subs	r3, r3, #1
 7496 0038 BB60     		str	r3, [r7, #8]
3946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7497              		.loc 1 3946 17
 7498 003a 7B68     		ldr	r3, [r7, #4]
 7499 003c 1B68     		ldr	r3, [r3]
 7500              		.loc 1 3946 27
 7501 003e 9B68     		ldr	r3, [r3, #8]
 7502              		.loc 1 3946 32
 7503 0040 03F00203 		and	r3, r3, #2
 7504              		.loc 1 3946 3
 7505 0044 002B     		cmp	r3, #0
 7506 0046 EBD0     		beq	.L371
 7507              	.L370:
3947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7508              		.loc 1 3949 3
 7509 0048 7B68     		ldr	r3, [r7, #4]
 7510 004a 1B68     		ldr	r3, [r3]
 7511 004c 1A68     		ldr	r2, [r3]
 7512 004e 7B68     		ldr	r3, [r7, #4]
 7513 0050 1B68     		ldr	r3, [r3]
 7514 0052 22F04002 		bic	r2, r2, #64
 7515 0056 1A60     		str	r2, [r3]
3950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7516              		.loc 1 3952 3
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 201


 7517 0058 7B68     		ldr	r3, [r7, #4]
 7518 005a 1B68     		ldr	r3, [r3]
 7519 005c 5A68     		ldr	r2, [r3, #4]
 7520 005e 7B68     		ldr	r3, [r7, #4]
 7521 0060 1B68     		ldr	r3, [r3]
 7522 0062 22F0E002 		bic	r2, r2, #224
 7523 0066 5A60     		str	r2, [r3, #4]
3953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Flush Data Register by a blank read */
3955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
 7524              		.loc 1 3955 12
 7525 0068 7B68     		ldr	r3, [r7, #4]
 7526 006a 1B68     		ldr	r3, [r3]
 7527 006c DB68     		ldr	r3, [r3, #12]
 7528              		.loc 1 3955 10
 7529 006e FB60     		str	r3, [r7, #12]
3956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
 7530              		.loc 1 3957 3
 7531 0070 FB68     		ldr	r3, [r7, #12]
3958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7532              		.loc 1 3959 15
 7533 0072 7B68     		ldr	r3, [r7, #4]
 7534 0074 0722     		movs	r2, #7
 7535 0076 83F85120 		strb	r2, [r3, #81]
3960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7536              		.loc 1 3960 1
 7537 007a 00BF     		nop
 7538 007c 1437     		adds	r7, r7, #20
 7539              	.LCFI284:
 7540              		.cfi_def_cfa_offset 4
 7541 007e BD46     		mov	sp, r7
 7542              	.LCFI285:
 7543              		.cfi_def_cfa_register 13
 7544              		@ sp needed
 7545 0080 80BC     		pop	{r7}
 7546              	.LCFI286:
 7547              		.cfi_restore 7
 7548              		.cfi_def_cfa_offset 0
 7549 0082 7047     		bx	lr
 7550              	.L373:
 7551              		.align	2
 7552              	.L372:
 7553 0084 00000000 		.word	SystemCoreClock
 7554 0088 F1197605 		.word	91625969
 7555              		.cfi_endproc
 7556              	.LFE118:
 7558              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 7559              		.align	1
 7560              		.syntax unified
 7561              		.thumb
 7562              		.thumb_func
 7564              	SPI_AbortTx_ISR:
 7565              	.LFB119:
3961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 202


3963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7566              		.loc 1 3969 1
 7567              		.cfi_startproc
 7568              		@ args = 0, pretend = 0, frame = 8
 7569              		@ frame_needed = 1, uses_anonymous_args = 0
 7570              		@ link register save eliminated.
 7571 0000 80B4     		push	{r7}
 7572              	.LCFI287:
 7573              		.cfi_def_cfa_offset 4
 7574              		.cfi_offset 7, -4
 7575 0002 83B0     		sub	sp, sp, #12
 7576              	.LCFI288:
 7577              		.cfi_def_cfa_offset 16
 7578 0004 00AF     		add	r7, sp, #0
 7579              	.LCFI289:
 7580              		.cfi_def_cfa_register 7
 7581 0006 7860     		str	r0, [r7, #4]
3970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 7582              		.loc 1 3971 3
 7583 0008 7B68     		ldr	r3, [r7, #4]
 7584 000a 1B68     		ldr	r3, [r3]
 7585 000c 5A68     		ldr	r2, [r3, #4]
 7586 000e 7B68     		ldr	r3, [r7, #4]
 7587 0010 1B68     		ldr	r3, [r3]
 7588 0012 22F08002 		bic	r2, r2, #128
 7589 0016 5A60     		str	r2, [r3, #4]
3972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7590              		.loc 1 3974 3
 7591 0018 7B68     		ldr	r3, [r7, #4]
 7592 001a 1B68     		ldr	r3, [r3]
 7593 001c 1A68     		ldr	r2, [r3]
 7594 001e 7B68     		ldr	r3, [r7, #4]
 7595 0020 1B68     		ldr	r3, [r3]
 7596 0022 22F04002 		bic	r2, r2, #64
 7597 0026 1A60     		str	r2, [r3]
3975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7598              		.loc 1 3976 15
 7599 0028 7B68     		ldr	r3, [r7, #4]
 7600 002a 0722     		movs	r2, #7
 7601 002c 83F85120 		strb	r2, [r3, #81]
3977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7602              		.loc 1 3977 1
 7603 0030 00BF     		nop
 7604 0032 0C37     		adds	r7, r7, #12
 7605              	.LCFI290:
 7606              		.cfi_def_cfa_offset 4
 7607 0034 BD46     		mov	sp, r7
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 203


 7608              	.LCFI291:
 7609              		.cfi_def_cfa_register 13
 7610              		@ sp needed
 7611 0036 80BC     		pop	{r7}
 7612              	.LCFI292:
 7613              		.cfi_restore 7
 7614              		.cfi_def_cfa_offset 0
 7615 0038 7047     		bx	lr
 7616              		.cfi_endproc
 7617              	.LFE119:
 7619              		.text
 7620              	.Letext0:
 7621              		.file 2 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 7622              		.file 3 "d:\\portable programs\\stm32-my-toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\
 7623              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 7624              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 7625              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7626              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7627              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 7628              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 204


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_spi.c
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:18     .text.HAL_SPI_Init:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:24     .text.HAL_SPI_Init:00000000 HAL_SPI_Init
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:271    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:189    .text.HAL_SPI_DeInit:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:195    .text.HAL_SPI_DeInit:00000000 HAL_SPI_DeInit
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:313    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:265    .text.HAL_SPI_MspInit:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:307    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:349    .text.HAL_SPI_Transmit:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:355    .text.HAL_SPI_Transmit:00000000 HAL_SPI_Transmit
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6955   .text.SPI_EndRxTxTransaction:00000000 SPI_EndRxTxTransaction
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:816    .text.HAL_SPI_Receive:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:822    .text.HAL_SPI_Receive:00000000 HAL_SPI_Receive
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:1219   .text.HAL_SPI_TransmitReceive:00000000 HAL_SPI_TransmitReceive
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6829   .text.SPI_EndRxTransaction:00000000 SPI_EndRxTransaction
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:1213   .text.HAL_SPI_TransmitReceive:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:1823   .text.HAL_SPI_Transmit_IT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:1829   .text.HAL_SPI_Transmit_IT:00000000 HAL_SPI_Transmit_IT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2025   .text.HAL_SPI_Transmit_IT:0000010c $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6559   .text.SPI_TxISR_16BIT:00000000 SPI_TxISR_16BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6483   .text.SPI_TxISR_8BIT:00000000 SPI_TxISR_8BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2031   .text.HAL_SPI_Receive_IT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2037   .text.HAL_SPI_Receive_IT:00000000 HAL_SPI_Receive_IT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2266   .text.HAL_SPI_TransmitReceive_IT:00000000 HAL_SPI_TransmitReceive_IT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2254   .text.HAL_SPI_Receive_IT:00000134 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6408   .text.SPI_RxISR_16BIT:00000000 SPI_RxISR_16BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6331   .text.SPI_RxISR_8BIT:00000000 SPI_RxISR_8BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2260   .text.HAL_SPI_TransmitReceive_IT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2475   .text.HAL_SPI_TransmitReceive_IT:00000118 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6153   .text.SPI_2linesRxISR_16BIT:00000000 SPI_2linesRxISR_16BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6243   .text.SPI_2linesTxISR_16BIT:00000000 SPI_2linesTxISR_16BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5970   .text.SPI_2linesRxISR_8BIT:00000000 SPI_2linesRxISR_8BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6062   .text.SPI_2linesTxISR_8BIT:00000000 SPI_2linesTxISR_8BIT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2483   .text.HAL_SPI_Transmit_DMA:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2489   .text.HAL_SPI_Transmit_DMA:00000000 HAL_SPI_Transmit_DMA
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2734   .text.HAL_SPI_Transmit_DMA:00000158 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5424   .text.SPI_DMAHalfTransmitCplt:00000000 SPI_DMAHalfTransmitCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5051   .text.SPI_DMATransmitCplt:00000000 SPI_DMATransmitCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5556   .text.SPI_DMAError:00000000 SPI_DMAError
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2741   .text.HAL_SPI_Receive_DMA:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:2747   .text.HAL_SPI_Receive_DMA:00000000 HAL_SPI_Receive_DMA
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3026   .text.HAL_SPI_TransmitReceive_DMA:00000000 HAL_SPI_TransmitReceive_DMA
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3013   .text.HAL_SPI_Receive_DMA:0000017c $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5468   .text.SPI_DMAHalfReceiveCplt:00000000 SPI_DMAHalfReceiveCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5181   .text.SPI_DMAReceiveCplt:00000000 SPI_DMAReceiveCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3020   .text.HAL_SPI_TransmitReceive_DMA:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3371   .text.HAL_SPI_TransmitReceive_DMA:000001e0 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5512   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 SPI_DMAHalfTransmitReceiveCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5311   .text.SPI_DMATransmitReceiveCplt:00000000 SPI_DMATransmitReceiveCplt
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3380   .text.HAL_SPI_Abort:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3386   .text.HAL_SPI_Abort:00000000 HAL_SPI_Abort
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3695   .text.HAL_SPI_Abort:000001b8 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7564   .text.SPI_AbortTx_ISR:00000000 SPI_AbortTx_ISR
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7446   .text.SPI_AbortRx_ISR:00000000 SPI_AbortRx_ISR
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3703   .text.HAL_SPI_Abort_IT:00000000 $t
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 205


C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:3709   .text.HAL_SPI_Abort_IT:00000000 HAL_SPI_Abort_IT
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4919   .text.HAL_SPI_AbortCpltCallback:00000000 HAL_SPI_AbortCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4042   .text.HAL_SPI_Abort_IT:000001cc $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5670   .text.SPI_DMATxAbortCallback:00000000 SPI_DMATxAbortCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5830   .text.SPI_DMARxAbortCallback:00000000 SPI_DMARxAbortCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4052   .text.HAL_SPI_DMAPause:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4058   .text.HAL_SPI_DMAPause:00000000 HAL_SPI_DMAPause
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4122   .text.HAL_SPI_DMAResume:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4128   .text.HAL_SPI_DMAResume:00000000 HAL_SPI_DMAResume
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4192   .text.HAL_SPI_DMAStop:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4198   .text.HAL_SPI_DMAStop:00000000 HAL_SPI_DMAStop
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4297   .text.HAL_SPI_IRQHandler:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4303   .text.HAL_SPI_IRQHandler:00000000 HAL_SPI_IRQHandler
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4877   .text.HAL_SPI_ErrorCallback:00000000 HAL_SPI_ErrorCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4614   .text.HAL_SPI_IRQHandler:000001c8 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5618   .text.SPI_DMAAbortOnError:00000000 SPI_DMAAbortOnError
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4619   .text.HAL_SPI_TxCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4625   .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4661   .text.HAL_SPI_RxCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4667   .text.HAL_SPI_RxCpltCallback:00000000 HAL_SPI_RxCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4703   .text.HAL_SPI_TxRxCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4709   .text.HAL_SPI_TxRxCpltCallback:00000000 HAL_SPI_TxRxCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4745   .text.HAL_SPI_TxHalfCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4751   .text.HAL_SPI_TxHalfCpltCallback:00000000 HAL_SPI_TxHalfCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4787   .text.HAL_SPI_RxHalfCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4793   .text.HAL_SPI_RxHalfCpltCallback:00000000 HAL_SPI_RxHalfCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4829   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4835   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 HAL_SPI_TxRxHalfCpltCallback
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4871   .text.HAL_SPI_ErrorCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4913   .text.HAL_SPI_AbortCpltCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4955   .text.HAL_SPI_GetState:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:4961   .text.HAL_SPI_GetState:00000000 HAL_SPI_GetState
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5001   .text.HAL_SPI_GetError:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5007   .text.HAL_SPI_GetError:00000000 HAL_SPI_GetError
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5046   .text.SPI_DMATransmitCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5176   .text.SPI_DMAReceiveCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5306   .text.SPI_DMATransmitReceiveCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5419   .text.SPI_DMAHalfTransmitCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5463   .text.SPI_DMAHalfReceiveCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5507   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5551   .text.SPI_DMAError:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5613   .text.SPI_DMAAbortOnError:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5665   .text.SPI_DMATxAbortCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5819   .text.SPI_DMATxAbortCallback:000000bc $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5825   .text.SPI_DMARxAbortCallback:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:5965   .text.SPI_2linesRxISR_8BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7019   .text.SPI_CloseRxTx_ISR:00000000 SPI_CloseRxTx_ISR
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6057   .text.SPI_2linesTxISR_8BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6148   .text.SPI_2linesRxISR_16BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6238   .text.SPI_2linesTxISR_16BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6326   .text.SPI_RxISR_8BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7191   .text.SPI_CloseRx_ISR:00000000 SPI_CloseRx_ISR
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6403   .text.SPI_RxISR_16BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6478   .text.SPI_TxISR_8BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7295   .text.SPI_CloseTx_ISR:00000000 SPI_CloseTx_ISR
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6554   .text.SPI_TxISR_16BIT:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6627   .text.SPI_WaitFlagStateUntilTimeout:00000000 $t
ARM GAS  C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s 			page 206


C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6632   .text.SPI_WaitFlagStateUntilTimeout:00000000 SPI_WaitFlagStateUntilTimeout
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6819   .text.SPI_WaitFlagStateUntilTimeout:0000010c $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6824   .text.SPI_EndRxTransaction:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:6950   .text.SPI_EndRxTxTransaction:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7014   .text.SPI_CloseRxTx_ISR:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7180   .text.SPI_CloseRxTx_ISR:000000e0 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7186   .text.SPI_CloseRx_ISR:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7290   .text.SPI_CloseTx_ISR:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7435   .text.SPI_CloseTx_ISR:000000bc $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7441   .text.SPI_AbortRx_ISR:00000000 $t
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7553   .text.SPI_AbortRx_ISR:00000084 $d
C:\Users\Matvey\AppData\Local\Temp\ccTilGgb.s:7559   .text.SPI_AbortTx_ISR:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
SystemCoreClock
HAL_DMA_Abort_IT
